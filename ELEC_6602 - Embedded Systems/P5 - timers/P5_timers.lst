;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 4/16/2022 3:36:36 PM
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0xFFFC2000  	536936444
0x0004	0x04C90000  	1225
0x0008	0x03690000  	873
0x000C	0x03690000  	873
0x0010	0x03690000  	873
0x0014	0x03690000  	873
0x0018	0x03690000  	873
0x001C	0x03690000  	873
0x0020	0x03690000  	873
0x0024	0x03690000  	873
0x0028	0x03690000  	873
0x002C	0x03690000  	873
0x0030	0x03690000  	873
0x0034	0x03690000  	873
0x0038	0x03690000  	873
0x003C	0x03690000  	873
0x0040	0x03690000  	873
0x0044	0x03690000  	873
0x0048	0x03690000  	873
0x004C	0x03690000  	873
0x0050	0x03690000  	873
0x0054	0x03690000  	873
0x0058	0x03690000  	873
0x005C	0x03690000  	873
0x0060	0x03690000  	873
0x0064	0x03690000  	873
0x0068	0x03690000  	873
0x006C	0x03690000  	873
0x0070	0x03690000  	873
0x0074	0x03690000  	873
0x0078	0x03690000  	873
0x007C	0x03690000  	873
0x0080	0x03690000  	873
0x0084	0x03690000  	873
0x0088	0x03690000  	873
0x008C	0x03690000  	873
0x0090	0x03690000  	873
0x0094	0x03690000  	873
0x0098	0x03690000  	873
0x009C	0x03690000  	873
0x00A0	0x03690000  	873
0x00A4	0x03690000  	873
0x00A8	0x03690000  	873
0x00AC	0x03690000  	873
0x00B0	0x03690000  	873
0x00B4	0x03690000  	873
0x00B8	0x03690000  	873
0x00BC	0x03690000  	873
0x00C0	0x03690000  	873
0x00C4	0x03690000  	873
0x00C8	0x03690000  	873
0x00CC	0x03690000  	873
0x00D0	0x03690000  	873
0x00D4	0x03690000  	873
0x00D8	0x03690000  	873
0x00DC	0x03690000  	873
0x00E0	0x03690000  	873
0x00E4	0x03690000  	873
0x00E8	0x03690000  	873
0x00EC	0x03690000  	873
0x00F0	0x03690000  	873
0x00F4	0x03690000  	873
0x00F8	0x03690000  	873
0x00FC	0x03690000  	873
0x0100	0x03690000  	873
0x0104	0x03690000  	873
0x0108	0x03690000  	873
0x010C	0x03690000  	873
0x0110	0x03690000  	873
0x0114	0x03690000  	873
0x0118	0x03690000  	873
0x011C	0x03690000  	873
0x0120	0x03690000  	873
0x0124	0x03690000  	873
0x0128	0x03690000  	873
0x012C	0x03690000  	873
0x0130	0x03690000  	873
0x0134	0x03690000  	873
0x0138	0x03690000  	873
0x013C	0x03690000  	873
0x0140	0x03690000  	873
0x0144	0x03690000  	873
0x0148	0x03690000  	873
0x014C	0x03690000  	873
; end of ____SysVT
_main:
;P5_timers.c, 127 :: 		void main() {
0x04C8	0xB0CB    SUB	SP, SP, #300
0x04CA	0xF7FFFF51  BL	880
0x04CE	0xF000FB27  BL	2848
0x04D2	0xF7FFFF3F  BL	852
;P5_timers.c, 129 :: 		uint32_t sequence_count = 0;
; sequence_count start address is: 8 (R2)
0x04D6	0xF04F0200  MOV	R2, #0
;P5_timers.c, 130 :: 		uint8_t div_ask_time_flag  = FALSE;
;P5_timers.c, 131 :: 		uint8_t  tim1_ask_time_flag = FALSE;
;P5_timers.c, 132 :: 		uint8_t  tim2_ask_time_flag = FALSE;
;P5_timers.c, 133 :: 		uint8_t ask_time_flag       = FALSE;
; ask_time_flag start address is: 12 (R3)
0x04DA	0x2300    MOVS	R3, #0
;P5_timers.c, 134 :: 		uint8_t r_key_rcvd      = TRUE;
; r_key_rcvd start address is: 16 (R4)
0x04DC	0x2401    MOVS	R4, #1
;P5_timers.c, 138 :: 		uint32_t i=0;
;P5_timers.c, 140 :: 		uint32_t tim1_multiplier = 1;
0x04DE	0xF10D0B08  ADD	R11, SP, #8
0x04E2	0xF20B1A23  ADDW	R10, R11, #291
0x04E6	0xF8DFC1E0  LDR	R12, [PC, #480]
0x04EA	0xF7FFFEC5  BL	___CC2DW+0
;P5_timers.c, 141 :: 		uint32_t tim2_multiplier = 1;
;P5_timers.c, 144 :: 		uint8_t title_divider[]  = "=============================================================";
;P5_timers.c, 145 :: 		uint8_t start_prompt []  = "Press 'R or r' to start or 'Q q' to quit.";
;P5_timers.c, 146 :: 		uint8_t tim1_prompt  []  = "Please enter delay time (1-4) for TIMER1: ";
;P5_timers.c, 147 :: 		uint8_t tim2_prompt  []  = "Please enter delay time (1-4) for TIMER2: ";
;P5_timers.c, 148 :: 		uint8_t title_cr_lf  []  = "\x0D\x0A";
;P5_timers.c, 149 :: 		uint8_t tim1_info[]    = "TIMER1 delay seconds value: ";
;P5_timers.c, 150 :: 		uint8_t tim2_info[]    = "TIMER2 delay seconds value:  ";
;P5_timers.c, 151 :: 		uint8_t goodbye  []    = "TIMER 1 & 4 DISABLED, goodbye!";
;P5_timers.c, 158 :: 		RCC_CR = 0x05010081;
0x04EE	0x4977    LDR	R1, [PC, #476]
0x04F0	0x4877    LDR	R0, [PC, #476]
0x04F2	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 165 :: 		RCC_CFGR = 0x091D8402; // IDE Scheme
0x04F4	0x4977    LDR	R1, [PC, #476]
0x04F6	0x4878    LDR	R0, [PC, #480]
0x04F8	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 173 :: 		RCC_CFGR2 = 0x00010644;
0x04FA	0x4978    LDR	R1, [PC, #480]
0x04FC	0x4878    LDR	R0, [PC, #480]
0x04FE	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 179 :: 		USART1_CR1 &= ~(1 << 13);                   // Disable USART for configuration
0x0500	0x4878    LDR	R0, [PC, #480]
0x0502	0x6801    LDR	R1, [R0, #0]
0x0504	0xF46F5000  MVN	R0, #8192
0x0508	0x4001    ANDS	R1, R0
0x050A	0x4876    LDR	R0, [PC, #472]
0x050C	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 182 :: 		RCC_APB2ENR |= 0x00000001;                  // Alt. function bit to enable USART1 PA9/PA10
0x050E	0x4876    LDR	R0, [PC, #472]
0x0510	0x6800    LDR	R0, [R0, #0]
0x0512	0xF0400101  ORR	R1, R0, #1
0x0516	0x4874    LDR	R0, [PC, #464]
0x0518	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 183 :: 		AFIO_MAPR    = 0x00000000;                  // Bit[2] USART1 REMAP 0: No Remap
0x051A	0x2100    MOVS	R1, #0
0x051C	0x4873    LDR	R0, [PC, #460]
0x051E	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 185 :: 		RCC_APB2ENR |= 1 << 2;                      // Enable GPIO Clock - Port A for USART1
0x0520	0x4871    LDR	R0, [PC, #452]
0x0522	0x6800    LDR	R0, [R0, #0]
0x0524	0xF0400104  ORR	R1, R0, #4
0x0528	0x486F    LDR	R0, [PC, #444]
0x052A	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 186 :: 		RCC_APB2ENR |= 1 << 3;                      // Enable GPIO Clock - Port B
0x052C	0x486E    LDR	R0, [PC, #440]
0x052E	0x6800    LDR	R0, [R0, #0]
0x0530	0xF0400108  ORR	R1, R0, #8
0x0534	0x486C    LDR	R0, [PC, #432]
0x0536	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 187 :: 		RCC_APB2ENR |= 1 << 4;                      // Enable GPIO Clock - Port C
0x0538	0x486B    LDR	R0, [PC, #428]
0x053A	0x6800    LDR	R0, [R0, #0]
0x053C	0xF0400110  ORR	R1, R0, #16
0x0540	0x4869    LDR	R0, [PC, #420]
0x0542	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 188 :: 		RCC_APB2ENR |= 1 << 5;                      // Enable GPIO Clock - Port D
0x0544	0x4868    LDR	R0, [PC, #416]
0x0546	0x6800    LDR	R0, [R0, #0]
0x0548	0xF0400120  ORR	R1, R0, #32
0x054C	0x4866    LDR	R0, [PC, #408]
0x054E	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 189 :: 		RCC_APB2ENR |= 1 << 6;                      // Enable GPIO Clock - Port E
0x0550	0x4865    LDR	R0, [PC, #404]
0x0552	0x6800    LDR	R0, [R0, #0]
0x0554	0xF0400140  ORR	R1, R0, #64
0x0558	0x4863    LDR	R0, [PC, #396]
0x055A	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 190 :: 		RCC_APB2ENR |= 1 << 14;                     // Enable USART1 Clock
0x055C	0x4862    LDR	R0, [PC, #392]
0x055E	0x6800    LDR	R0, [R0, #0]
0x0560	0xF4404180  ORR	R1, R0, #16384
0x0564	0x4860    LDR	R0, [PC, #384]
0x0566	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 194 :: 		GPIOA_CRH &= ~(0xFF << 4);                  // Shift 4 bits left to clear out bits PA9/PA10->mask with  FFFF F00F
0x0568	0x4861    LDR	R0, [PC, #388]
0x056A	0x6801    LDR	R1, [R0, #0]
0x056C	0xF24F000F  MOVW	R0, #61455
0x0570	0x4001    ANDS	R1, R0
0x0572	0x485F    LDR	R0, [PC, #380]
0x0574	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 195 :: 		GPIOA_CRH |=  (0x0B << 4);                  // USART1 Tx/PA9 set CNF=AFoutput push-pull b10; MODE:50Hz
0x0576	0x485E    LDR	R0, [PC, #376]
0x0578	0x6800    LDR	R0, [R0, #0]
0x057A	0xF04001B0  ORR	R1, R0, #176
0x057E	0x485C    LDR	R0, [PC, #368]
0x0580	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 196 :: 		GPIOA_CRH |=  (0x04 << 8);                  // USART1 Rx/PA10 set CNF=Input-floating b01; MODE: Input mode b00;
0x0582	0x485B    LDR	R0, [PC, #364]
0x0584	0x6800    LDR	R0, [R0, #0]
0x0586	0xF4406180  ORR	R1, R0, #1024
0x058A	0x4859    LDR	R0, [PC, #356]
0x058C	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 198 :: 		GPIOB_CRH = GPIO_OUTPUT;
0x058E	0xF04F3133  MOV	R1, #858993459
0x0592	0x4858    LDR	R0, [PC, #352]
0x0594	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 199 :: 		GPIOB_CRL = GPIO_OUTPUT;
0x0596	0xF04F3133  MOV	R1, #858993459
0x059A	0x4857    LDR	R0, [PC, #348]
0x059C	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 200 :: 		GPIOC_CRH = GPIO_OUTPUT;
0x059E	0xF04F3133  MOV	R1, #858993459
0x05A2	0x4856    LDR	R0, [PC, #344]
0x05A4	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 201 :: 		GPIOC_CRL = GPIO_OUTPUT;
0x05A6	0xF04F3133  MOV	R1, #858993459
0x05AA	0x4855    LDR	R0, [PC, #340]
0x05AC	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 202 :: 		GPIOD_CRH = GPIO_OUTPUT;
0x05AE	0xF04F3133  MOV	R1, #858993459
0x05B2	0x4854    LDR	R0, [PC, #336]
0x05B4	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 203 :: 		GPIOD_CRL = GPIO_OUTPUT;
0x05B6	0xF04F3133  MOV	R1, #858993459
0x05BA	0x4853    LDR	R0, [PC, #332]
0x05BC	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 204 :: 		GPIOE_CRH = GPIO_OUTPUT;
0x05BE	0xF04F3133  MOV	R1, #858993459
0x05C2	0x4852    LDR	R0, [PC, #328]
0x05C4	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 205 :: 		GPIOE_CRL = GPIO_OUTPUT;
0x05C6	0xF04F3133  MOV	R1, #858993459
0x05CA	0x4851    LDR	R0, [PC, #324]
0x05CC	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 209 :: 		USART1_BRR = 0x00000506;                   // Clock=72MHz, oversample=16x; 72MHz / (16 * 56,000) = 80.357
0x05CE	0xF2405106  MOVW	R1, #1286
0x05D2	0x4850    LDR	R0, [PC, #320]
0x05D4	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 213 :: 		USART1_CR1 &= ~(1 << 13);                   // Disable USART for configuration
0x05D6	0x4843    LDR	R0, [PC, #268]
0x05D8	0x6801    LDR	R1, [R0, #0]
0x05DA	0xF46F5000  MVN	R0, #8192
0x05DE	0x4001    ANDS	R1, R0
0x05E0	0x4840    LDR	R0, [PC, #256]
0x05E2	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 214 :: 		USART1_CR1 &= ~(1 << 12);                   // Force 8 data bits. Mbit set to 0
0x05E4	0x483F    LDR	R0, [PC, #252]
0x05E6	0x6801    LDR	R1, [R0, #0]
0x05E8	0xF46F5080  MVN	R0, #4096
0x05EC	0x4001    ANDS	R1, R0
0x05EE	0x483D    LDR	R0, [PC, #244]
0x05F0	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 215 :: 		USART1_CR1 &= ~(3 << 9);                    // Force no parity & no parity control
0x05F2	0x483C    LDR	R0, [PC, #240]
0x05F4	0x6801    LDR	R1, [R0, #0]
0x05F6	0xF46F60C0  MVN	R0, #1536
0x05FA	0x4001    ANDS	R1, R0
0x05FC	0x4839    LDR	R0, [PC, #228]
0x05FE	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 216 :: 		USART1_CR2 &= ~(3 << 12);                   // Force 1 stop bit
0x0600	0x4845    LDR	R0, [PC, #276]
0x0602	0x6801    LDR	R1, [R0, #0]
0x0604	0xF46F5040  MVN	R0, #12288
0x0608	0x4001    ANDS	R1, R0
0x060A	0x4843    LDR	R0, [PC, #268]
0x060C	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 217 :: 		USART1_CR3 &= ~(3 << 8);                    // Force no flow control and no DMA for USART1
0x060E	0x4843    LDR	R0, [PC, #268]
0x0610	0x6801    LDR	R1, [R0, #0]
0x0612	0xF46F7040  MVN	R0, #768
0x0616	0x4001    ANDS	R1, R0
0x0618	0x4840    LDR	R0, [PC, #256]
0x061A	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 218 :: 		USART1_CR1 |= (3 << 2);                     // Rx, Tx Enable
0x061C	0x4831    LDR	R0, [PC, #196]
0x061E	0x6800    LDR	R0, [R0, #0]
0x0620	0xF040010C  ORR	R1, R0, #12
0x0624	0x482F    LDR	R0, [PC, #188]
0x0626	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 219 :: 		Delay_ms(100);                              // Allow time for USART to complete initialization
0x0628	0xF644777F  MOVW	R7, #20351
0x062C	0xF2C00712  MOVT	R7, #18
L_main18:
0x0630	0x1E7F    SUBS	R7, R7, #1
0x0632	0xD1FD    BNE	L_main18
0x0634	0xBF00    NOP
0x0636	0xBF00    NOP
0x0638	0xBF00    NOP
0x063A	0xBF00    NOP
0x063C	0xBF00    NOP
;P5_timers.c, 220 :: 		USART1_CR1 |= 1 << 13;                      // **NOTE: USART1 Enable must be done after configuration is complete.
0x063E	0x4829    LDR	R0, [PC, #164]
0x0640	0x6800    LDR	R0, [R0, #0]
0x0642	0xF4405100  ORR	R1, R0, #8192
0x0646	0x4827    LDR	R0, [PC, #156]
0x0648	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 224 :: 		RCC_APB2ENR |= (1 << 11);                   // Enable TIMER1 Clock
0x064A	0x4827    LDR	R0, [PC, #156]
0x064C	0x6800    LDR	R0, [R0, #0]
0x064E	0xF4406100  ORR	R1, R0, #2048
0x0652	0x4825    LDR	R0, [PC, #148]
0x0654	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 225 :: 		RCC_APB1ENR |= (1 << 2);                    // Enable TIMER4 Clock
0x0656	0x4832    LDR	R0, [PC, #200]
0x0658	0x6800    LDR	R0, [R0, #0]
0x065A	0xF0400104  ORR	R1, R0, #4
0x065E	0x4830    LDR	R0, [PC, #192]
0x0660	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 231 :: 		TIM1_CR1 = 0x0000;
0x0662	0x2100    MOVS	R1, #0
0x0664	0x482F    LDR	R0, [PC, #188]
0x0666	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 232 :: 		TIM4_CR1 = 0x0000;
0x0668	0x2100    MOVS	R1, #0
0x066A	0x482F    LDR	R0, [PC, #188]
0x066C	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 239 :: 		TIM1_PSC = 7999;
0x066E	0xF641713F  MOVW	R1, #7999
0x0672	0x482E    LDR	R0, [PC, #184]
0x0674	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 240 :: 		TIM4_PSC = 7999;
0x0676	0xF641713F  MOVW	R1, #7999
0x067A	0x482D    LDR	R0, [PC, #180]
0x067C	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 246 :: 		TIM1_ARR = ( (uint32_t)9000 * tim1_multiplier );
0x067E	0x9902    LDR	R1, [SP, #8]
0x0680	0x482C    LDR	R0, [PC, #176]
0x0682	0x4341    MULS	R1, R0, R1
0x0684	0x482C    LDR	R0, [PC, #176]
0x0686	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 247 :: 		TIM4_ARR = ( (uint32_t)9000 * tim2_multiplier );              // 2 seconds
0x0688	0x9903    LDR	R1, [SP, #12]
0x068A	0x482A    LDR	R0, [PC, #168]
0x068C	0x4341    MULS	R1, R0, R1
0x068E	0x482B    LDR	R0, [PC, #172]
0x0690	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 249 :: 		TIM1_CR1 = 0x0001;                          // Finished configuration, now we can enable TIMER1; BIT4=0 couting up
0x0692	0x2101    MOVS	R1, #1
0x0694	0x4823    LDR	R0, [PC, #140]
0x0696	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 250 :: 		TIM4_CR1 = 0x0001;                          // Finished configuration, now we can enable TIMER4; BIT4=0 couting up
0x0698	0x2101    MOVS	R1, #1
0x069A	0x4823    LDR	R0, [PC, #140]
0x069C	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 253 :: 		GPIOB_ODR = 0x0000;
0x069E	0x2100    MOVS	R1, #0
0x06A0	0x4827    LDR	R0, [PC, #156]
0x06A2	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 254 :: 		GPIOC_ODR = 0x0000;
0x06A4	0x2100    MOVS	R1, #0
0x06A6	0x4827    LDR	R0, [PC, #156]
0x06A8	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 255 :: 		GPIOD_ODR = 0x0000;
0x06AA	0x2100    MOVS	R1, #0
0x06AC	0x4826    LDR	R0, [PC, #152]
0x06AE	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 256 :: 		GPIOE_ODR = 0x0000;
0x06B0	0x2100    MOVS	R1, #0
0x06B2	0x4826    LDR	R0, [PC, #152]
0x06B4	0x6001    STR	R1, [R0, #0]
; sequence_count end address is: 8 (R2)
; r_key_rcvd end address is: 16 (R4)
; ask_time_flag end address is: 12 (R3)
0x06B6	0x4694    MOV	R12, R2
0x06B8	0xFA5FFB83  UXTB	R11, R3
0x06BC	0xFA5FFA84  UXTB	R10, R4
;P5_timers.c, 261 :: 		for (;;) {
L_main20:
;P5_timers.c, 264 :: 		if (ask_time_flag == FALSE ) {
; r_key_rcvd start address is: 40 (R10)
; ask_time_flag start address is: 44 (R11)
; sequence_count start address is: 48 (R12)
0x06C0	0xF1BB0F00  CMP	R11, #0
0x06C4	0xF000B844  B	#136
0x06C8	0x09EC0000  	?ICSmain_tim1_multiplier_L0+0
0x06CC	0x00810501  	#83951745
0x06D0	0x10004002  	RCC_CR+0
0x06D4	0x8402091D  	#152929282
0x06D8	0x10044002  	RCC_CFGR+0
0x06DC	0x06440001  	#67140
0x06E0	0x102C4002  	RCC_CFGR2+0
0x06E4	0x380C4001  	USART1_CR1+0
0x06E8	0x10184002  	RCC_APB2ENR+0
0x06EC	0x00044001  	AFIO_MAPR+0
0x06F0	0x08044001  	GPIOA_CRH+0
0x06F4	0x0C044001  	GPIOB_CRH+0
0x06F8	0x0C004001  	GPIOB_CRL+0
0x06FC	0x10044001  	GPIOC_CRH+0
0x0700	0x10004001  	GPIOC_CRL+0
0x0704	0x14044001  	GPIOD_CRH+0
0x0708	0x14004001  	GPIOD_CRL+0
0x070C	0x18044001  	GPIOE_CRH+0
0x0710	0x18004001  	GPIOE_CRL+0
0x0714	0x38084001  	USART1_BRR+0
0x0718	0x38104001  	USART1_CR2+0
0x071C	0x38144001  	USART1_CR3+0
0x0720	0x101C4002  	RCC_APB1ENR+0
0x0724	0x2C004001  	TIM1_CR1+0
0x0728	0x08004000  	TIM4_CR1+0
0x072C	0x2C284001  	TIM1_PSC+0
0x0730	0x08284000  	TIM4_PSC+0
0x0734	0x23280000  	#9000
0x0738	0x2C2C4001  	TIM1_ARR+0
0x073C	0x082C4000  	TIM4_ARR+0
0x0740	0x0C0C4001  	GPIOB_ODR+0
0x0744	0x100C4001  	GPIOC_ODR+0
0x0748	0x140C4001  	GPIOD_ODR+0
0x074C	0x180C4001  	GPIOE_ODR+0
0x0750	0xD144    BNE	L__main83
;P5_timers.c, 266 :: 		if ( sequence_count == 0) {
0x0752	0xF1BC0F00  CMP	R12, #0
0x0756	0xD113    BNE	L_main24
; r_key_rcvd end address is: 40 (R10)
;P5_timers.c, 267 :: 		print_string(title_cr_lf, NO_NEW_LINE);
0x0758	0xF10D00CE  ADD	R0, SP, #206
0x075C	0x2100    MOVS	R1, #0
0x075E	0xF7FFFDB3  BL	_print_string+0
;P5_timers.c, 269 :: 		print_string(title_divider, NO_NEW_LINE);
0x0762	0xA804    ADD	R0, SP, #16
0x0764	0x2100    MOVS	R1, #0
0x0766	0xF7FFFDAF  BL	_print_string+0
;P5_timers.c, 270 :: 		print_string(&start_prompt, NO_NEW_LINE);   // Print start prompt message
0x076A	0xF10D004E  ADD	R0, SP, #78
0x076E	0x2100    MOVS	R1, #0
0x0770	0xF7FFFDAA  BL	_print_string+0
;P5_timers.c, 272 :: 		r_key_rcvd = FALSE;
; r_key_rcvd start address is: 4 (R1)
0x0774	0x2100    MOVS	R1, #0
;P5_timers.c, 273 :: 		sequence_count++;
0x0776	0xF10C0301  ADD	R3, R12, #1
; sequence_count end address is: 48 (R12)
; sequence_count start address is: 12 (R3)
;P5_timers.c, 274 :: 		}
; r_key_rcvd end address is: 4 (R1)
; sequence_count end address is: 12 (R3)
0x077A	0xFA5FF08B  UXTB	R0, R11
0x077E	0xE02A    B	L_main25
L_main24:
;P5_timers.c, 275 :: 		else if ( sequence_count == 1  && r_key_rcvd == TRUE ) {
; sequence_count start address is: 48 (R12)
; r_key_rcvd start address is: 40 (R10)
0x0780	0xF1BC0F01  CMP	R12, #1
0x0784	0xD10D    BNE	L__main69
0x0786	0xF1BA0F01  CMP	R10, #1
0x078A	0xD10A    BNE	L__main68
; ask_time_flag end address is: 44 (R11)
L__main67:
;P5_timers.c, 276 :: 		print_string(title_cr_lf, NO_NEW_LINE);
0x078C	0xF10D00CE  ADD	R0, SP, #206
0x0790	0x2100    MOVS	R1, #0
0x0792	0xF7FFFD99  BL	_print_string+0
;P5_timers.c, 277 :: 		print_string(tim1_prompt, NO_NEW_LINE);
0x0796	0xA81E    ADD	R0, SP, #120
0x0798	0x2100    MOVS	R1, #0
0x079A	0xF7FFFD95  BL	_print_string+0
;P5_timers.c, 278 :: 		ask_time_flag = TRUE;
; ask_time_flag start address is: 0 (R0)
0x079E	0x2001    MOVS	R0, #1
;P5_timers.c, 279 :: 		}
; ask_time_flag end address is: 0 (R0)
0x07A0	0xE016    B	L_main29
;P5_timers.c, 275 :: 		else if ( sequence_count == 1  && r_key_rcvd == TRUE ) {
L__main69:
; ask_time_flag start address is: 44 (R11)
L__main68:
;P5_timers.c, 280 :: 		else if (sequence_count == 2  && r_key_rcvd == TRUE ) {
0x07A2	0xF1BC0F02  CMP	R12, #2
0x07A6	0xD10E    BNE	L__main81
0x07A8	0xF1BA0F01  CMP	R10, #1
0x07AC	0xD10E    BNE	L__main82
; ask_time_flag end address is: 44 (R11)
L__main66:
;P5_timers.c, 281 :: 		print_string(title_cr_lf, NO_NEW_LINE);
0x07AE	0xF10D00CE  ADD	R0, SP, #206
0x07B2	0x2100    MOVS	R1, #0
0x07B4	0xF7FFFD88  BL	_print_string+0
;P5_timers.c, 282 :: 		print_string(tim2_prompt, NO_NEW_LINE);
0x07B8	0xF10D00A3  ADD	R0, SP, #163
0x07BC	0x2100    MOVS	R1, #0
0x07BE	0xF7FFFD83  BL	_print_string+0
;P5_timers.c, 283 :: 		ask_time_flag = TRUE;
; ask_time_flag start address is: 0 (R0)
0x07C2	0x2001    MOVS	R0, #1
; ask_time_flag end address is: 0 (R0)
;P5_timers.c, 280 :: 		else if (sequence_count == 2  && r_key_rcvd == TRUE ) {
0x07C4	0xE001    B	L__main71
L__main81:
0x07C6	0xFA5FF08B  UXTB	R0, R11
L__main71:
; ask_time_flag start address is: 0 (R0)
; ask_time_flag end address is: 0 (R0)
0x07CA	0xE001    B	L__main70
L__main82:
0x07CC	0xFA5FF08B  UXTB	R0, R11
L__main70:
;P5_timers.c, 284 :: 		}
; ask_time_flag start address is: 0 (R0)
; ask_time_flag end address is: 0 (R0)
L_main29:
; ask_time_flag start address is: 0 (R0)
0x07D0	0xFA5FF18A  UXTB	R1, R10
; r_key_rcvd end address is: 40 (R10)
; sequence_count end address is: 48 (R12)
; ask_time_flag end address is: 0 (R0)
0x07D4	0x4663    MOV	R3, R12
L_main25:
;P5_timers.c, 285 :: 		}
; ask_time_flag start address is: 0 (R0)
; sequence_count start address is: 12 (R3)
; r_key_rcvd start address is: 4 (R1)
0x07D6	0xB2C2    UXTB	R2, R0
; ask_time_flag end address is: 0 (R0)
; r_key_rcvd end address is: 4 (R1)
; sequence_count end address is: 12 (R3)
0x07D8	0xB2C8    UXTB	R0, R1
0x07DA	0xE004    B	L_main23
L__main83:
;P5_timers.c, 264 :: 		if (ask_time_flag == FALSE ) {
0x07DC	0xFA5FF08A  UXTB	R0, R10
0x07E0	0x4663    MOV	R3, R12
0x07E2	0xFA5FF28B  UXTB	R2, R11
;P5_timers.c, 285 :: 		}
L_main23:
;P5_timers.c, 292 :: 		for (i=0; i < 10; i++) {
; r_key_rcvd start address is: 0 (R0)
; sequence_count start address is: 12 (R3)
; ask_time_flag start address is: 8 (R2)
; i start address is: 40 (R10)
0x07E6	0xF2400A00  MOVW	R10, #0
; r_key_rcvd end address is: 0 (R0)
; sequence_count end address is: 12 (R3)
; ask_time_flag end address is: 8 (R2)
; i end address is: 40 (R10)
0x07EA	0xFA5FFB80  UXTB	R11, R0
L_main33:
; i start address is: 40 (R10)
; ask_time_flag start address is: 8 (R2)
; sequence_count start address is: 12 (R3)
; r_key_rcvd start address is: 44 (R11)
0x07EE	0xF1BA0F0A  CMP	R10, #10
0x07F2	0xF08080B0  BCS	L_main34
;P5_timers.c, 294 :: 		if ( (USART1_SR & (1 << 5)) ) {
0x07F6	0x486C    LDR	R0, [PC, #432]
0x07F8	0x6800    LDR	R0, [R0, #0]
0x07FA	0xF0000020  AND	R0, R0, #32
0x07FE	0x2800    CMP	R0, #0
0x0800	0xF00080A1  BEQ	L__main86
;P5_timers.c, 295 :: 		rx_buffer = USART1_DR;
0x0804	0x4869    LDR	R0, [PC, #420]
0x0806	0x6800    LDR	R0, [R0, #0]
0x0808	0x9001    STR	R0, [SP, #4]
; r_key_rcvd end address is: 44 (R11)
; sequence_count end address is: 12 (R3)
; ask_time_flag end address is: 8 (R2)
; i end address is: 40 (R10)
0x080A	0xB2D1    UXTB	R1, R2
;P5_timers.c, 297 :: 		while ( (USART1_SR & ( 1 << 7)) == 0 ) {}
L_main37:
; r_key_rcvd start address is: 44 (R11)
; sequence_count start address is: 12 (R3)
; ask_time_flag start address is: 4 (R1)
; i start address is: 40 (R10)
0x080C	0x4866    LDR	R0, [PC, #408]
0x080E	0x6800    LDR	R0, [R0, #0]
0x0810	0xF0000080  AND	R0, R0, #128
0x0814	0xB900    CBNZ	R0, L_main38
0x0816	0xE7F9    B	L_main37
L_main38:
;P5_timers.c, 303 :: 		if (rx_buffer == 0x52 || rx_buffer == 0x72) {
0x0818	0x9801    LDR	R0, [SP, #4]
0x081A	0x2852    CMP	R0, #82
0x081C	0xD003    BEQ	L__main73
0x081E	0x9801    LDR	R0, [SP, #4]
0x0820	0x2872    CMP	R0, #114
0x0822	0xD000    BEQ	L__main72
0x0824	0xE002    B	L_main41
; r_key_rcvd end address is: 44 (R11)
L__main73:
L__main72:
;P5_timers.c, 304 :: 		r_key_rcvd = TRUE;
; r_key_rcvd start address is: 44 (R11)
0x0826	0xF2400B01  MOVW	R11, #1
;P5_timers.c, 305 :: 		}
0x082A	0xE019    B	L_main42
L_main41:
;P5_timers.c, 306 :: 		else if (rx_buffer == 0x51 || rx_buffer == 0x71) {
0x082C	0x9801    LDR	R0, [SP, #4]
0x082E	0x2851    CMP	R0, #81
0x0830	0xD003    BEQ	L__main75
0x0832	0x9801    LDR	R0, [SP, #4]
0x0834	0x2871    CMP	R0, #113
0x0836	0xD000    BEQ	L__main74
0x0838	0xE012    B	L_main45
; r_key_rcvd end address is: 44 (R11)
; ask_time_flag end address is: 4 (R1)
; sequence_count end address is: 12 (R3)
; i end address is: 40 (R10)
L__main75:
L__main74:
;P5_timers.c, 311 :: 		RCC_APB2ENR |= ~(1 << 11);                   // Enable TIMER1 Clock
0x083A	0x485D    LDR	R0, [PC, #372]
0x083C	0x6801    LDR	R1, [R0, #0]
0x083E	0xF46F6000  MVN	R0, #2048
0x0842	0x4301    ORRS	R1, R0
0x0844	0x485A    LDR	R0, [PC, #360]
0x0846	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 312 :: 		RCC_APB1ENR |= ~(1 << 2);                    // Enable TIMER4 Clock
0x0848	0x485A    LDR	R0, [PC, #360]
0x084A	0x6801    LDR	R1, [R0, #0]
0x084C	0xF06F0004  MVN	R0, #4
0x0850	0x4301    ORRS	R1, R0
0x0852	0x4858    LDR	R0, [PC, #352]
0x0854	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 313 :: 		print_string(&goodbye, NO_NEW_LINE);
0x0856	0xA843    ADD	R0, SP, #268
0x0858	0x2100    MOVS	R1, #0
0x085A	0xF7FFFD35  BL	_print_string+0
;P5_timers.c, 314 :: 		return; // Quit
0x085E	0xE0A2    B	L_end_main
;P5_timers.c, 315 :: 		}
L_main45:
; i start address is: 40 (R10)
; sequence_count start address is: 12 (R3)
; ask_time_flag start address is: 4 (R1)
; r_key_rcvd start address is: 44 (R11)
L_main42:
; r_key_rcvd end address is: 44 (R11)
;P5_timers.c, 318 :: 		if (sequence_count == 1 && ask_time_flag == TRUE  && rx_buffer >=0x20) {
; r_key_rcvd start address is: 44 (R11)
0x0860	0x2B01    CMP	R3, #1
0x0862	0xD12C    BNE	L__main78
0x0864	0x2901    CMP	R1, #1
0x0866	0xD12A    BNE	L__main77
0x0868	0x9801    LDR	R0, [SP, #4]
0x086A	0x2820    CMP	R0, #32
0x086C	0xD327    BCC	L__main76
; ask_time_flag end address is: 4 (R1)
L__main63:
;P5_timers.c, 321 :: 		tim1_multiplier = serial_to_int(&rx_buffer);
0x086E	0xA801    ADD	R0, SP, #4
0x0870	0xF7FFFCAE  BL	_serial_to_int+0
0x0874	0x9002    STR	R0, [SP, #8]
;P5_timers.c, 324 :: 		TIM1_ARR = (uint32_t)( 9000 * tim1_multiplier );
0x0876	0xF2423128  MOVW	R1, #9000
0x087A	0x4341    MULS	R1, R0, R1
0x087C	0x484E    LDR	R0, [PC, #312]
0x087E	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 325 :: 		Delay_ms(100);
0x0880	0xF644777F  MOVW	R7, #20351
0x0884	0xF2C00712  MOVT	R7, #18
L_main49:
0x0888	0x1E7F    SUBS	R7, R7, #1
0x088A	0xD1FD    BNE	L_main49
0x088C	0xBF00    NOP
0x088E	0xBF00    NOP
0x0890	0xBF00    NOP
0x0892	0xBF00    NOP
0x0894	0xBF00    NOP
;P5_timers.c, 326 :: 		ask_time_flag = FALSE;
; ask_time_flag start address is: 48 (R12)
0x0896	0xF2400C00  MOVW	R12, #0
;P5_timers.c, 327 :: 		sequence_count++;
0x089A	0x1C58    ADDS	R0, R3, #1
; sequence_count end address is: 12 (R3)
; sequence_count start address is: 4 (R1)
0x089C	0x4601    MOV	R1, R0
;P5_timers.c, 328 :: 		print_string(&tim1_info, NO_NEW_LINE);
0x089E	0xF10D00D1  ADD	R0, SP, #209
0x08A2	0x9100    STR	R1, [SP, #0]
0x08A4	0x2100    MOVS	R1, #0
0x08A6	0xF7FFFD0F  BL	_print_string+0
;P5_timers.c, 329 :: 		print_int(&tim1_multiplier);
0x08AA	0xA802    ADD	R0, SP, #8
0x08AC	0xF7FFFCD4  BL	_print_int+0
0x08B0	0x9900    LDR	R1, [SP, #0]
;P5_timers.c, 331 :: 		}
0x08B2	0x460C    MOV	R4, R1
; ask_time_flag end address is: 48 (R12)
; sequence_count end address is: 4 (R1)
0x08B4	0xFA5FF38C  UXTB	R3, R12
0x08B8	0xFA5FF28B  UXTB	R2, R11
0x08BC	0xE02C    B	L_main51
;P5_timers.c, 318 :: 		if (sequence_count == 1 && ask_time_flag == TRUE  && rx_buffer >=0x20) {
L__main78:
; sequence_count start address is: 12 (R3)
; ask_time_flag start address is: 4 (R1)
L__main77:
L__main76:
;P5_timers.c, 332 :: 		else if (sequence_count == 2 && ask_time_flag == TRUE) {
0x08BE	0x2B02    CMP	R3, #2
0x08C0	0xD120    BNE	L__main84
0x08C2	0x2901    CMP	R1, #1
0x08C4	0xD124    BNE	L__main85
; r_key_rcvd end address is: 44 (R11)
; ask_time_flag end address is: 4 (R1)
; sequence_count end address is: 12 (R3)
L__main62:
;P5_timers.c, 335 :: 		tim2_multiplier = serial_to_int(&rx_buffer);
0x08C6	0xA801    ADD	R0, SP, #4
0x08C8	0xF7FFFC82  BL	_serial_to_int+0
0x08CC	0x9003    STR	R0, [SP, #12]
;P5_timers.c, 338 :: 		TIM4_ARR = ( (uint32_t)9000 * tim2_multiplier );
0x08CE	0x493B    LDR	R1, [PC, #236]
0x08D0	0x4341    MULS	R1, R0, R1
0x08D2	0x483B    LDR	R0, [PC, #236]
0x08D4	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 339 :: 		print_string(&tim2_info, NO_NEW_LINE);
0x08D6	0xF10D00EE  ADD	R0, SP, #238
0x08DA	0x2100    MOVS	R1, #0
0x08DC	0xF7FFFCF4  BL	_print_string+0
;P5_timers.c, 340 :: 		print_int(&tim2_multiplier);
0x08E0	0xA803    ADD	R0, SP, #12
0x08E2	0xF7FFFCB9  BL	_print_int+0
;P5_timers.c, 342 :: 		Delay_ms(100);
0x08E6	0xF644777F  MOVW	R7, #20351
0x08EA	0xF2C00712  MOVT	R7, #18
0x08EE	0xBF00    NOP
0x08F0	0xBF00    NOP
L_main55:
0x08F2	0x1E7F    SUBS	R7, R7, #1
0x08F4	0xD1FD    BNE	L_main55
0x08F6	0xBF00    NOP
0x08F8	0xBF00    NOP
0x08FA	0xBF00    NOP
;P5_timers.c, 345 :: 		sequence_count = 0;
; sequence_count start address is: 16 (R4)
0x08FC	0x2400    MOVS	R4, #0
;P5_timers.c, 346 :: 		ask_time_flag = FALSE;
; ask_time_flag start address is: 4 (R1)
0x08FE	0x2100    MOVS	R1, #0
;P5_timers.c, 347 :: 		r_key_rcvd = FALSE;
; r_key_rcvd start address is: 0 (R0)
0x0900	0x2000    MOVS	R0, #0
; r_key_rcvd end address is: 0 (R0)
; ask_time_flag end address is: 4 (R1)
; sequence_count end address is: 16 (R4)
;P5_timers.c, 332 :: 		else if (sequence_count == 2 && ask_time_flag == TRUE) {
0x0902	0xE002    B	L__main80
L__main84:
0x0904	0xFA5FF08B  UXTB	R0, R11
0x0908	0x461C    MOV	R4, R3
L__main80:
; r_key_rcvd start address is: 0 (R0)
; ask_time_flag start address is: 4 (R1)
; sequence_count start address is: 16 (R4)
0x090A	0xB2C2    UXTB	R2, R0
; r_key_rcvd end address is: 0 (R0)
; ask_time_flag end address is: 4 (R1)
; sequence_count end address is: 16 (R4)
0x090C	0xB2CB    UXTB	R3, R1
0x090E	0xE003    B	L__main79
L__main85:
0x0910	0x461C    MOV	R4, R3
0x0912	0xB2CB    UXTB	R3, R1
0x0914	0xFA5FF28B  UXTB	R2, R11
L__main79:
;P5_timers.c, 348 :: 		}
; sequence_count start address is: 16 (R4)
; ask_time_flag start address is: 12 (R3)
; r_key_rcvd start address is: 8 (R2)
; r_key_rcvd end address is: 8 (R2)
; ask_time_flag end address is: 12 (R3)
; sequence_count end address is: 16 (R4)
L_main51:
;P5_timers.c, 351 :: 		GPIOB_ODR = 0x0000;
; r_key_rcvd start address is: 8 (R2)
; ask_time_flag start address is: 12 (R3)
; sequence_count start address is: 16 (R4)
0x0918	0x2100    MOVS	R1, #0
0x091A	0x482A    LDR	R0, [PC, #168]
0x091C	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 352 :: 		GPIOC_ODR = 0x0000;
0x091E	0x2100    MOVS	R1, #0
0x0920	0x4829    LDR	R0, [PC, #164]
0x0922	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 353 :: 		GPIOD_ODR = 0x0000;
0x0924	0x2100    MOVS	R1, #0
0x0926	0x4829    LDR	R0, [PC, #164]
0x0928	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 354 :: 		GPIOE_ODR = 0x0000;
0x092A	0x2100    MOVS	R1, #0
0x092C	0x4828    LDR	R0, [PC, #160]
0x092E	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 355 :: 		TIM1_CNT = 0;
0x0930	0x2100    MOVS	R1, #0
0x0932	0x4828    LDR	R0, [PC, #160]
0x0934	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 356 :: 		TIM4_CNT = 0;
0x0936	0x2100    MOVS	R1, #0
0x0938	0x4827    LDR	R0, [PC, #156]
0x093A	0x6001    STR	R1, [R0, #0]
; r_key_rcvd end address is: 8 (R2)
; ask_time_flag end address is: 12 (R3)
; sequence_count end address is: 16 (R4)
; i end address is: 40 (R10)
0x093C	0xB2D1    UXTB	R1, R2
0x093E	0xB2DA    UXTB	R2, R3
0x0940	0x4623    MOV	R3, R4
0x0942	0x4654    MOV	R4, R10
;P5_timers.c, 359 :: 		}
0x0944	0xE002    B	L_main36
L__main86:
;P5_timers.c, 294 :: 		if ( (USART1_SR & (1 << 5)) ) {
0x0946	0xFA5FF18B  UXTB	R1, R11
0x094A	0x4654    MOV	R4, R10
;P5_timers.c, 359 :: 		}
L_main36:
;P5_timers.c, 292 :: 		for (i=0; i < 10; i++) {
; r_key_rcvd start address is: 4 (R1)
; sequence_count start address is: 12 (R3)
; ask_time_flag start address is: 8 (R2)
; i start address is: 16 (R4)
0x094C	0x1C60    ADDS	R0, R4, #1
; i end address is: 16 (R4)
; i start address is: 40 (R10)
0x094E	0x4682    MOV	R10, R0
;P5_timers.c, 360 :: 		}
0x0950	0xFA5FFB81  UXTB	R11, R1
; r_key_rcvd end address is: 4 (R1)
; i end address is: 40 (R10)
0x0954	0xE74B    B	L_main33
L_main34:
;P5_timers.c, 368 :: 		if ( TIM1_SR.UIF == 1 ) {
; r_key_rcvd start address is: 44 (R11)
0x0956	0x4821    LDR	R0, [PC, #132]
0x0958	0x6800    LDR	R0, [R0, #0]
0x095A	0xB168    CBZ	R0, L_main57
;P5_timers.c, 370 :: 		TIM1_SR.UIF = 0;
0x095C	0x2100    MOVS	R1, #0
0x095E	0xB249    SXTB	R1, R1
0x0960	0x481E    LDR	R0, [PC, #120]
0x0962	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 371 :: 		GPIOB_ODR = ~GPIOB_ODR;
0x0964	0x4817    LDR	R0, [PC, #92]
0x0966	0x6800    LDR	R0, [R0, #0]
0x0968	0x43C1    MVN	R1, R0
0x096A	0x4816    LDR	R0, [PC, #88]
0x096C	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 372 :: 		GPIOC_ODR = ~GPIOC_ODR;
0x096E	0x4816    LDR	R0, [PC, #88]
0x0970	0x6800    LDR	R0, [R0, #0]
0x0972	0x43C1    MVN	R1, R0
0x0974	0x4814    LDR	R0, [PC, #80]
0x0976	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 375 :: 		}
L_main57:
;P5_timers.c, 376 :: 		if ( TIM4_SR.UIF == 1 ) {
0x0978	0x4819    LDR	R0, [PC, #100]
0x097A	0x6800    LDR	R0, [R0, #0]
0x097C	0xB168    CBZ	R0, L_main58
;P5_timers.c, 378 :: 		TIM4_SR.UIF = 0;
0x097E	0x2100    MOVS	R1, #0
0x0980	0xB249    SXTB	R1, R1
0x0982	0x4817    LDR	R0, [PC, #92]
0x0984	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 379 :: 		GPIOD_ODR = ~GPIOD_ODR;
0x0986	0x4811    LDR	R0, [PC, #68]
0x0988	0x6800    LDR	R0, [R0, #0]
0x098A	0x43C1    MVN	R1, R0
0x098C	0x480F    LDR	R0, [PC, #60]
0x098E	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 380 :: 		GPIOE_ODR = ~GPIOE_ODR;
0x0990	0x480F    LDR	R0, [PC, #60]
0x0992	0x6800    LDR	R0, [R0, #0]
0x0994	0x43C1    MVN	R1, R0
0x0996	0x480E    LDR	R0, [PC, #56]
0x0998	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 381 :: 		}
L_main58:
;P5_timers.c, 382 :: 		}
0x099A	0x469C    MOV	R12, R3
; r_key_rcvd end address is: 44 (R11)
; sequence_count end address is: 12 (R3)
; ask_time_flag end address is: 8 (R2)
0x099C	0xFA5FFA8B  UXTB	R10, R11
0x09A0	0xFA5FFB82  UXTB	R11, R2
0x09A4	0xE68C    B	L_main20
;P5_timers.c, 385 :: 		}
L_end_main:
L__main_end_loop:
0x09A6	0xE7FE    B	L__main_end_loop
0x09A8	0x38004001  	USART1_SR+0
0x09AC	0x38044001  	USART1_DR+0
0x09B0	0x10184002  	RCC_APB2ENR+0
0x09B4	0x101C4002  	RCC_APB1ENR+0
0x09B8	0x2C2C4001  	TIM1_ARR+0
0x09BC	0x23280000  	#9000
0x09C0	0x082C4000  	TIM4_ARR+0
0x09C4	0x0C0C4001  	GPIOB_ODR+0
0x09C8	0x100C4001  	GPIOC_ODR+0
0x09CC	0x140C4001  	GPIOD_ODR+0
0x09D0	0x180C4001  	GPIOE_ODR+0
0x09D4	0x2C244001  	TIM1_CNT+0
0x09D8	0x08244000  	TIM4_CNT+0
0x09DC	0x82004225  	TIM1_SR+0
0x09E0	0x02004201  	TIM4_SR+0
; end of _main
___CC2DW:
;__Lib_System_105_107.c, 28 :: 		
0x0278	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 30 :: 		
L_loopDW:
;__Lib_System_105_107.c, 31 :: 		
0x027A	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_105_107.c, 32 :: 		
0x027E	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_105_107.c, 33 :: 		
0x0282	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 34 :: 		
0x0286	0xD1F8    BNE	L_loopDW
;__Lib_System_105_107.c, 36 :: 		
L_end___CC2DW:
0x0288	0xB001    ADD	SP, SP, #4
0x028A	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_105_107.c, 70 :: 		
0x028C	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 72 :: 		
0x028E	0xF04F0900  MOV	R9, #0
;__Lib_System_105_107.c, 73 :: 		
0x0292	0xF04F0C00  MOV	R12, #0
;__Lib_System_105_107.c, 74 :: 		
0x0296	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_105_107.c, 75 :: 		
0x029A	0xDC04    BGT	L_loopFZs
;__Lib_System_105_107.c, 76 :: 		
0x029C	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_105_107.c, 77 :: 		
0x02A0	0xDB01    BLT	L_loopFZs
;__Lib_System_105_107.c, 78 :: 		
0x02A2	0x46D4    MOV	R12, R10
;__Lib_System_105_107.c, 79 :: 		
0x02A4	0x46EA    MOV	R10, SP
;__Lib_System_105_107.c, 80 :: 		
L_loopFZs:
;__Lib_System_105_107.c, 81 :: 		
0x02A6	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_105_107.c, 82 :: 		
0x02AA	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 83 :: 		
0x02AE	0xD1FA    BNE	L_loopFZs
;__Lib_System_105_107.c, 84 :: 		
0x02B0	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_105_107.c, 85 :: 		
0x02B4	0xDD05    BLE	L_norep
;__Lib_System_105_107.c, 86 :: 		
0x02B6	0x46E2    MOV	R10, R12
;__Lib_System_105_107.c, 87 :: 		
0x02B8	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_105_107.c, 88 :: 		
0x02BC	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_105_107.c, 89 :: 		
0x02C0	0xE7F1    B	L_loopFZs
;__Lib_System_105_107.c, 90 :: 		
L_norep:
;__Lib_System_105_107.c, 92 :: 		
L_end___FillZeros:
0x02C2	0xB001    ADD	SP, SP, #4
0x02C4	0x4770    BX	LR
; end of ___FillZeros
_print_string:
;P5_timers.c, 97 :: 		void print_string(uint8_t *arr_string, uint8_t new_line_opt) {
; new_line_opt start address is: 4 (R1)
; arr_string start address is: 0 (R0)
0x02C8	0xB0C1    SUB	SP, SP, #260
0x02CA	0xF8CDE000  STR	LR, [SP, #0]
; new_line_opt end address is: 4 (R1)
; arr_string end address is: 0 (R0)
; arr_string start address is: 0 (R0)
; new_line_opt start address is: 4 (R1)
;P5_timers.c, 99 :: 		uint32_t i = 0;
; i start address is: 36 (R9)
0x02CE	0xF04F0900  MOV	R9, #0
; arr_string end address is: 0 (R0)
; new_line_opt end address is: 4 (R1)
; i end address is: 36 (R9)
0x02D2	0x4680    MOV	R8, R0
0x02D4	0xB2CE    UXTB	R6, R1
;P5_timers.c, 102 :: 		while (arr_string[i] != '\0') {
L_print_string12:
; i start address is: 36 (R9)
; new_line_opt start address is: 24 (R6)
; new_line_opt start address is: 24 (R6)
; new_line_opt end address is: 24 (R6)
; arr_string start address is: 32 (R8)
0x02D6	0xEB080209  ADD	R2, R8, R9, LSL #0
0x02DA	0x7812    LDRB	R2, [R2, #0]
0x02DC	0xB1B2    CBZ	R2, L_print_string13
; new_line_opt end address is: 24 (R6)
;P5_timers.c, 103 :: 		buffer[i] = (buffer[i] & (uint32_t) 0x00000000) | arr_string[i];
; new_line_opt start address is: 24 (R6)
0x02DE	0xAD01    ADD	R5, SP, #4
0x02E0	0xEA4F0289  LSL	R2, R9, #2
0x02E4	0x18AC    ADDS	R4, R5, R2
0x02E6	0x6822    LDR	R2, [R4, #0]
0x02E8	0xF0020300  AND	R3, R2, #0
0x02EC	0xEB080209  ADD	R2, R8, R9, LSL #0
0x02F0	0x7812    LDRB	R2, [R2, #0]
0x02F2	0xEA430202  ORR	R2, R3, R2, LSL #0
0x02F6	0x6022    STR	R2, [R4, #0]
;P5_timers.c, 104 :: 		write_data_char ( &buffer[i], new_line_opt);
0x02F8	0xEA4F0289  LSL	R2, R9, #2
0x02FC	0x18AA    ADDS	R2, R5, R2
0x02FE	0xB2F1    UXTB	R1, R6
0x0300	0x4610    MOV	R0, R2
0x0302	0xF7FFFF25  BL	_write_data_char+0
;P5_timers.c, 105 :: 		i++;
0x0306	0xF1090901  ADD	R9, R9, #1
;P5_timers.c, 106 :: 		}
; new_line_opt end address is: 24 (R6)
; arr_string end address is: 32 (R8)
; i end address is: 36 (R9)
0x030A	0xE7E4    B	L_print_string12
L_print_string13:
;P5_timers.c, 108 :: 		Delay_ms(10);
0x030C	0xF24D47BF  MOVW	R7, #54463
0x0310	0xF2C00701  MOVT	R7, #1
0x0314	0xBF00    NOP
0x0316	0xBF00    NOP
L_print_string14:
0x0318	0x1E7F    SUBS	R7, R7, #1
0x031A	0xD1FD    BNE	L_print_string14
0x031C	0xBF00    NOP
0x031E	0xBF00    NOP
0x0320	0xBF00    NOP
;P5_timers.c, 109 :: 		USART1_DR = CHAR_CR;
0x0322	0xF04F030D  MOV	R3, #13
0x0326	0x4A0A    LDR	R2, [PC, #40]
0x0328	0x6013    STR	R3, [R2, #0]
;P5_timers.c, 110 :: 		Delay_ms(10);
0x032A	0xF24D47BF  MOVW	R7, #54463
0x032E	0xF2C00701  MOVT	R7, #1
L_print_string16:
0x0332	0x1E7F    SUBS	R7, R7, #1
0x0334	0xD1FD    BNE	L_print_string16
0x0336	0xBF00    NOP
0x0338	0xBF00    NOP
0x033A	0xBF00    NOP
0x033C	0xBF00    NOP
0x033E	0xBF00    NOP
;P5_timers.c, 111 :: 		USART1_DR = CHAR_LF;
0x0340	0xF04F030A  MOV	R3, #10
0x0344	0x4A02    LDR	R2, [PC, #8]
0x0346	0x6013    STR	R3, [R2, #0]
;P5_timers.c, 112 :: 		}
L_end_print_string:
0x0348	0xF8DDE000  LDR	LR, [SP, #0]
0x034C	0xB041    ADD	SP, SP, #260
0x034E	0x4770    BX	LR
0x0350	0x38044001  	USART1_DR+0
; end of _print_string
_write_data_char:
;P5_timers.c, 79 :: 		void write_data_char(uint32_t *tx_char, uint8_t new_line_opt) {
; new_line_opt start address is: 4 (R1)
; tx_char start address is: 0 (R0)
0x0150	0xB081    SUB	SP, SP, #4
; new_line_opt end address is: 4 (R1)
; tx_char end address is: 0 (R0)
; tx_char start address is: 0 (R0)
; new_line_opt start address is: 4 (R1)
0x0152	0xF88D1000  STRB	R1, [SP, #0]
; tx_char end address is: 0 (R0)
; new_line_opt end address is: 4 (R1)
0x0156	0x4601    MOV	R1, R0
0x0158	0xF89D0000  LDRB	R0, [SP, #0]
;P5_timers.c, 82 :: 		while ( (USART1_SR & (1 << 7)) == 0 ) {}                        // Wait for transmit data register to be empty
L_write_data_char3:
; new_line_opt start address is: 0 (R0)
; tx_char start address is: 4 (R1)
0x015C	0x4A1A    LDR	R2, [PC, #104]
0x015E	0x6812    LDR	R2, [R2, #0]
0x0160	0xF0020280  AND	R2, R2, #128
0x0164	0xB902    CBNZ	R2, L_write_data_char4
0x0166	0xE7F9    B	L_write_data_char3
L_write_data_char4:
;P5_timers.c, 83 :: 		Delay_ms(10);                                                   // Transmit data out via USART1
0x0168	0xF24D47BF  MOVW	R7, #54463
0x016C	0xF2C00701  MOVT	R7, #1
L_write_data_char5:
0x0170	0x1E7F    SUBS	R7, R7, #1
0x0172	0xD1FD    BNE	L_write_data_char5
0x0174	0xBF00    NOP
0x0176	0xBF00    NOP
0x0178	0xBF00    NOP
0x017A	0xBF00    NOP
0x017C	0xBF00    NOP
;P5_timers.c, 84 :: 		USART1_DR = *tx_char;
0x017E	0x680B    LDR	R3, [R1, #0]
; tx_char end address is: 4 (R1)
0x0180	0x4A12    LDR	R2, [PC, #72]
0x0182	0x6013    STR	R3, [R2, #0]
;P5_timers.c, 86 :: 		if (new_line_opt == 1) {
0x0184	0x2801    CMP	R0, #1
0x0186	0xD11D    BNE	L_write_data_char7
; new_line_opt end address is: 0 (R0)
;P5_timers.c, 87 :: 		Delay_ms(10);
0x0188	0xF24D47BF  MOVW	R7, #54463
0x018C	0xF2C00701  MOVT	R7, #1
L_write_data_char8:
0x0190	0x1E7F    SUBS	R7, R7, #1
0x0192	0xD1FD    BNE	L_write_data_char8
0x0194	0xBF00    NOP
0x0196	0xBF00    NOP
0x0198	0xBF00    NOP
0x019A	0xBF00    NOP
0x019C	0xBF00    NOP
;P5_timers.c, 88 :: 		USART1_DR = CHAR_CR;
0x019E	0xF04F030D  MOV	R3, #13
0x01A2	0x4A0A    LDR	R2, [PC, #40]
0x01A4	0x6013    STR	R3, [R2, #0]
;P5_timers.c, 89 :: 		Delay_ms(10);
0x01A6	0xF24D47BF  MOVW	R7, #54463
0x01AA	0xF2C00701  MOVT	R7, #1
0x01AE	0xBF00    NOP
0x01B0	0xBF00    NOP
L_write_data_char10:
0x01B2	0x1E7F    SUBS	R7, R7, #1
0x01B4	0xD1FD    BNE	L_write_data_char10
0x01B6	0xBF00    NOP
0x01B8	0xBF00    NOP
0x01BA	0xBF00    NOP
;P5_timers.c, 90 :: 		USART1_DR = CHAR_LF;
0x01BC	0xF04F030A  MOV	R3, #10
0x01C0	0x4A02    LDR	R2, [PC, #8]
0x01C2	0x6013    STR	R3, [R2, #0]
;P5_timers.c, 91 :: 		}
L_write_data_char7:
;P5_timers.c, 92 :: 		}
L_end_write_data_char:
0x01C4	0xB001    ADD	SP, SP, #4
0x01C6	0x4770    BX	LR
0x01C8	0x38004001  	USART1_SR+0
0x01CC	0x38044001  	USART1_DR+0
; end of _write_data_char
_serial_to_int:
;P5_timers.c, 69 :: 		uint32_t serial_to_int(uint32_t *rx_buffer) {
; rx_buffer start address is: 0 (R0)
0x01D0	0xB081    SUB	SP, SP, #4
; rx_buffer end address is: 0 (R0)
; rx_buffer start address is: 0 (R0)
;P5_timers.c, 71 :: 		if ( (*rx_buffer >= ASCII_HEX_O) && (*rx_buffer <= 0x34) ) {     // if input buffer is between 0x30 and 0x34, integer [1:4] we know its an integer
0x01D2	0x6801    LDR	R1, [R0, #0]
0x01D4	0x2930    CMP	R1, #48
0x01D6	0xD306    BCC	L__serial_to_int61
0x01D8	0x6801    LDR	R1, [R0, #0]
0x01DA	0x2934    CMP	R1, #52
0x01DC	0xD803    BHI	L__serial_to_int60
L__serial_to_int59:
;P5_timers.c, 72 :: 		return (*rx_buffer - ASCII_HEX_O);
0x01DE	0x6801    LDR	R1, [R0, #0]
; rx_buffer end address is: 0 (R0)
0x01E0	0x3930    SUBS	R1, #48
0x01E2	0x4608    MOV	R0, R1
0x01E4	0xE000    B	L_end_serial_to_int
;P5_timers.c, 71 :: 		if ( (*rx_buffer >= ASCII_HEX_O) && (*rx_buffer <= 0x34) ) {     // if input buffer is between 0x30 and 0x34, integer [1:4] we know its an integer
L__serial_to_int61:
L__serial_to_int60:
;P5_timers.c, 75 :: 		return 1;                                                        // Everything else default 1 second
0x01E6	0x2001    MOVS	R0, #1
;P5_timers.c, 76 :: 		}
L_end_serial_to_int:
0x01E8	0xB001    ADD	SP, SP, #4
0x01EA	0x4770    BX	LR
; end of _serial_to_int
_print_int:
;P5_timers.c, 114 :: 		void print_int(uint32_t *int_num) {
; int_num start address is: 0 (R0)
0x0258	0xB082    SUB	SP, SP, #8
0x025A	0xF8CDE000  STR	LR, [SP, #0]
; int_num end address is: 0 (R0)
; int_num start address is: 0 (R0)
;P5_timers.c, 116 :: 		uint32_t temp_val = (*int_num + ASCII_HEX_O);
0x025E	0x6801    LDR	R1, [R0, #0]
; int_num end address is: 0 (R0)
0x0260	0x3130    ADDS	R1, #48
0x0262	0x9101    STR	R1, [SP, #4]
;P5_timers.c, 118 :: 		write_data_char(&temp_val, NO_NEW_LINE);
0x0264	0xA901    ADD	R1, SP, #4
0x0266	0x4608    MOV	R0, R1
0x0268	0x2100    MOVS	R1, #0
0x026A	0xF7FFFF71  BL	_write_data_char+0
;P5_timers.c, 125 :: 		}
L_end_print_int:
0x026E	0xF8DDE000  LDR	LR, [SP, #0]
0x0272	0xB002    ADD	SP, SP, #8
0x0274	0x4770    BX	LR
; end of _print_int
__Lib_System_105_107_InitialSetUpRCCRCC2:
;__Lib_System_105_107.c, 391 :: 		
0x0370	0xB081    SUB	SP, SP, #4
0x0372	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_105_107.c, 395 :: 		
; ulRCC_CR start address is: 8 (R2)
0x0376	0x4A4A    LDR	R2, [PC, #296]
;__Lib_System_105_107.c, 396 :: 		
; ulRCC_CFGR start address is: 12 (R3)
0x0378	0x4B4A    LDR	R3, [PC, #296]
;__Lib_System_105_107.c, 397 :: 		
; ulRCC_CFGR2 start address is: 16 (R4)
0x037A	0x4C4B    LDR	R4, [PC, #300]
;__Lib_System_105_107.c, 398 :: 		
; Fosc_kHz start address is: 20 (R5)
0x037C	0x4D4B    LDR	R5, [PC, #300]
;__Lib_System_105_107.c, 407 :: 		
0x037E	0xF00300F0  AND	R0, R3, #240
;__Lib_System_105_107.c, 408 :: 		
0x0382	0x0901    LSRS	R1, R0, #4
;__Lib_System_105_107.c, 409 :: 		
0x0384	0x484A    LDR	R0, [PC, #296]
0x0386	0x1840    ADDS	R0, R0, R1
0x0388	0x7800    LDRB	R0, [R0, #0]
; presc start address is: 0 (R0)
;__Lib_System_105_107.c, 411 :: 		
0x038A	0xFA05F100  LSL	R1, R5, R0
; Fosc_kHz end address is: 20 (R5)
; presc end address is: 0 (R0)
; SYS_clk start address is: 20 (R5)
0x038E	0x460D    MOV	R5, R1
;__Lib_System_105_107.c, 413 :: 		
0x0390	0xF64B3080  MOVW	R0, #48000
0x0394	0x4281    CMP	R1, R0
0x0396	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC234
; SYS_clk end address is: 20 (R5)
;__Lib_System_105_107.c, 414 :: 		
0x0398	0x4846    LDR	R0, [PC, #280]
0x039A	0x6800    LDR	R0, [R0, #0]
0x039C	0xF0400102  ORR	R1, R0, #2
0x03A0	0x4844    LDR	R0, [PC, #272]
0x03A2	0x6001    STR	R1, [R0, #0]
0x03A4	0xE011    B	L___Lib_System_105_107_InitialSetUpRCCRCC235
L___Lib_System_105_107_InitialSetUpRCCRCC234:
;__Lib_System_105_107.c, 415 :: 		
; SYS_clk start address is: 20 (R5)
0x03A6	0xF64550C0  MOVW	R0, #24000
0x03AA	0x4285    CMP	R5, R0
0x03AC	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC236
; SYS_clk end address is: 20 (R5)
;__Lib_System_105_107.c, 416 :: 		
0x03AE	0x4841    LDR	R0, [PC, #260]
0x03B0	0x6800    LDR	R0, [R0, #0]
0x03B2	0xF0400101  ORR	R1, R0, #1
0x03B6	0x483F    LDR	R0, [PC, #252]
0x03B8	0x6001    STR	R1, [R0, #0]
0x03BA	0xE006    B	L___Lib_System_105_107_InitialSetUpRCCRCC237
L___Lib_System_105_107_InitialSetUpRCCRCC236:
;__Lib_System_105_107.c, 418 :: 		
0x03BC	0x483D    LDR	R0, [PC, #244]
0x03BE	0x6801    LDR	R1, [R0, #0]
0x03C0	0xF06F0007  MVN	R0, #7
0x03C4	0x4001    ANDS	R1, R0
0x03C6	0x483B    LDR	R0, [PC, #236]
0x03C8	0x6001    STR	R1, [R0, #0]
L___Lib_System_105_107_InitialSetUpRCCRCC237:
L___Lib_System_105_107_InitialSetUpRCCRCC235:
;__Lib_System_105_107.c, 420 :: 		
0x03CA	0xF7FFFF0F  BL	__Lib_System_105_107_SystemClockSetDefault+0
;__Lib_System_105_107.c, 422 :: 		
0x03CE	0x483A    LDR	R0, [PC, #232]
0x03D0	0x6003    STR	R3, [R0, #0]
;__Lib_System_105_107.c, 423 :: 		
0x03D2	0x483A    LDR	R0, [PC, #232]
0x03D4	0x6004    STR	R4, [R0, #0]
; ulRCC_CFGR2 end address is: 16 (R4)
;__Lib_System_105_107.c, 424 :: 		
0x03D6	0x483A    LDR	R0, [PC, #232]
0x03D8	0xEA020100  AND	R1, R2, R0, LSL #0
0x03DC	0x4839    LDR	R0, [PC, #228]
0x03DE	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 426 :: 		
0x03E0	0xF0020001  AND	R0, R2, #1
0x03E4	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC255
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x03E6	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 427 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC239:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x03E8	0x4836    LDR	R0, [PC, #216]
0x03EA	0x6800    LDR	R0, [R0, #0]
0x03EC	0xF0000002  AND	R0, R0, #2
0x03F0	0x2800    CMP	R0, #0
0x03F2	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC240
;__Lib_System_105_107.c, 428 :: 		
0x03F4	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC239
L___Lib_System_105_107_InitialSetUpRCCRCC240:
;__Lib_System_105_107.c, 429 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x03F6	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC238
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC255:
;__Lib_System_105_107.c, 426 :: 		
0x03F8	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 429 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC238:
;__Lib_System_105_107.c, 431 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x03FA	0xF4023080  AND	R0, R2, #65536
0x03FE	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC256
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
0x0400	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 432 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC242:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x0402	0x4830    LDR	R0, [PC, #192]
0x0404	0x6800    LDR	R0, [R0, #0]
0x0406	0xF4003000  AND	R0, R0, #131072
0x040A	0x2800    CMP	R0, #0
0x040C	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC243
;__Lib_System_105_107.c, 433 :: 		
0x040E	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC242
L___Lib_System_105_107_InitialSetUpRCCRCC243:
;__Lib_System_105_107.c, 434 :: 		
; ulRCC_CR end address is: 8 (R2)
0x0410	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC241
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC256:
;__Lib_System_105_107.c, 431 :: 		
0x0412	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 434 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC241:
;__Lib_System_105_107.c, 436 :: 		
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x0414	0xF0025080  AND	R0, R2, #268435456
0x0418	0xB168    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC257
;__Lib_System_105_107.c, 437 :: 		
0x041A	0x482A    LDR	R0, [PC, #168]
0x041C	0x6800    LDR	R0, [R0, #0]
0x041E	0xF0405180  ORR	R1, R0, #268435456
0x0422	0x4828    LDR	R0, [PC, #160]
0x0424	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
;__Lib_System_105_107.c, 438 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC245:
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x0426	0x4827    LDR	R0, [PC, #156]
0x0428	0x6800    LDR	R0, [R0, #0]
0x042A	0xF0005000  AND	R0, R0, #536870912
0x042E	0x2800    CMP	R0, #0
0x0430	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC246
;__Lib_System_105_107.c, 439 :: 		
0x0432	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC245
L___Lib_System_105_107_InitialSetUpRCCRCC246:
;__Lib_System_105_107.c, 440 :: 		
; ulRCC_CR end address is: 8 (R2)
0x0434	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC244
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC257:
;__Lib_System_105_107.c, 436 :: 		
;__Lib_System_105_107.c, 440 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC244:
;__Lib_System_105_107.c, 442 :: 		
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x0436	0xF0026080  AND	R0, R2, #67108864
0x043A	0xB178    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC258
;__Lib_System_105_107.c, 443 :: 		
0x043C	0x4821    LDR	R0, [PC, #132]
0x043E	0x6800    LDR	R0, [R0, #0]
0x0440	0xF0406180  ORR	R1, R0, #67108864
0x0444	0x481F    LDR	R0, [PC, #124]
0x0446	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x0448	0x4611    MOV	R1, R2
0x044A	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 444 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC248:
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x044C	0x481D    LDR	R0, [PC, #116]
0x044E	0x6800    LDR	R0, [R0, #0]
0x0450	0xF0006000  AND	R0, R0, #134217728
0x0454	0x2800    CMP	R0, #0
0x0456	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC249
;__Lib_System_105_107.c, 445 :: 		
0x0458	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC248
L___Lib_System_105_107_InitialSetUpRCCRCC249:
;__Lib_System_105_107.c, 446 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x045A	0xE001    B	L___Lib_System_105_107_InitialSetUpRCCRCC247
; ulRCC_CR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC258:
;__Lib_System_105_107.c, 442 :: 		
0x045C	0x4611    MOV	R1, R2
0x045E	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 446 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC247:
;__Lib_System_105_107.c, 448 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x0460	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x0464	0xB170    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC259
;__Lib_System_105_107.c, 449 :: 		
0x0466	0x4817    LDR	R0, [PC, #92]
0x0468	0x6800    LDR	R0, [R0, #0]
0x046A	0xF0407180  ORR	R1, R0, #16777216
0x046E	0x4815    LDR	R0, [PC, #84]
0x0470	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x0472	0x4611    MOV	R1, R2
;__Lib_System_105_107.c, 450 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC251:
; ulRCC_CFGR start address is: 4 (R1)
0x0474	0x4813    LDR	R0, [PC, #76]
0x0476	0x6800    LDR	R0, [R0, #0]
0x0478	0xF0007000  AND	R0, R0, #33554432
0x047C	0xB900    CBNZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC252
;__Lib_System_105_107.c, 451 :: 		
0x047E	0xE7F9    B	L___Lib_System_105_107_InitialSetUpRCCRCC251
L___Lib_System_105_107_InitialSetUpRCCRCC252:
;__Lib_System_105_107.c, 452 :: 		
0x0480	0x460A    MOV	R2, R1
0x0482	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC250
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC259:
;__Lib_System_105_107.c, 448 :: 		
;__Lib_System_105_107.c, 452 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC250:
;__Lib_System_105_107.c, 456 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC253:
; ulRCC_CFGR start address is: 8 (R2)
0x0484	0x480C    LDR	R0, [PC, #48]
0x0486	0x6800    LDR	R0, [R0, #0]
0x0488	0xF000010C  AND	R1, R0, #12
0x048C	0x0090    LSLS	R0, R2, #2
0x048E	0xF000000C  AND	R0, R0, #12
0x0492	0x4281    CMP	R1, R0
0x0494	0xD000    BEQ	L___Lib_System_105_107_InitialSetUpRCCRCC254
;__Lib_System_105_107.c, 457 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x0496	0xE7F5    B	L___Lib_System_105_107_InitialSetUpRCCRCC253
L___Lib_System_105_107_InitialSetUpRCCRCC254:
;__Lib_System_105_107.c, 458 :: 		
L_end_InitialSetUpRCCRCC2:
0x0498	0xF8DDE000  LDR	LR, [SP, #0]
0x049C	0xB001    ADD	SP, SP, #4
0x049E	0x4770    BX	LR
0x04A0	0x00811501  	#352387201
0x04A4	0x8402091D  	#152929282
0x04A8	0xF6440001  	#128580
0x04AC	0x19400001  	#72000
0x04B0	0x0B0F0000  	__Lib_System_105_107_APBAHBPrescTable+0
0x04B4	0x20004002  	FLASH_ACR+0
0x04B8	0x10044002  	RCC_CFGR+0
0x04BC	0x102C4002  	RCC_CFGR2+0
0x04C0	0xFFFF000F  	#1048575
0x04C4	0x10004002  	RCC_CR+0
; end of __Lib_System_105_107_InitialSetUpRCCRCC2
__Lib_System_105_107_SystemClockSetDefault:
;__Lib_System_105_107.c, 360 :: 		
0x01EC	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 363 :: 		
0x01EE	0x4815    LDR	R0, [PC, #84]
0x01F0	0x6800    LDR	R0, [R0, #0]
0x01F2	0xF0400101  ORR	R1, R0, #1
0x01F6	0x4813    LDR	R0, [PC, #76]
0x01F8	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 366 :: 		
0x01FA	0x4913    LDR	R1, [PC, #76]
0x01FC	0x4813    LDR	R0, [PC, #76]
0x01FE	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 369 :: 		
0x0200	0x4810    LDR	R0, [PC, #64]
0x0202	0x6801    LDR	R1, [R0, #0]
0x0204	0x4812    LDR	R0, [PC, #72]
0x0206	0x4001    ANDS	R1, R0
0x0208	0x480E    LDR	R0, [PC, #56]
0x020A	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 372 :: 		
0x020C	0x480D    LDR	R0, [PC, #52]
0x020E	0x6801    LDR	R1, [R0, #0]
0x0210	0xF46F2080  MVN	R0, #262144
0x0214	0x4001    ANDS	R1, R0
0x0216	0x480B    LDR	R0, [PC, #44]
0x0218	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 375 :: 		
0x021A	0x480C    LDR	R0, [PC, #48]
0x021C	0x6801    LDR	R1, [R0, #0]
0x021E	0xF46F00FE  MVN	R0, #8323072
0x0222	0x4001    ANDS	R1, R0
0x0224	0x4809    LDR	R0, [PC, #36]
0x0226	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 378 :: 		
0x0228	0x4806    LDR	R0, [PC, #24]
0x022A	0x6801    LDR	R1, [R0, #0]
0x022C	0xF06F50A0  MVN	R0, #335544320
0x0230	0x4001    ANDS	R1, R0
0x0232	0x4804    LDR	R0, [PC, #16]
0x0234	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 381 :: 		
0x0236	0xF04F0100  MOV	R1, #0
0x023A	0x4806    LDR	R0, [PC, #24]
0x023C	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 385 :: 		
L_end_SystemClockSetDefault:
0x023E	0xB001    ADD	SP, SP, #4
0x0240	0x4770    BX	LR
0x0242	0xBF00    NOP
0x0244	0x10004002  	RCC_CR+0
0x0248	0x0000F0FF  	#-251723776
0x024C	0x10044002  	RCC_CFGR+0
0x0250	0xFFFFFEF6  	#-17367041
0x0254	0x102C4002  	RCC_CFGR2+0
; end of __Lib_System_105_107_SystemClockSetDefault
__Lib_System_105_107_InitialSetUpFosc:
;__Lib_System_105_107.c, 460 :: 		
0x0354	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 461 :: 		
0x0356	0x4902    LDR	R1, [PC, #8]
0x0358	0x4802    LDR	R0, [PC, #8]
0x035A	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 462 :: 		
L_end_InitialSetUpFosc:
0x035C	0xB001    ADD	SP, SP, #4
0x035E	0x4770    BX	LR
0x0360	0x19400001  	#72000
0x0364	0x00002000  	___System_CLOCK_IN_KHZ+0
; end of __Lib_System_105_107_InitialSetUpFosc
___GenExcept:
;__Lib_System_105_107.c, 311 :: 		
0x0368	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 312 :: 		
L___GenExcept30:
0x036A	0xE7FE    B	L___GenExcept30
;__Lib_System_105_107.c, 313 :: 		
L_end___GenExcept:
0x036C	0xB001    ADD	SP, SP, #4
0x036E	0x4770    BX	LR
; end of ___GenExcept
0x0B20	0xB500    PUSH	(R14)
0x0B22	0xF8DFB010  LDR	R11, [PC, #16]
0x0B26	0xF8DFA010  LDR	R10, [PC, #16]
0x0B2A	0xF7FFFBAF  BL	652
0x0B2E	0xBD00    POP	(R15)
0x0B30	0x4770    BX	LR
0x0B32	0xBF00    NOP
0x0B34	0x00002000  	#536870912
0x0B38	0x00042000  	#536870916
;P5_timers.c,0 :: ?ICSmain_sequence_count_L0 [4]
0x09E4	0x00000000 ;?ICSmain_sequence_count_L0+0
; end of ?ICSmain_sequence_count_L0
;,0 :: _initBlock_1 [2]
; Containing: ?ICSmain_ask_time_flag_L0 [1]
;             ?ICSmain_r_key_rcvd_L0 [1]
0x09E8	0x0100 ;_initBlock_1+0 : ?ICSmain_ask_time_flag_L0 at 0x09E8 : ?ICSmain_r_key_rcvd_L0 at 0x09E9
; end of _initBlock_1
;P5_timers.c,0 :: ?ICSmain_tim1_multiplier_L0 [4]
0x09EC	0x00000001 ;?ICSmain_tim1_multiplier_L0+0
; end of ?ICSmain_tim1_multiplier_L0
;P5_timers.c,0 :: ?ICSmain_tim2_multiplier_L0 [4]
0x09F0	0x00000001 ;?ICSmain_tim2_multiplier_L0+0
; end of ?ICSmain_tim2_multiplier_L0
;P5_timers.c,0 :: ?ICSmain_title_divider_L0 [62]
0x09F4	0x3D3D3D3D ;?ICSmain_title_divider_L0+0
0x09F8	0x3D3D3D3D ;?ICSmain_title_divider_L0+4
0x09FC	0x3D3D3D3D ;?ICSmain_title_divider_L0+8
0x0A00	0x3D3D3D3D ;?ICSmain_title_divider_L0+12
0x0A04	0x3D3D3D3D ;?ICSmain_title_divider_L0+16
0x0A08	0x3D3D3D3D ;?ICSmain_title_divider_L0+20
0x0A0C	0x3D3D3D3D ;?ICSmain_title_divider_L0+24
0x0A10	0x3D3D3D3D ;?ICSmain_title_divider_L0+28
0x0A14	0x3D3D3D3D ;?ICSmain_title_divider_L0+32
0x0A18	0x3D3D3D3D ;?ICSmain_title_divider_L0+36
0x0A1C	0x3D3D3D3D ;?ICSmain_title_divider_L0+40
0x0A20	0x3D3D3D3D ;?ICSmain_title_divider_L0+44
0x0A24	0x3D3D3D3D ;?ICSmain_title_divider_L0+48
0x0A28	0x3D3D3D3D ;?ICSmain_title_divider_L0+52
0x0A2C	0x3D3D3D3D ;?ICSmain_title_divider_L0+56
0x0A30	0x003D ;?ICSmain_title_divider_L0+60
; end of ?ICSmain_title_divider_L0
;P5_timers.c,0 :: ?ICSmain_start_prompt_L0 [42]
0x0A32	0x73657250 ;?ICSmain_start_prompt_L0+0
0x0A36	0x52272073 ;?ICSmain_start_prompt_L0+4
0x0A3A	0x20726F20 ;?ICSmain_start_prompt_L0+8
0x0A3E	0x74202772 ;?ICSmain_start_prompt_L0+12
0x0A42	0x7473206F ;?ICSmain_start_prompt_L0+16
0x0A46	0x20747261 ;?ICSmain_start_prompt_L0+20
0x0A4A	0x2720726F ;?ICSmain_start_prompt_L0+24
0x0A4E	0x27712051 ;?ICSmain_start_prompt_L0+28
0x0A52	0x206F7420 ;?ICSmain_start_prompt_L0+32
0x0A56	0x74697571 ;?ICSmain_start_prompt_L0+36
0x0A5A	0x002E ;?ICSmain_start_prompt_L0+40
; end of ?ICSmain_start_prompt_L0
;,0 :: _initBlock_6 [86]
; Containing: ?ICSmain_tim1_prompt_L0 [43]
;             ?ICSmain_tim2_prompt_L0 [43]
0x0A5C	0x61656C50 ;_initBlock_6+0 : ?ICSmain_tim1_prompt_L0 at 0x0A5C
0x0A60	0x65206573 ;_initBlock_6+4
0x0A64	0x7265746E ;_initBlock_6+8
0x0A68	0x6C656420 ;_initBlock_6+12
0x0A6C	0x74207961 ;_initBlock_6+16
0x0A70	0x20656D69 ;_initBlock_6+20
0x0A74	0x342D3128 ;_initBlock_6+24
0x0A78	0x6F662029 ;_initBlock_6+28
0x0A7C	0x49542072 ;_initBlock_6+32
0x0A80	0x3152454D ;_initBlock_6+36
0x0A84	0x5000203A ;_initBlock_6+40 : ?ICSmain_tim2_prompt_L0 at 0x0A87
0x0A88	0x7361656C ;_initBlock_6+44
0x0A8C	0x6E652065 ;_initBlock_6+48
0x0A90	0x20726574 ;_initBlock_6+52
0x0A94	0x616C6564 ;_initBlock_6+56
0x0A98	0x69742079 ;_initBlock_6+60
0x0A9C	0x2820656D ;_initBlock_6+64
0x0AA0	0x29342D31 ;_initBlock_6+68
0x0AA4	0x726F6620 ;_initBlock_6+72
0x0AA8	0x4D495420 ;_initBlock_6+76
0x0AAC	0x3A325245 ;_initBlock_6+80
0x0AB0	0x0020 ;_initBlock_6+84
; end of _initBlock_6
;,0 :: _initBlock_7 [32]
; Containing: ?ICSmain_title_cr_lf_L0 [3]
;             ?ICSmain_tim1_info_L0 [29]
0x0AB2	0x54000A0D ;_initBlock_7+0 : ?ICSmain_title_cr_lf_L0 at 0x0AB2 : ?ICSmain_tim1_info_L0 at 0x0AB5
0x0AB6	0x52454D49 ;_initBlock_7+4
0x0ABA	0x65642031 ;_initBlock_7+8
0x0ABE	0x2079616C ;_initBlock_7+12
0x0AC2	0x6F636573 ;_initBlock_7+16
0x0AC6	0x2073646E ;_initBlock_7+20
0x0ACA	0x756C6176 ;_initBlock_7+24
0x0ACE	0x00203A65 ;_initBlock_7+28
; end of _initBlock_7
;P5_timers.c,0 :: ?ICSmain_tim2_info_L0 [30]
0x0AD2	0x454D4954 ;?ICSmain_tim2_info_L0+0
0x0AD6	0x64203252 ;?ICSmain_tim2_info_L0+4
0x0ADA	0x79616C65 ;?ICSmain_tim2_info_L0+8
0x0ADE	0x63657320 ;?ICSmain_tim2_info_L0+12
0x0AE2	0x73646E6F ;?ICSmain_tim2_info_L0+16
0x0AE6	0x6C617620 ;?ICSmain_tim2_info_L0+20
0x0AEA	0x203A6575 ;?ICSmain_tim2_info_L0+24
0x0AEE	0x0020 ;?ICSmain_tim2_info_L0+28
; end of ?ICSmain_tim2_info_L0
;,0 :: _initBlock_9 [47]
; Containing: ?ICSmain_goodbye_L0 [31]
;             APBAHBPrescTable [16]
0x0AF0	0x454D4954 ;_initBlock_9+0 : ?ICSmain_goodbye_L0 at 0x0AF0
0x0AF4	0x20312052 ;_initBlock_9+4
0x0AF8	0x20342026 ;_initBlock_9+8
0x0AFC	0x41534944 ;_initBlock_9+12
0x0B00	0x44454C42 ;_initBlock_9+16
0x0B04	0x6F67202C ;_initBlock_9+20
0x0B08	0x7962646F ;_initBlock_9+24
0x0B0C	0x00002165 ;_initBlock_9+28 : APBAHBPrescTable at 0x0B0F
0x0B10	0x01000000 ;_initBlock_9+32
0x0B14	0x01040302 ;_initBlock_9+36
0x0B18	0x06040302 ;_initBlock_9+40
0x0B1C	0x090807 ;_initBlock_9+44
; end of _initBlock_9
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0150     [128]    _write_data_char
0x01D0      [28]    _serial_to_int
0x01EC     [108]    __Lib_System_105_107_SystemClockSetDefault
0x0258      [30]    _print_int
0x0278      [20]    ___CC2DW
0x028C      [58]    ___FillZeros
0x02C8     [140]    _print_string
0x0354      [20]    __Lib_System_105_107_InitialSetUpFosc
0x0368       [8]    ___GenExcept
0x0370     [344]    __Lib_System_105_107_InitialSetUpRCCRCC2
0x04C8    [1308]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x20000000       [4]    ___System_CLOCK_IN_KHZ
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x09E4       [4]    ?ICSmain_sequence_count_L0
0x09E8       [1]    ?ICSmain_ask_time_flag_L0
0x09E9       [1]    ?ICSmain_r_key_rcvd_L0
0x09EC       [4]    ?ICSmain_tim1_multiplier_L0
0x09F0       [4]    ?ICSmain_tim2_multiplier_L0
0x09F4      [62]    ?ICSmain_title_divider_L0
0x0A32      [42]    ?ICSmain_start_prompt_L0
0x0A5C      [43]    ?ICSmain_tim1_prompt_L0
0x0A87      [43]    ?ICSmain_tim2_prompt_L0
0x0AB2       [3]    ?ICSmain_title_cr_lf_L0
0x0AB5      [29]    ?ICSmain_tim1_info_L0
0x0AD2      [30]    ?ICSmain_tim2_info_L0
0x0AF0      [31]    ?ICSmain_goodbye_L0
0x0B0F      [16]    __Lib_System_105_107_APBAHBPrescTable
