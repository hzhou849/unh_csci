;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 4/15/2022 12:56:24 AM
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0xFFFC2000  	536936444
0x0004	0x03510000  	849
0x0008	0x03350000  	821
0x000C	0x03350000  	821
0x0010	0x03350000  	821
0x0014	0x03350000  	821
0x0018	0x03350000  	821
0x001C	0x03350000  	821
0x0020	0x03350000  	821
0x0024	0x03350000  	821
0x0028	0x03350000  	821
0x002C	0x03350000  	821
0x0030	0x03350000  	821
0x0034	0x03350000  	821
0x0038	0x03350000  	821
0x003C	0x03350000  	821
0x0040	0x03350000  	821
0x0044	0x03350000  	821
0x0048	0x03350000  	821
0x004C	0x03350000  	821
0x0050	0x03350000  	821
0x0054	0x03350000  	821
0x0058	0x03350000  	821
0x005C	0x03350000  	821
0x0060	0x03350000  	821
0x0064	0x03350000  	821
0x0068	0x03350000  	821
0x006C	0x03350000  	821
0x0070	0x03350000  	821
0x0074	0x03350000  	821
0x0078	0x03350000  	821
0x007C	0x03350000  	821
0x0080	0x03350000  	821
0x0084	0x03350000  	821
0x0088	0x03350000  	821
0x008C	0x03350000  	821
0x0090	0x03350000  	821
0x0094	0x03350000  	821
0x0098	0x03350000  	821
0x009C	0x03350000  	821
0x00A0	0x03350000  	821
0x00A4	0x03350000  	821
0x00A8	0x03350000  	821
0x00AC	0x03350000  	821
0x00B0	0x03350000  	821
0x00B4	0x03350000  	821
0x00B8	0x03350000  	821
0x00BC	0x03350000  	821
0x00C0	0x03350000  	821
0x00C4	0x03350000  	821
0x00C8	0x03350000  	821
0x00CC	0x03350000  	821
0x00D0	0x03350000  	821
0x00D4	0x03350000  	821
0x00D8	0x03350000  	821
0x00DC	0x03350000  	821
0x00E0	0x03350000  	821
0x00E4	0x03350000  	821
0x00E8	0x03350000  	821
0x00EC	0x03350000  	821
0x00F0	0x03350000  	821
0x00F4	0x03350000  	821
0x00F8	0x03350000  	821
0x00FC	0x03350000  	821
0x0100	0x03350000  	821
0x0104	0x03350000  	821
0x0108	0x03350000  	821
0x010C	0x03350000  	821
0x0110	0x03350000  	821
0x0114	0x03350000  	821
0x0118	0x03350000  	821
0x011C	0x03350000  	821
0x0120	0x03350000  	821
0x0124	0x03350000  	821
0x0128	0x03350000  	821
0x012C	0x03350000  	821
0x0130	0x03350000  	821
0x0134	0x03350000  	821
0x0138	0x03350000  	821
0x013C	0x03350000  	821
0x0140	0x03350000  	821
0x0144	0x03350000  	821
0x0148	0x03350000  	821
0x014C	0x03350000  	821
; end of ____SysVT
_main:
;P5_timers.c, 112 :: 		void main() {
0x0350	0xB098    SUB	SP, SP, #96
0x0352	0xF000F9A5  BL	1696
0x0356	0xF000FA89  BL	2156
0x035A	0xF7FFFFEF  BL	828
;P5_timers.c, 114 :: 		uint8_t div_wait_flag  = FALSE;
;P5_timers.c, 115 :: 		uint8_t  tim1_wait_flag = FALSE;
;P5_timers.c, 116 :: 		uint8_t  tim2_wait_flag = FALSE;
;P5_timers.c, 117 :: 		uint8_t wait_flag       = FALSE;
; wait_flag start address is: 8 (R2)
0x035E	0x2200    MOVS	R2, #0
;P5_timers.c, 121 :: 		uint32_t sequence_count = 0;
;P5_timers.c, 123 :: 		uint32_t tim1_multiplier = 1;
; tim1_multiplier start address is: 12 (R3)
0x0360	0xF04F0301  MOV	R3, #1
;P5_timers.c, 124 :: 		uint32_t tim2_multiplier = 1;
; tim2_multiplier start address is: 16 (R4)
0x0364	0xF04F0401  MOV	R4, #1
;P5_timers.c, 127 :: 		uint8_t title_divider[]  = "=============================================================";
;P5_timers.c, 128 :: 		uint8_t tim1_prompt  []  = "Please enter delay time (1-4) for TIMER1: ";
0x0368	0xF10D0B08  ADD	R11, SP, #8
0x036C	0xF10B0A56  ADD	R10, R11, #86
0x0370	0xF8DFC204  LDR	R12, [PC, #516]
0x0374	0xF7FFFFB6  BL	___CC2DW+0
;P5_timers.c, 129 :: 		uint8_t tim2_prompt  []  = "Please enter delay time (1-4) for TIMER2: ";
;P5_timers.c, 130 :: 		uint8_t title_cr_lf  []  = "\x0D\x0A";
;P5_timers.c, 136 :: 		RCC_CR = 0x05010081;
0x0378	0x4980    LDR	R1, [PC, #512]
0x037A	0x4881    LDR	R0, [PC, #516]
0x037C	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 143 :: 		RCC_CFGR = 0x091D8402; // IDE Scheme
0x037E	0x4981    LDR	R1, [PC, #516]
0x0380	0x4881    LDR	R0, [PC, #516]
0x0382	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 151 :: 		RCC_CFGR2 = 0x00010644;
0x0384	0x4981    LDR	R1, [PC, #516]
0x0386	0x4882    LDR	R0, [PC, #520]
0x0388	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 157 :: 		USART1_CR1 &= ~(1 << 13);                   // Disable USART for configuration
0x038A	0x4882    LDR	R0, [PC, #520]
0x038C	0x6801    LDR	R1, [R0, #0]
0x038E	0xF46F5000  MVN	R0, #8192
0x0392	0x4001    ANDS	R1, R0
0x0394	0x487F    LDR	R0, [PC, #508]
0x0396	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 160 :: 		RCC_APB2ENR |= 0x00000001;                  // Alt. function bit to enable USART1 PA9/PA10
0x0398	0x487F    LDR	R0, [PC, #508]
0x039A	0x6800    LDR	R0, [R0, #0]
0x039C	0xF0400101  ORR	R1, R0, #1
0x03A0	0x487D    LDR	R0, [PC, #500]
0x03A2	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 161 :: 		AFIO_MAPR  = 0x00000000;                    // Bit[2] USART1 REMAP 0: No Remap
0x03A4	0x2100    MOVS	R1, #0
0x03A6	0x487D    LDR	R0, [PC, #500]
0x03A8	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 163 :: 		RCC_APB2ENR |= 1 << 2;                      // Enable GPIO Clock - Port A for USART1
0x03AA	0x487B    LDR	R0, [PC, #492]
0x03AC	0x6800    LDR	R0, [R0, #0]
0x03AE	0xF0400104  ORR	R1, R0, #4
0x03B2	0x4879    LDR	R0, [PC, #484]
0x03B4	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 164 :: 		RCC_APB2ENR |= 1 << 3;                      // Enable GPIO Clock - Port B
0x03B6	0x4878    LDR	R0, [PC, #480]
0x03B8	0x6800    LDR	R0, [R0, #0]
0x03BA	0xF0400108  ORR	R1, R0, #8
0x03BE	0x4876    LDR	R0, [PC, #472]
0x03C0	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 165 :: 		RCC_APB2ENR |= 1 << 4;                      // Enable GPIO Clock - Port C
0x03C2	0x4875    LDR	R0, [PC, #468]
0x03C4	0x6800    LDR	R0, [R0, #0]
0x03C6	0xF0400110  ORR	R1, R0, #16
0x03CA	0x4873    LDR	R0, [PC, #460]
0x03CC	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 166 :: 		RCC_APB2ENR |= 1 << 5;                      // Enable GPIO Clock - Port D
0x03CE	0x4872    LDR	R0, [PC, #456]
0x03D0	0x6800    LDR	R0, [R0, #0]
0x03D2	0xF0400120  ORR	R1, R0, #32
0x03D6	0x4870    LDR	R0, [PC, #448]
0x03D8	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 167 :: 		RCC_APB2ENR |= 1 << 6;                      // Enable GPIO Clock - Port E
0x03DA	0x486F    LDR	R0, [PC, #444]
0x03DC	0x6800    LDR	R0, [R0, #0]
0x03DE	0xF0400140  ORR	R1, R0, #64
0x03E2	0x486D    LDR	R0, [PC, #436]
0x03E4	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 168 :: 		RCC_APB2ENR |= 1 << 14;                     // Enable USART1 Clock
0x03E6	0x486C    LDR	R0, [PC, #432]
0x03E8	0x6800    LDR	R0, [R0, #0]
0x03EA	0xF4404180  ORR	R1, R0, #16384
0x03EE	0x486A    LDR	R0, [PC, #424]
0x03F0	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 173 :: 		GPIOA_CRH &= ~(0xFF << 4);                  // Shift 4 bits left to clear out bits PA9/PA10->mask with  FFFF F00F
0x03F2	0x486B    LDR	R0, [PC, #428]
0x03F4	0x6801    LDR	R1, [R0, #0]
0x03F6	0xF24F000F  MOVW	R0, #61455
0x03FA	0x4001    ANDS	R1, R0
0x03FC	0x4868    LDR	R0, [PC, #416]
0x03FE	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 174 :: 		GPIOA_CRH |=  (0x0B << 4);                  // USART1 Tx/PA9 set CNF=AFoutput push-pull b10; MODE:50Hz
0x0400	0x4867    LDR	R0, [PC, #412]
0x0402	0x6800    LDR	R0, [R0, #0]
0x0404	0xF04001B0  ORR	R1, R0, #176
0x0408	0x4865    LDR	R0, [PC, #404]
0x040A	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 175 :: 		GPIOA_CRH |=  (0x04 << 8);                  // USART1 Rx/PA10 set CNF=Input-floating b01; MODE: Input mode b00;
0x040C	0x4864    LDR	R0, [PC, #400]
0x040E	0x6800    LDR	R0, [R0, #0]
0x0410	0xF4406180  ORR	R1, R0, #1024
0x0414	0x4862    LDR	R0, [PC, #392]
0x0416	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 177 :: 		GPIOB_CRH = GPIO_OUTPUT;
0x0418	0xF04F3133  MOV	R1, #858993459
0x041C	0x4861    LDR	R0, [PC, #388]
0x041E	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 178 :: 		GPIOB_CRL = GPIO_OUTPUT;
0x0420	0xF04F3133  MOV	R1, #858993459
0x0424	0x4860    LDR	R0, [PC, #384]
0x0426	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 179 :: 		GPIOC_CRH = GPIO_OUTPUT;
0x0428	0xF04F3133  MOV	R1, #858993459
0x042C	0x485F    LDR	R0, [PC, #380]
0x042E	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 180 :: 		GPIOC_CRL = GPIO_OUTPUT;
0x0430	0xF04F3133  MOV	R1, #858993459
0x0434	0x485E    LDR	R0, [PC, #376]
0x0436	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 181 :: 		GPIOD_CRH = GPIO_OUTPUT;
0x0438	0xF04F3133  MOV	R1, #858993459
0x043C	0x485D    LDR	R0, [PC, #372]
0x043E	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 182 :: 		GPIOD_CRL = GPIO_OUTPUT;
0x0440	0xF04F3133  MOV	R1, #858993459
0x0444	0x485C    LDR	R0, [PC, #368]
0x0446	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 183 :: 		GPIOE_CRH = GPIO_OUTPUT;
0x0448	0xF04F3133  MOV	R1, #858993459
0x044C	0x485B    LDR	R0, [PC, #364]
0x044E	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 184 :: 		GPIOE_CRL = GPIO_OUTPUT;
0x0450	0xF04F3133  MOV	R1, #858993459
0x0454	0x485A    LDR	R0, [PC, #360]
0x0456	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 187 :: 		USART1_BRR = 0x00000506;                   // Clock=72MHz, oversample=16x; 72MHz / (16 * 56,000) = 80.357
0x0458	0xF2405106  MOVW	R1, #1286
0x045C	0x4859    LDR	R0, [PC, #356]
0x045E	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 191 :: 		USART1_CR1 &= ~(1 << 13);                   // Disable USART for configuration
0x0460	0x484C    LDR	R0, [PC, #304]
0x0462	0x6801    LDR	R1, [R0, #0]
0x0464	0xF46F5000  MVN	R0, #8192
0x0468	0x4001    ANDS	R1, R0
0x046A	0x484A    LDR	R0, [PC, #296]
0x046C	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 192 :: 		USART1_CR1 &= ~(1 << 12);                   // Force 8 data bits. Mbit set to 0
0x046E	0x4849    LDR	R0, [PC, #292]
0x0470	0x6801    LDR	R1, [R0, #0]
0x0472	0xF46F5080  MVN	R0, #4096
0x0476	0x4001    ANDS	R1, R0
0x0478	0x4846    LDR	R0, [PC, #280]
0x047A	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 193 :: 		USART1_CR1 &= ~(3 << 9);                    // Force no parity & no parity control
0x047C	0x4845    LDR	R0, [PC, #276]
0x047E	0x6801    LDR	R1, [R0, #0]
0x0480	0xF46F60C0  MVN	R0, #1536
0x0484	0x4001    ANDS	R1, R0
0x0486	0x4843    LDR	R0, [PC, #268]
0x0488	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 194 :: 		USART1_CR2 &= ~(3 << 12);                   // Force 1 stop bit
0x048A	0x484F    LDR	R0, [PC, #316]
0x048C	0x6801    LDR	R1, [R0, #0]
0x048E	0xF46F5040  MVN	R0, #12288
0x0492	0x4001    ANDS	R1, R0
0x0494	0x484C    LDR	R0, [PC, #304]
0x0496	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 195 :: 		USART1_CR3 &= ~(3 << 8);                    // Force no flow control and no DMA for USART1
0x0498	0x484C    LDR	R0, [PC, #304]
0x049A	0x6801    LDR	R1, [R0, #0]
0x049C	0xF46F7040  MVN	R0, #768
0x04A0	0x4001    ANDS	R1, R0
0x04A2	0x484A    LDR	R0, [PC, #296]
0x04A4	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 197 :: 		USART1_CR1 |= (3 << 2);                     // Rx, Tx Enable
0x04A6	0x483B    LDR	R0, [PC, #236]
0x04A8	0x6800    LDR	R0, [R0, #0]
0x04AA	0xF040010C  ORR	R1, R0, #12
0x04AE	0x4839    LDR	R0, [PC, #228]
0x04B0	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 198 :: 		Delay_ms(100);                              // Allow time for USART to complete initialization
0x04B2	0xF644777F  MOVW	R7, #20351
0x04B6	0xF2C00712  MOVT	R7, #18
L_main24:
0x04BA	0x1E7F    SUBS	R7, R7, #1
0x04BC	0xD1FD    BNE	L_main24
0x04BE	0xBF00    NOP
0x04C0	0xBF00    NOP
0x04C2	0xBF00    NOP
0x04C4	0xBF00    NOP
0x04C6	0xBF00    NOP
;P5_timers.c, 199 :: 		USART1_CR1 |= 1 << 13;                      // **NOTE: USART1 Enable must be done after configuration is complete.
0x04C8	0x4832    LDR	R0, [PC, #200]
0x04CA	0x6800    LDR	R0, [R0, #0]
0x04CC	0xF4405100  ORR	R1, R0, #8192
0x04D0	0x4830    LDR	R0, [PC, #192]
0x04D2	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 203 :: 		RCC_APB2ENR |= (1 << 11);                   // Enable TIMER1 Clock
0x04D4	0x4830    LDR	R0, [PC, #192]
0x04D6	0x6800    LDR	R0, [R0, #0]
0x04D8	0xF4406100  ORR	R1, R0, #2048
0x04DC	0x482E    LDR	R0, [PC, #184]
0x04DE	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 204 :: 		RCC_APB1ENR |= (1 << 2);                    // Enable TIMER4 Clock
0x04E0	0x483B    LDR	R0, [PC, #236]
0x04E2	0x6800    LDR	R0, [R0, #0]
0x04E4	0xF0400104  ORR	R1, R0, #4
0x04E8	0x4839    LDR	R0, [PC, #228]
0x04EA	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 210 :: 		TIM1_CR1 = 0x0000;
0x04EC	0x2100    MOVS	R1, #0
0x04EE	0x4839    LDR	R0, [PC, #228]
0x04F0	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 211 :: 		TIM4_CR1 = 0x0000;
0x04F2	0x2100    MOVS	R1, #0
0x04F4	0x4838    LDR	R0, [PC, #224]
0x04F6	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 218 :: 		TIM1_PSC = 7999;
0x04F8	0xF641713F  MOVW	R1, #7999
0x04FC	0x4837    LDR	R0, [PC, #220]
0x04FE	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 219 :: 		TIM4_PSC = 7999;
0x0500	0xF641713F  MOVW	R1, #7999
0x0504	0x4836    LDR	R0, [PC, #216]
0x0506	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 225 :: 		TIM1_ARR = ( (uint32_t)9000 * tim1_multiplier );
0x0508	0x4836    LDR	R0, [PC, #216]
0x050A	0xFB00F103  MUL	R1, R0, R3
; tim1_multiplier end address is: 12 (R3)
0x050E	0x4836    LDR	R0, [PC, #216]
0x0510	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 226 :: 		TIM4_ARR = ( (uint32_t)9000 * tim2_multiplier );              // 2 seconds
0x0512	0x4834    LDR	R0, [PC, #208]
0x0514	0xFB00F104  MUL	R1, R0, R4
; tim2_multiplier end address is: 16 (R4)
0x0518	0x4834    LDR	R0, [PC, #208]
0x051A	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 228 :: 		TIM1_CR1 = 0x0001;                          // Finished configuration, now we can enable TIMER1; BIT4=0 couting up
0x051C	0x2101    MOVS	R1, #1
0x051E	0x482D    LDR	R0, [PC, #180]
0x0520	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 229 :: 		TIM4_CR1 = 0x0001;                          // Finished configuration, now we can enable TIMER4; BIT4=0 couting up
0x0522	0x2101    MOVS	R1, #1
0x0524	0x482C    LDR	R0, [PC, #176]
0x0526	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 232 :: 		GPIOB_ODR = 0x0000;
0x0528	0x2100    MOVS	R1, #0
0x052A	0x4831    LDR	R0, [PC, #196]
0x052C	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 233 :: 		GPIOC_ODR = 0x0000;
0x052E	0x2100    MOVS	R1, #0
0x0530	0x4830    LDR	R0, [PC, #192]
0x0532	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 234 :: 		GPIOD_ODR = 0x0000;
0x0534	0x2100    MOVS	R1, #0
0x0536	0x4830    LDR	R0, [PC, #192]
0x0538	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 235 :: 		GPIOE_ODR = 0x0000;
0x053A	0x2100    MOVS	R1, #0
0x053C	0x482F    LDR	R0, [PC, #188]
0x053E	0x6001    STR	R1, [R0, #0]
; wait_flag end address is: 8 (R2)
;P5_timers.c, 239 :: 		for (;;) {
L_main26:
;P5_timers.c, 242 :: 		if (wait_flag == FALSE) {
; wait_flag start address is: 8 (R2)
0x0540	0xB9A2    CBNZ	R2, L__main50
;P5_timers.c, 252 :: 		}
L_main30:
;P5_timers.c, 253 :: 		else if ( sequence_count = 1 && wait_flag == TRUE ) {
0x0542	0x2A01    CMP	R2, #1
0x0544	0xD101    BNE	L_main35
; wait_flag end address is: 8 (R2)
0x0546	0x2001    MOVS	R0, #1
0x0548	0xE000    B	L_main34
L_main35:
0x054A	0x2000    MOVS	R0, #0
L_main34:
; sequence_count start address is: 0 (R0)
0x054C	0xB130    CBZ	R0, L_main36
; sequence_count end address is: 0 (R0)
;P5_timers.c, 254 :: 		print_string(tim1_prompt, NO_NEW_LINE);
0x054E	0xA802    ADD	R0, SP, #8
0x0550	0x2100    MOVS	R1, #0
0x0552	0xF7FFFE81  BL	_print_string+0
;P5_timers.c, 256 :: 		wait_flag = TRUE;
; wait_flag start address is: 0 (R0)
0x0556	0x2001    MOVS	R0, #1
;P5_timers.c, 257 :: 		}
0x0558	0xB2C2    UXTB	R2, R0
; wait_flag end address is: 0 (R0)
0x055A	0xE006    B	L_main37
L_main36:
;P5_timers.c, 259 :: 		print_string(tim2_prompt, NO_NEW_LINE);
0x055C	0xF10D0033  ADD	R0, SP, #51
0x0560	0x2100    MOVS	R1, #0
0x0562	0xF7FFFE79  BL	_print_string+0
;P5_timers.c, 260 :: 		wait_flag = TRUE;
; wait_flag start address is: 0 (R0)
0x0566	0x2001    MOVS	R0, #1
; wait_flag end address is: 0 (R0)
0x0568	0xB2C2    UXTB	R2, R0
;P5_timers.c, 263 :: 		}
L_main37:
;P5_timers.c, 264 :: 		}
; wait_flag start address is: 8 (R2)
; wait_flag end address is: 8 (R2)
0x056A	0xE7FF    B	L_main29
L__main50:
;P5_timers.c, 242 :: 		if (wait_flag == FALSE) {
;P5_timers.c, 264 :: 		}
L_main29:
;P5_timers.c, 269 :: 		if ( (USART1_SR & (1 << 5))) {
; wait_flag start address is: 8 (R2)
0x056C	0x4824    LDR	R0, [PC, #144]
0x056E	0x6800    LDR	R0, [R0, #0]
0x0570	0xF0000020  AND	R0, R0, #32
0x0574	0xF000B846  B	#140
0x0578	0x08040000  	?ICSmain_tim1_prompt_L0+0
0x057C	0x00810501  	#83951745
0x0580	0x10004002  	RCC_CR+0
0x0584	0x8402091D  	#152929282
0x0588	0x10044002  	RCC_CFGR+0
0x058C	0x06440001  	#67140
0x0590	0x102C4002  	RCC_CFGR2+0
0x0594	0x380C4001  	USART1_CR1+0
0x0598	0x10184002  	RCC_APB2ENR+0
0x059C	0x00044001  	AFIO_MAPR+0
0x05A0	0x08044001  	GPIOA_CRH+0
0x05A4	0x0C044001  	GPIOB_CRH+0
0x05A8	0x0C004001  	GPIOB_CRL+0
0x05AC	0x10044001  	GPIOC_CRH+0
0x05B0	0x10004001  	GPIOC_CRL+0
0x05B4	0x14044001  	GPIOD_CRH+0
0x05B8	0x14004001  	GPIOD_CRL+0
0x05BC	0x18044001  	GPIOE_CRH+0
0x05C0	0x18004001  	GPIOE_CRL+0
0x05C4	0x38084001  	USART1_BRR+0
0x05C8	0x38104001  	USART1_CR2+0
0x05CC	0x38144001  	USART1_CR3+0
0x05D0	0x101C4002  	RCC_APB1ENR+0
0x05D4	0x2C004001  	TIM1_CR1+0
0x05D8	0x08004000  	TIM4_CR1+0
0x05DC	0x2C284001  	TIM1_PSC+0
0x05E0	0x08284000  	TIM4_PSC+0
0x05E4	0x23280000  	#9000
0x05E8	0x2C2C4001  	TIM1_ARR+0
0x05EC	0x082C4000  	TIM4_ARR+0
0x05F0	0x0C0C4001  	GPIOB_ODR+0
0x05F4	0x100C4001  	GPIOC_ODR+0
0x05F8	0x140C4001  	GPIOD_ODR+0
0x05FC	0x180C4001  	GPIOE_ODR+0
0x0600	0x38004001  	USART1_SR+0
0x0604	0xB198    CBZ	R0, L__main51
;P5_timers.c, 270 :: 		rx_buffer = USART1_DR;
0x0606	0x481C    LDR	R0, [PC, #112]
0x0608	0x6800    LDR	R0, [R0, #0]
0x060A	0x9001    STR	R0, [SP, #4]
; wait_flag end address is: 8 (R2)
;P5_timers.c, 272 :: 		while ( (USART1_SR & ( 1 << 7)) ==0 ) {}
L_main40:
; wait_flag start address is: 8 (R2)
0x060C	0x481B    LDR	R0, [PC, #108]
0x060E	0x6800    LDR	R0, [R0, #0]
0x0610	0xF0000080  AND	R0, R0, #128
0x0614	0xB900    CBNZ	R0, L_main41
0x0616	0xE7F9    B	L_main40
L_main41:
;P5_timers.c, 273 :: 		USART1_DR = rx_buffer;
0x0618	0x9901    LDR	R1, [SP, #4]
0x061A	0x4817    LDR	R0, [PC, #92]
0x061C	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 278 :: 		tim1_multiplier = serial_to_int(&rx_buffer);
0x061E	0xA801    ADD	R0, SP, #4
0x0620	0xF7FFFDD6  BL	_serial_to_int+0
;P5_timers.c, 285 :: 		TIM1_ARR = ( (uint32_t)9000 * tim1_multiplier );
0x0624	0x4916    LDR	R1, [PC, #88]
0x0626	0x4341    MULS	R1, R0, R1
0x0628	0x4816    LDR	R0, [PC, #88]
0x062A	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 299 :: 		}
L_main43:
;P5_timers.c, 302 :: 		}
0x062C	0xE7FF    B	L_main39
; wait_flag end address is: 8 (R2)
L__main51:
;P5_timers.c, 269 :: 		if ( (USART1_SR & (1 << 5))) {
;P5_timers.c, 302 :: 		}
L_main39:
;P5_timers.c, 310 :: 		if ( TIM1_SR.UIF == 1 ) {
; wait_flag start address is: 8 (R2)
0x062E	0x4816    LDR	R0, [PC, #88]
0x0630	0x6800    LDR	R0, [R0, #0]
0x0632	0xB168    CBZ	R0, L_main45
;P5_timers.c, 313 :: 		TIM1_SR.UIF = 0;
0x0634	0x2100    MOVS	R1, #0
0x0636	0xB249    SXTB	R1, R1
0x0638	0x4813    LDR	R0, [PC, #76]
0x063A	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 314 :: 		GPIOB_ODR = ~GPIOB_ODR;
0x063C	0x4813    LDR	R0, [PC, #76]
0x063E	0x6800    LDR	R0, [R0, #0]
0x0640	0x43C1    MVN	R1, R0
0x0642	0x4812    LDR	R0, [PC, #72]
0x0644	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 315 :: 		GPIOC_ODR = ~GPIOC_ODR;
0x0646	0x4812    LDR	R0, [PC, #72]
0x0648	0x6800    LDR	R0, [R0, #0]
0x064A	0x43C1    MVN	R1, R0
0x064C	0x4810    LDR	R0, [PC, #64]
0x064E	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 318 :: 		}
L_main45:
;P5_timers.c, 319 :: 		if ( TIM4_SR.UIF == 1 ) {
0x0650	0x4810    LDR	R0, [PC, #64]
0x0652	0x6800    LDR	R0, [R0, #0]
0x0654	0xB168    CBZ	R0, L_main46
;P5_timers.c, 321 :: 		TIM4_SR.UIF = 0;
0x0656	0x2100    MOVS	R1, #0
0x0658	0xB249    SXTB	R1, R1
0x065A	0x480E    LDR	R0, [PC, #56]
0x065C	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 322 :: 		GPIOD_ODR = ~GPIOD_ODR;
0x065E	0x480E    LDR	R0, [PC, #56]
0x0660	0x6800    LDR	R0, [R0, #0]
0x0662	0x43C1    MVN	R1, R0
0x0664	0x480C    LDR	R0, [PC, #48]
0x0666	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 323 :: 		GPIOE_ODR = ~GPIOE_ODR;
0x0668	0x480C    LDR	R0, [PC, #48]
0x066A	0x6800    LDR	R0, [R0, #0]
0x066C	0x43C1    MVN	R1, R0
0x066E	0x480B    LDR	R0, [PC, #44]
0x0670	0x6001    STR	R1, [R0, #0]
;P5_timers.c, 324 :: 		}
L_main46:
;P5_timers.c, 332 :: 		}
; wait_flag end address is: 8 (R2)
0x0672	0xE765    B	L_main26
;P5_timers.c, 335 :: 		}
L_end_main:
L__main_end_loop:
0x0674	0xE7FE    B	L__main_end_loop
0x0676	0xBF00    NOP
0x0678	0x38044001  	USART1_DR+0
0x067C	0x38004001  	USART1_SR+0
0x0680	0x23280000  	#9000
0x0684	0x2C2C4001  	TIM1_ARR+0
0x0688	0x82004225  	TIM1_SR+0
0x068C	0x0C0C4001  	GPIOB_ODR+0
0x0690	0x100C4001  	GPIOC_ODR+0
0x0694	0x02004201  	TIM4_SR+0
0x0698	0x140C4001  	GPIOD_ODR+0
0x069C	0x180C4001  	GPIOE_ODR+0
; end of _main
___CC2DW:
;__Lib_System_105_107.c, 28 :: 		
0x02E4	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 30 :: 		
L_loopDW:
;__Lib_System_105_107.c, 31 :: 		
0x02E6	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_105_107.c, 32 :: 		
0x02EA	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_105_107.c, 33 :: 		
0x02EE	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 34 :: 		
0x02F2	0xD1F8    BNE	L_loopDW
;__Lib_System_105_107.c, 36 :: 		
L_end___CC2DW:
0x02F4	0xB001    ADD	SP, SP, #4
0x02F6	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_105_107.c, 70 :: 		
0x02F8	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 72 :: 		
0x02FA	0xF04F0900  MOV	R9, #0
;__Lib_System_105_107.c, 73 :: 		
0x02FE	0xF04F0C00  MOV	R12, #0
;__Lib_System_105_107.c, 74 :: 		
0x0302	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_105_107.c, 75 :: 		
0x0306	0xDC04    BGT	L_loopFZs
;__Lib_System_105_107.c, 76 :: 		
0x0308	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_105_107.c, 77 :: 		
0x030C	0xDB01    BLT	L_loopFZs
;__Lib_System_105_107.c, 78 :: 		
0x030E	0x46D4    MOV	R12, R10
;__Lib_System_105_107.c, 79 :: 		
0x0310	0x46EA    MOV	R10, SP
;__Lib_System_105_107.c, 80 :: 		
L_loopFZs:
;__Lib_System_105_107.c, 81 :: 		
0x0312	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_105_107.c, 82 :: 		
0x0316	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 83 :: 		
0x031A	0xD1FA    BNE	L_loopFZs
;__Lib_System_105_107.c, 84 :: 		
0x031C	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_105_107.c, 85 :: 		
0x0320	0xDD05    BLE	L_norep
;__Lib_System_105_107.c, 86 :: 		
0x0322	0x46E2    MOV	R10, R12
;__Lib_System_105_107.c, 87 :: 		
0x0324	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_105_107.c, 88 :: 		
0x0328	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_105_107.c, 89 :: 		
0x032C	0xE7F1    B	L_loopFZs
;__Lib_System_105_107.c, 90 :: 		
L_norep:
;__Lib_System_105_107.c, 92 :: 		
L_end___FillZeros:
0x032E	0xB001    ADD	SP, SP, #4
0x0330	0x4770    BX	LR
; end of ___FillZeros
_print_string:
;P5_timers.c, 95 :: 		void print_string(uint8_t *arr_string, uint8_t new_line_opt) {
; new_line_opt start address is: 4 (R1)
; arr_string start address is: 0 (R0)
0x0258	0xB0C1    SUB	SP, SP, #260
0x025A	0xF8CDE000  STR	LR, [SP, #0]
; new_line_opt end address is: 4 (R1)
; arr_string end address is: 0 (R0)
; arr_string start address is: 0 (R0)
; new_line_opt start address is: 4 (R1)
;P5_timers.c, 97 :: 		uint32_t i = 0;
; i start address is: 36 (R9)
0x025E	0xF04F0900  MOV	R9, #0
; arr_string end address is: 0 (R0)
; new_line_opt end address is: 4 (R1)
; i end address is: 36 (R9)
0x0262	0x4680    MOV	R8, R0
0x0264	0xB2CE    UXTB	R6, R1
;P5_timers.c, 100 :: 		while (arr_string[i] != '\0') {
L_print_string18:
; i start address is: 36 (R9)
; new_line_opt start address is: 24 (R6)
; new_line_opt start address is: 24 (R6)
; new_line_opt end address is: 24 (R6)
; arr_string start address is: 32 (R8)
0x0266	0xEB080209  ADD	R2, R8, R9, LSL #0
0x026A	0x7812    LDRB	R2, [R2, #0]
0x026C	0xB1B2    CBZ	R2, L_print_string19
; new_line_opt end address is: 24 (R6)
;P5_timers.c, 101 :: 		buffer[i] = (buffer[i] & (uint32_t) 0x00000000) | arr_string[i];
; new_line_opt start address is: 24 (R6)
0x026E	0xAD01    ADD	R5, SP, #4
0x0270	0xEA4F0289  LSL	R2, R9, #2
0x0274	0x18AC    ADDS	R4, R5, R2
0x0276	0x6822    LDR	R2, [R4, #0]
0x0278	0xF0020300  AND	R3, R2, #0
0x027C	0xEB080209  ADD	R2, R8, R9, LSL #0
0x0280	0x7812    LDRB	R2, [R2, #0]
0x0282	0xEA430202  ORR	R2, R3, R2, LSL #0
0x0286	0x6022    STR	R2, [R4, #0]
;P5_timers.c, 102 :: 		write_data_char ( &buffer[i], new_line_opt);
0x0288	0xEA4F0289  LSL	R2, R9, #2
0x028C	0x18AA    ADDS	R2, R5, R2
0x028E	0xB2F1    UXTB	R1, R6
0x0290	0x4610    MOV	R0, R2
0x0292	0xF7FFFF5D  BL	_write_data_char+0
;P5_timers.c, 103 :: 		i++;
0x0296	0xF1090901  ADD	R9, R9, #1
;P5_timers.c, 104 :: 		}
; new_line_opt end address is: 24 (R6)
; arr_string end address is: 32 (R8)
; i end address is: 36 (R9)
0x029A	0xE7E4    B	L_print_string18
L_print_string19:
;P5_timers.c, 106 :: 		Delay_ms(10);
0x029C	0xF24D47BF  MOVW	R7, #54463
0x02A0	0xF2C00701  MOVT	R7, #1
0x02A4	0xBF00    NOP
0x02A6	0xBF00    NOP
L_print_string20:
0x02A8	0x1E7F    SUBS	R7, R7, #1
0x02AA	0xD1FD    BNE	L_print_string20
0x02AC	0xBF00    NOP
0x02AE	0xBF00    NOP
0x02B0	0xBF00    NOP
;P5_timers.c, 107 :: 		USART1_DR = CHAR_CR;
0x02B2	0xF04F030D  MOV	R3, #13
0x02B6	0x4A0A    LDR	R2, [PC, #40]
0x02B8	0x6013    STR	R3, [R2, #0]
;P5_timers.c, 108 :: 		Delay_ms(10);
0x02BA	0xF24D47BF  MOVW	R7, #54463
0x02BE	0xF2C00701  MOVT	R7, #1
L_print_string22:
0x02C2	0x1E7F    SUBS	R7, R7, #1
0x02C4	0xD1FD    BNE	L_print_string22
0x02C6	0xBF00    NOP
0x02C8	0xBF00    NOP
0x02CA	0xBF00    NOP
0x02CC	0xBF00    NOP
0x02CE	0xBF00    NOP
;P5_timers.c, 109 :: 		USART1_DR = CHAR_LF;
0x02D0	0xF04F030A  MOV	R3, #10
0x02D4	0x4A02    LDR	R2, [PC, #8]
0x02D6	0x6013    STR	R3, [R2, #0]
;P5_timers.c, 110 :: 		}
L_end_print_string:
0x02D8	0xF8DDE000  LDR	LR, [SP, #0]
0x02DC	0xB041    ADD	SP, SP, #260
0x02DE	0x4770    BX	LR
0x02E0	0x38044001  	USART1_DR+0
; end of _print_string
_write_data_char:
;P5_timers.c, 77 :: 		void write_data_char(uint32_t *tx_char, uint8_t new_line_opt) {
; new_line_opt start address is: 4 (R1)
; tx_char start address is: 0 (R0)
0x0150	0xB081    SUB	SP, SP, #4
; new_line_opt end address is: 4 (R1)
; tx_char end address is: 0 (R0)
; tx_char start address is: 0 (R0)
; new_line_opt start address is: 4 (R1)
0x0152	0xF88D1000  STRB	R1, [SP, #0]
; tx_char end address is: 0 (R0)
; new_line_opt end address is: 4 (R1)
0x0156	0x4601    MOV	R1, R0
0x0158	0xF89D0000  LDRB	R0, [SP, #0]
;P5_timers.c, 79 :: 		while ( (USART1_SR & (1 << 7)) == 0 ) {}                        // Wait for transmit data register to be empty
L_write_data_char9:
; new_line_opt start address is: 0 (R0)
; tx_char start address is: 4 (R1)
0x015C	0x4A1A    LDR	R2, [PC, #104]
0x015E	0x6812    LDR	R2, [R2, #0]
0x0160	0xF0020280  AND	R2, R2, #128
0x0164	0xB902    CBNZ	R2, L_write_data_char10
0x0166	0xE7F9    B	L_write_data_char9
L_write_data_char10:
;P5_timers.c, 81 :: 		Delay_ms(10);                                                   // Transmit data out via USART1
0x0168	0xF24D47BF  MOVW	R7, #54463
0x016C	0xF2C00701  MOVT	R7, #1
L_write_data_char11:
0x0170	0x1E7F    SUBS	R7, R7, #1
0x0172	0xD1FD    BNE	L_write_data_char11
0x0174	0xBF00    NOP
0x0176	0xBF00    NOP
0x0178	0xBF00    NOP
0x017A	0xBF00    NOP
0x017C	0xBF00    NOP
;P5_timers.c, 82 :: 		USART1_DR = *tx_char;
0x017E	0x680B    LDR	R3, [R1, #0]
; tx_char end address is: 4 (R1)
0x0180	0x4A12    LDR	R2, [PC, #72]
0x0182	0x6013    STR	R3, [R2, #0]
;P5_timers.c, 84 :: 		if (new_line_opt == 1) {
0x0184	0x2801    CMP	R0, #1
0x0186	0xD11D    BNE	L_write_data_char13
; new_line_opt end address is: 0 (R0)
;P5_timers.c, 85 :: 		Delay_ms(10);
0x0188	0xF24D47BF  MOVW	R7, #54463
0x018C	0xF2C00701  MOVT	R7, #1
L_write_data_char14:
0x0190	0x1E7F    SUBS	R7, R7, #1
0x0192	0xD1FD    BNE	L_write_data_char14
0x0194	0xBF00    NOP
0x0196	0xBF00    NOP
0x0198	0xBF00    NOP
0x019A	0xBF00    NOP
0x019C	0xBF00    NOP
;P5_timers.c, 86 :: 		USART1_DR = CHAR_CR;
0x019E	0xF04F030D  MOV	R3, #13
0x01A2	0x4A0A    LDR	R2, [PC, #40]
0x01A4	0x6013    STR	R3, [R2, #0]
;P5_timers.c, 87 :: 		Delay_ms(10);
0x01A6	0xF24D47BF  MOVW	R7, #54463
0x01AA	0xF2C00701  MOVT	R7, #1
0x01AE	0xBF00    NOP
0x01B0	0xBF00    NOP
L_write_data_char16:
0x01B2	0x1E7F    SUBS	R7, R7, #1
0x01B4	0xD1FD    BNE	L_write_data_char16
0x01B6	0xBF00    NOP
0x01B8	0xBF00    NOP
0x01BA	0xBF00    NOP
;P5_timers.c, 88 :: 		USART1_DR = CHAR_LF;
0x01BC	0xF04F030A  MOV	R3, #10
0x01C0	0x4A02    LDR	R2, [PC, #8]
0x01C2	0x6013    STR	R3, [R2, #0]
;P5_timers.c, 89 :: 		}
L_write_data_char13:
;P5_timers.c, 90 :: 		}
L_end_write_data_char:
0x01C4	0xB001    ADD	SP, SP, #4
0x01C6	0x4770    BX	LR
0x01C8	0x38004001  	USART1_SR+0
0x01CC	0x38044001  	USART1_DR+0
; end of _write_data_char
_serial_to_int:
;P5_timers.c, 65 :: 		uint32_t serial_to_int(uint32_t *rx_buffer) {
; rx_buffer start address is: 0 (R0)
0x01D0	0xB081    SUB	SP, SP, #4
; rx_buffer end address is: 0 (R0)
; rx_buffer start address is: 0 (R0)
;P5_timers.c, 68 :: 		if ( (*rx_buffer >= ASCII_HEX_O) && (*rx_buffer <= 0x34) ) {
0x01D2	0x6801    LDR	R1, [R0, #0]
0x01D4	0x2930    CMP	R1, #48
0x01D6	0xD306    BCC	L__serial_to_int49
0x01D8	0x6801    LDR	R1, [R0, #0]
0x01DA	0x2934    CMP	R1, #52
0x01DC	0xD803    BHI	L__serial_to_int48
L__serial_to_int47:
;P5_timers.c, 69 :: 		return (*rx_buffer - ASCII_HEX_O);
0x01DE	0x6801    LDR	R1, [R0, #0]
; rx_buffer end address is: 0 (R0)
0x01E0	0x3930    SUBS	R1, #48
0x01E2	0x4608    MOV	R0, R1
0x01E4	0xE000    B	L_end_serial_to_int
;P5_timers.c, 68 :: 		if ( (*rx_buffer >= ASCII_HEX_O) && (*rx_buffer <= 0x34) ) {
L__serial_to_int49:
L__serial_to_int48:
;P5_timers.c, 74 :: 		}
0x01E6	0x2001    MOVS	R0, #1
L_end_serial_to_int:
0x01E8	0xB001    ADD	SP, SP, #4
0x01EA	0x4770    BX	LR
; end of _serial_to_int
__Lib_System_105_107_InitialSetUpRCCRCC2:
;__Lib_System_105_107.c, 391 :: 		
0x06A0	0xB081    SUB	SP, SP, #4
0x06A2	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_105_107.c, 395 :: 		
; ulRCC_CR start address is: 8 (R2)
0x06A6	0x4A4A    LDR	R2, [PC, #296]
;__Lib_System_105_107.c, 396 :: 		
; ulRCC_CFGR start address is: 12 (R3)
0x06A8	0x4B4A    LDR	R3, [PC, #296]
;__Lib_System_105_107.c, 397 :: 		
; ulRCC_CFGR2 start address is: 16 (R4)
0x06AA	0x4C4B    LDR	R4, [PC, #300]
;__Lib_System_105_107.c, 398 :: 		
; Fosc_kHz start address is: 20 (R5)
0x06AC	0x4D4B    LDR	R5, [PC, #300]
;__Lib_System_105_107.c, 407 :: 		
0x06AE	0xF00300F0  AND	R0, R3, #240
;__Lib_System_105_107.c, 408 :: 		
0x06B2	0x0901    LSRS	R1, R0, #4
;__Lib_System_105_107.c, 409 :: 		
0x06B4	0x484A    LDR	R0, [PC, #296]
0x06B6	0x1840    ADDS	R0, R0, R1
0x06B8	0x7800    LDRB	R0, [R0, #0]
; presc start address is: 0 (R0)
;__Lib_System_105_107.c, 411 :: 		
0x06BA	0xFA05F100  LSL	R1, R5, R0
; Fosc_kHz end address is: 20 (R5)
; presc end address is: 0 (R0)
; SYS_clk start address is: 20 (R5)
0x06BE	0x460D    MOV	R5, R1
;__Lib_System_105_107.c, 413 :: 		
0x06C0	0xF64B3080  MOVW	R0, #48000
0x06C4	0x4281    CMP	R1, R0
0x06C6	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC234
; SYS_clk end address is: 20 (R5)
;__Lib_System_105_107.c, 414 :: 		
0x06C8	0x4846    LDR	R0, [PC, #280]
0x06CA	0x6800    LDR	R0, [R0, #0]
0x06CC	0xF0400102  ORR	R1, R0, #2
0x06D0	0x4844    LDR	R0, [PC, #272]
0x06D2	0x6001    STR	R1, [R0, #0]
0x06D4	0xE011    B	L___Lib_System_105_107_InitialSetUpRCCRCC235
L___Lib_System_105_107_InitialSetUpRCCRCC234:
;__Lib_System_105_107.c, 415 :: 		
; SYS_clk start address is: 20 (R5)
0x06D6	0xF64550C0  MOVW	R0, #24000
0x06DA	0x4285    CMP	R5, R0
0x06DC	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC236
; SYS_clk end address is: 20 (R5)
;__Lib_System_105_107.c, 416 :: 		
0x06DE	0x4841    LDR	R0, [PC, #260]
0x06E0	0x6800    LDR	R0, [R0, #0]
0x06E2	0xF0400101  ORR	R1, R0, #1
0x06E6	0x483F    LDR	R0, [PC, #252]
0x06E8	0x6001    STR	R1, [R0, #0]
0x06EA	0xE006    B	L___Lib_System_105_107_InitialSetUpRCCRCC237
L___Lib_System_105_107_InitialSetUpRCCRCC236:
;__Lib_System_105_107.c, 418 :: 		
0x06EC	0x483D    LDR	R0, [PC, #244]
0x06EE	0x6801    LDR	R1, [R0, #0]
0x06F0	0xF06F0007  MVN	R0, #7
0x06F4	0x4001    ANDS	R1, R0
0x06F6	0x483B    LDR	R0, [PC, #236]
0x06F8	0x6001    STR	R1, [R0, #0]
L___Lib_System_105_107_InitialSetUpRCCRCC237:
L___Lib_System_105_107_InitialSetUpRCCRCC235:
;__Lib_System_105_107.c, 420 :: 		
0x06FA	0xF7FFFD77  BL	__Lib_System_105_107_SystemClockSetDefault+0
;__Lib_System_105_107.c, 422 :: 		
0x06FE	0x483A    LDR	R0, [PC, #232]
0x0700	0x6003    STR	R3, [R0, #0]
;__Lib_System_105_107.c, 423 :: 		
0x0702	0x483A    LDR	R0, [PC, #232]
0x0704	0x6004    STR	R4, [R0, #0]
; ulRCC_CFGR2 end address is: 16 (R4)
;__Lib_System_105_107.c, 424 :: 		
0x0706	0x483A    LDR	R0, [PC, #232]
0x0708	0xEA020100  AND	R1, R2, R0, LSL #0
0x070C	0x4839    LDR	R0, [PC, #228]
0x070E	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 426 :: 		
0x0710	0xF0020001  AND	R0, R2, #1
0x0714	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC255
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x0716	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 427 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC239:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x0718	0x4836    LDR	R0, [PC, #216]
0x071A	0x6800    LDR	R0, [R0, #0]
0x071C	0xF0000002  AND	R0, R0, #2
0x0720	0x2800    CMP	R0, #0
0x0722	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC240
;__Lib_System_105_107.c, 428 :: 		
0x0724	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC239
L___Lib_System_105_107_InitialSetUpRCCRCC240:
;__Lib_System_105_107.c, 429 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x0726	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC238
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC255:
;__Lib_System_105_107.c, 426 :: 		
0x0728	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 429 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC238:
;__Lib_System_105_107.c, 431 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x072A	0xF4023080  AND	R0, R2, #65536
0x072E	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC256
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
0x0730	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 432 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC242:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x0732	0x4830    LDR	R0, [PC, #192]
0x0734	0x6800    LDR	R0, [R0, #0]
0x0736	0xF4003000  AND	R0, R0, #131072
0x073A	0x2800    CMP	R0, #0
0x073C	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC243
;__Lib_System_105_107.c, 433 :: 		
0x073E	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC242
L___Lib_System_105_107_InitialSetUpRCCRCC243:
;__Lib_System_105_107.c, 434 :: 		
; ulRCC_CR end address is: 8 (R2)
0x0740	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC241
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC256:
;__Lib_System_105_107.c, 431 :: 		
0x0742	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 434 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC241:
;__Lib_System_105_107.c, 436 :: 		
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x0744	0xF0025080  AND	R0, R2, #268435456
0x0748	0xB168    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC257
;__Lib_System_105_107.c, 437 :: 		
0x074A	0x482A    LDR	R0, [PC, #168]
0x074C	0x6800    LDR	R0, [R0, #0]
0x074E	0xF0405180  ORR	R1, R0, #268435456
0x0752	0x4828    LDR	R0, [PC, #160]
0x0754	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
;__Lib_System_105_107.c, 438 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC245:
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x0756	0x4827    LDR	R0, [PC, #156]
0x0758	0x6800    LDR	R0, [R0, #0]
0x075A	0xF0005000  AND	R0, R0, #536870912
0x075E	0x2800    CMP	R0, #0
0x0760	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC246
;__Lib_System_105_107.c, 439 :: 		
0x0762	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC245
L___Lib_System_105_107_InitialSetUpRCCRCC246:
;__Lib_System_105_107.c, 440 :: 		
; ulRCC_CR end address is: 8 (R2)
0x0764	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC244
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC257:
;__Lib_System_105_107.c, 436 :: 		
;__Lib_System_105_107.c, 440 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC244:
;__Lib_System_105_107.c, 442 :: 		
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x0766	0xF0026080  AND	R0, R2, #67108864
0x076A	0xB178    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC258
;__Lib_System_105_107.c, 443 :: 		
0x076C	0x4821    LDR	R0, [PC, #132]
0x076E	0x6800    LDR	R0, [R0, #0]
0x0770	0xF0406180  ORR	R1, R0, #67108864
0x0774	0x481F    LDR	R0, [PC, #124]
0x0776	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x0778	0x4611    MOV	R1, R2
0x077A	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 444 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC248:
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x077C	0x481D    LDR	R0, [PC, #116]
0x077E	0x6800    LDR	R0, [R0, #0]
0x0780	0xF0006000  AND	R0, R0, #134217728
0x0784	0x2800    CMP	R0, #0
0x0786	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC249
;__Lib_System_105_107.c, 445 :: 		
0x0788	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC248
L___Lib_System_105_107_InitialSetUpRCCRCC249:
;__Lib_System_105_107.c, 446 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x078A	0xE001    B	L___Lib_System_105_107_InitialSetUpRCCRCC247
; ulRCC_CR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC258:
;__Lib_System_105_107.c, 442 :: 		
0x078C	0x4611    MOV	R1, R2
0x078E	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 446 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC247:
;__Lib_System_105_107.c, 448 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x0790	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x0794	0xB170    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC259
;__Lib_System_105_107.c, 449 :: 		
0x0796	0x4817    LDR	R0, [PC, #92]
0x0798	0x6800    LDR	R0, [R0, #0]
0x079A	0xF0407180  ORR	R1, R0, #16777216
0x079E	0x4815    LDR	R0, [PC, #84]
0x07A0	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x07A2	0x4611    MOV	R1, R2
;__Lib_System_105_107.c, 450 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC251:
; ulRCC_CFGR start address is: 4 (R1)
0x07A4	0x4813    LDR	R0, [PC, #76]
0x07A6	0x6800    LDR	R0, [R0, #0]
0x07A8	0xF0007000  AND	R0, R0, #33554432
0x07AC	0xB900    CBNZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC252
;__Lib_System_105_107.c, 451 :: 		
0x07AE	0xE7F9    B	L___Lib_System_105_107_InitialSetUpRCCRCC251
L___Lib_System_105_107_InitialSetUpRCCRCC252:
;__Lib_System_105_107.c, 452 :: 		
0x07B0	0x460A    MOV	R2, R1
0x07B2	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC250
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC259:
;__Lib_System_105_107.c, 448 :: 		
;__Lib_System_105_107.c, 452 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC250:
;__Lib_System_105_107.c, 456 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC253:
; ulRCC_CFGR start address is: 8 (R2)
0x07B4	0x480C    LDR	R0, [PC, #48]
0x07B6	0x6800    LDR	R0, [R0, #0]
0x07B8	0xF000010C  AND	R1, R0, #12
0x07BC	0x0090    LSLS	R0, R2, #2
0x07BE	0xF000000C  AND	R0, R0, #12
0x07C2	0x4281    CMP	R1, R0
0x07C4	0xD000    BEQ	L___Lib_System_105_107_InitialSetUpRCCRCC254
;__Lib_System_105_107.c, 457 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x07C6	0xE7F5    B	L___Lib_System_105_107_InitialSetUpRCCRCC253
L___Lib_System_105_107_InitialSetUpRCCRCC254:
;__Lib_System_105_107.c, 458 :: 		
L_end_InitialSetUpRCCRCC2:
0x07C8	0xF8DDE000  LDR	LR, [SP, #0]
0x07CC	0xB001    ADD	SP, SP, #4
0x07CE	0x4770    BX	LR
0x07D0	0x00811501  	#352387201
0x07D4	0x8402091D  	#152929282
0x07D8	0xF6440001  	#128580
0x07DC	0x19400001  	#72000
0x07E0	0x085A0000  	__Lib_System_105_107_APBAHBPrescTable+0
0x07E4	0x20004002  	FLASH_ACR+0
0x07E8	0x10044002  	RCC_CFGR+0
0x07EC	0x102C4002  	RCC_CFGR2+0
0x07F0	0xFFFF000F  	#1048575
0x07F4	0x10004002  	RCC_CR+0
; end of __Lib_System_105_107_InitialSetUpRCCRCC2
__Lib_System_105_107_SystemClockSetDefault:
;__Lib_System_105_107.c, 360 :: 		
0x01EC	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 363 :: 		
0x01EE	0x4815    LDR	R0, [PC, #84]
0x01F0	0x6800    LDR	R0, [R0, #0]
0x01F2	0xF0400101  ORR	R1, R0, #1
0x01F6	0x4813    LDR	R0, [PC, #76]
0x01F8	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 366 :: 		
0x01FA	0x4913    LDR	R1, [PC, #76]
0x01FC	0x4813    LDR	R0, [PC, #76]
0x01FE	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 369 :: 		
0x0200	0x4810    LDR	R0, [PC, #64]
0x0202	0x6801    LDR	R1, [R0, #0]
0x0204	0x4812    LDR	R0, [PC, #72]
0x0206	0x4001    ANDS	R1, R0
0x0208	0x480E    LDR	R0, [PC, #56]
0x020A	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 372 :: 		
0x020C	0x480D    LDR	R0, [PC, #52]
0x020E	0x6801    LDR	R1, [R0, #0]
0x0210	0xF46F2080  MVN	R0, #262144
0x0214	0x4001    ANDS	R1, R0
0x0216	0x480B    LDR	R0, [PC, #44]
0x0218	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 375 :: 		
0x021A	0x480C    LDR	R0, [PC, #48]
0x021C	0x6801    LDR	R1, [R0, #0]
0x021E	0xF46F00FE  MVN	R0, #8323072
0x0222	0x4001    ANDS	R1, R0
0x0224	0x4809    LDR	R0, [PC, #36]
0x0226	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 378 :: 		
0x0228	0x4806    LDR	R0, [PC, #24]
0x022A	0x6801    LDR	R1, [R0, #0]
0x022C	0xF06F50A0  MVN	R0, #335544320
0x0230	0x4001    ANDS	R1, R0
0x0232	0x4804    LDR	R0, [PC, #16]
0x0234	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 381 :: 		
0x0236	0xF04F0100  MOV	R1, #0
0x023A	0x4806    LDR	R0, [PC, #24]
0x023C	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 385 :: 		
L_end_SystemClockSetDefault:
0x023E	0xB001    ADD	SP, SP, #4
0x0240	0x4770    BX	LR
0x0242	0xBF00    NOP
0x0244	0x10004002  	RCC_CR+0
0x0248	0x0000F0FF  	#-251723776
0x024C	0x10044002  	RCC_CFGR+0
0x0250	0xFFFFFEF6  	#-17367041
0x0254	0x102C4002  	RCC_CFGR2+0
; end of __Lib_System_105_107_SystemClockSetDefault
__Lib_System_105_107_InitialSetUpFosc:
;__Lib_System_105_107.c, 460 :: 		
0x033C	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 461 :: 		
0x033E	0x4902    LDR	R1, [PC, #8]
0x0340	0x4802    LDR	R0, [PC, #8]
0x0342	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 462 :: 		
L_end_InitialSetUpFosc:
0x0344	0xB001    ADD	SP, SP, #4
0x0346	0x4770    BX	LR
0x0348	0x19400001  	#72000
0x034C	0x00002000  	___System_CLOCK_IN_KHZ+0
; end of __Lib_System_105_107_InitialSetUpFosc
___GenExcept:
;__Lib_System_105_107.c, 311 :: 		
0x0334	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 312 :: 		
L___GenExcept30:
0x0336	0xE7FE    B	L___GenExcept30
;__Lib_System_105_107.c, 313 :: 		
L_end___GenExcept:
0x0338	0xB001    ADD	SP, SP, #4
0x033A	0x4770    BX	LR
; end of ___GenExcept
0x086C	0xB500    PUSH	(R14)
0x086E	0xF8DFB010  LDR	R11, [PC, #16]
0x0872	0xF8DFA010  LDR	R10, [PC, #16]
0x0876	0xF7FFFD3F  BL	760
0x087A	0xBD00    POP	(R15)
0x087C	0x4770    BX	LR
0x087E	0xBF00    NOP
0x0880	0x00002000  	#536870912
0x0884	0x00042000  	#536870916
;P5_timers.c,0 :: ?ICSmain_wait_flag_L0 [1]
0x07F8	0x00 ;?ICSmain_wait_flag_L0+0
; end of ?ICSmain_wait_flag_L0
;P5_timers.c,0 :: ?ICSmain_tim1_multiplier_L0 [4]
0x07FC	0x00000001 ;?ICSmain_tim1_multiplier_L0+0
; end of ?ICSmain_tim1_multiplier_L0
;P5_timers.c,0 :: ?ICSmain_tim2_multiplier_L0 [4]
0x0800	0x00000001 ;?ICSmain_tim2_multiplier_L0+0
; end of ?ICSmain_tim2_multiplier_L0
;,0 :: _initBlock_3 [86]
; Containing: ?ICSmain_tim1_prompt_L0 [43]
;             ?ICSmain_tim2_prompt_L0 [43]
0x0804	0x61656C50 ;_initBlock_3+0 : ?ICSmain_tim1_prompt_L0 at 0x0804
0x0808	0x65206573 ;_initBlock_3+4
0x080C	0x7265746E ;_initBlock_3+8
0x0810	0x6C656420 ;_initBlock_3+12
0x0814	0x74207961 ;_initBlock_3+16
0x0818	0x20656D69 ;_initBlock_3+20
0x081C	0x342D3128 ;_initBlock_3+24
0x0820	0x6F662029 ;_initBlock_3+28
0x0824	0x49542072 ;_initBlock_3+32
0x0828	0x3152454D ;_initBlock_3+36
0x082C	0x5000203A ;_initBlock_3+40 : ?ICSmain_tim2_prompt_L0 at 0x082F
0x0830	0x7361656C ;_initBlock_3+44
0x0834	0x6E652065 ;_initBlock_3+48
0x0838	0x20726574 ;_initBlock_3+52
0x083C	0x616C6564 ;_initBlock_3+56
0x0840	0x69742079 ;_initBlock_3+60
0x0844	0x2820656D ;_initBlock_3+64
0x0848	0x29342D31 ;_initBlock_3+68
0x084C	0x726F6620 ;_initBlock_3+72
0x0850	0x4D495420 ;_initBlock_3+76
0x0854	0x3A325245 ;_initBlock_3+80
0x0858	0x0020 ;_initBlock_3+84
; end of _initBlock_3
;__Lib_System_105_107.c,388 :: __Lib_System_105_107_APBAHBPrescTable [16]
0x085A	0x00000000 ;__Lib_System_105_107_APBAHBPrescTable+0
0x085E	0x04030201 ;__Lib_System_105_107_APBAHBPrescTable+4
0x0862	0x04030201 ;__Lib_System_105_107_APBAHBPrescTable+8
0x0866	0x09080706 ;__Lib_System_105_107_APBAHBPrescTable+12
; end of __Lib_System_105_107_APBAHBPrescTable
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0150     [128]    _write_data_char
0x01D0      [28]    _serial_to_int
0x01EC     [108]    __Lib_System_105_107_SystemClockSetDefault
0x0258     [140]    _print_string
0x02E4      [20]    ___CC2DW
0x02F8      [58]    ___FillZeros
0x0334       [8]    ___GenExcept
0x033C      [20]    __Lib_System_105_107_InitialSetUpFosc
0x0350     [848]    _main
0x06A0     [344]    __Lib_System_105_107_InitialSetUpRCCRCC2
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x20000000       [4]    ___System_CLOCK_IN_KHZ
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x07F8       [1]    ?ICSmain_wait_flag_L0
0x07FC       [4]    ?ICSmain_tim1_multiplier_L0
0x0800       [4]    ?ICSmain_tim2_multiplier_L0
0x0804      [43]    ?ICSmain_tim1_prompt_L0
0x082F      [43]    ?ICSmain_tim2_prompt_L0
0x085A      [16]    __Lib_System_105_107_APBAHBPrescTable
