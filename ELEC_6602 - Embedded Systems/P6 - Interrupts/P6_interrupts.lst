;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 4/27/2022 12:57:02 AM
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0xFFFC2000  	536936444
0x0004	0x03510000  	849
0x0008	0x07550000  	1877
0x000C	0x07550000  	1877
0x0010	0x07550000  	1877
0x0014	0x07550000  	1877
0x0018	0x07550000  	1877
0x001C	0x07550000  	1877
0x0020	0x07550000  	1877
0x0024	0x07550000  	1877
0x0028	0x07550000  	1877
0x002C	0x07550000  	1877
0x0030	0x07550000  	1877
0x0034	0x07550000  	1877
0x0038	0x07550000  	1877
0x003C	0x07550000  	1877
0x0040	0x07550000  	1877
0x0044	0x07550000  	1877
0x0048	0x07550000  	1877
0x004C	0x07550000  	1877
0x0050	0x07550000  	1877
0x0054	0x07550000  	1877
0x0058	0x07550000  	1877
0x005C	0x07550000  	1877
0x0060	0x07550000  	1877
0x0064	0x07550000  	1877
0x0068	0x02E90000  	745
0x006C	0x07550000  	1877
0x0070	0x07550000  	1877
0x0074	0x07550000  	1877
0x0078	0x07550000  	1877
0x007C	0x07550000  	1877
0x0080	0x07550000  	1877
0x0084	0x07550000  	1877
0x0088	0x07550000  	1877
0x008C	0x07550000  	1877
0x0090	0x07550000  	1877
0x0094	0x07550000  	1877
0x0098	0x07550000  	1877
0x009C	0x03110000  	785
0x00A0	0x07550000  	1877
0x00A4	0x07550000  	1877
0x00A8	0x07550000  	1877
0x00AC	0x07550000  	1877
0x00B0	0x029D0000  	669
0x00B4	0x07550000  	1877
0x00B8	0x07550000  	1877
0x00BC	0x07550000  	1877
0x00C0	0x07550000  	1877
0x00C4	0x07550000  	1877
0x00C8	0x07550000  	1877
0x00CC	0x07550000  	1877
0x00D0	0x07550000  	1877
0x00D4	0x02410000  	577
0x00D8	0x07550000  	1877
0x00DC	0x07550000  	1877
0x00E0	0x07550000  	1877
0x00E4	0x07550000  	1877
0x00E8	0x07550000  	1877
0x00EC	0x07550000  	1877
0x00F0	0x07550000  	1877
0x00F4	0x07550000  	1877
0x00F8	0x07550000  	1877
0x00FC	0x07550000  	1877
0x0100	0x07550000  	1877
0x0104	0x07550000  	1877
0x0108	0x07550000  	1877
0x010C	0x07550000  	1877
0x0110	0x07550000  	1877
0x0114	0x07550000  	1877
0x0118	0x07550000  	1877
0x011C	0x07550000  	1877
0x0120	0x07550000  	1877
0x0124	0x07550000  	1877
0x0128	0x07550000  	1877
0x012C	0x07550000  	1877
0x0130	0x07550000  	1877
0x0134	0x07550000  	1877
0x0138	0x07550000  	1877
0x013C	0x07550000  	1877
0x0140	0x07550000  	1877
0x0144	0x07550000  	1877
0x0148	0x07550000  	1877
0x014C	0x07550000  	1877
; end of ____SysVT
_main:
;P6_interrupts.c, 114 :: 		void main() {
0x0350	0xB081    SUB	SP, SP, #4
0x0352	0xF000F953  BL	1532
0x0356	0xF000FA59  BL	2060
0x035A	0xF000F9FF  BL	1884
0x035E	0xF000FA15  BL	1932
;P6_interrupts.c, 116 :: 		uint32_t timer_counter = 0;
;P6_interrupts.c, 117 :: 		uint32_t *rx_buffer = 0;
;P6_interrupts.c, 120 :: 		initClock72MHz();
0x0362	0xF7FFFEF5  BL	_initClock72MHz+0
;P6_interrupts.c, 123 :: 		USART1_CR1 &= ~(1 << 13);                  // Diasable USART for configuration
0x0366	0x4889    LDR	R0, [PC, #548]
0x0368	0x6801    LDR	R1, [R0, #0]
0x036A	0xF46F5000  MVN	R0, #8192
0x036E	0x4001    ANDS	R1, R0
0x0370	0x4886    LDR	R0, [PC, #536]
0x0372	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 126 :: 		AFIO_MAPR    = 0x00000000;                 // Bit[2] USART1 Remap 0: No remap remap timer2 stuff
0x0374	0x2100    MOVS	R1, #0
0x0376	0x4886    LDR	R0, [PC, #536]
0x0378	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 130 :: 		RCC_APB2ENR |= 0x00000001;                 // Alt. function bit to enable USART1
0x037A	0x4886    LDR	R0, [PC, #536]
0x037C	0x6800    LDR	R0, [R0, #0]
0x037E	0xF0400101  ORR	R1, R0, #1
0x0382	0x4884    LDR	R0, [PC, #528]
0x0384	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 134 :: 		RCC_APB2ENR |= 1 << 2;                     // Enable GPIO Clock PORT A  Interrupt test
0x0386	0x4883    LDR	R0, [PC, #524]
0x0388	0x6800    LDR	R0, [R0, #0]
0x038A	0xF0400104  ORR	R1, R0, #4
0x038E	0x4881    LDR	R0, [PC, #516]
0x0390	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 135 :: 		RCC_APB2ENR |= 1 << 3;                     // Enable GPIO Clock PORT B
0x0392	0x4880    LDR	R0, [PC, #512]
0x0394	0x6800    LDR	R0, [R0, #0]
0x0396	0xF0400108  ORR	R1, R0, #8
0x039A	0x487E    LDR	R0, [PC, #504]
0x039C	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 136 :: 		RCC_APB2ENR |= 1 << 5;                     // Enable GPIO Clock PORT D
0x039E	0x487D    LDR	R0, [PC, #500]
0x03A0	0x6800    LDR	R0, [R0, #0]
0x03A2	0xF0400120  ORR	R1, R0, #32
0x03A6	0x487B    LDR	R0, [PC, #492]
0x03A8	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 137 :: 		RCC_APB2ENR |= 1 << 6;                     // Enable GPIO Clock PORT E
0x03AA	0x487A    LDR	R0, [PC, #488]
0x03AC	0x6800    LDR	R0, [R0, #0]
0x03AE	0xF0400140  ORR	R1, R0, #64
0x03B2	0x4878    LDR	R0, [PC, #480]
0x03B4	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 138 :: 		RCC_APB2ENR |= 1 << 14;                    // Enable USART1 Clock for USART and
0x03B6	0x4877    LDR	R0, [PC, #476]
0x03B8	0x6800    LDR	R0, [R0, #0]
0x03BA	0xF4404180  ORR	R1, R0, #16384
0x03BE	0x4875    LDR	R0, [PC, #468]
0x03C0	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 142 :: 		GPIOA_CRH &= ~(0xFF << 4);                 // Shift 4 bits left to clear out bits PA9/PA10 mask with FFFF F00F
0x03C2	0x4875    LDR	R0, [PC, #468]
0x03C4	0x6801    LDR	R1, [R0, #0]
0x03C6	0xF24F000F  MOVW	R0, #61455
0x03CA	0x4001    ANDS	R1, R0
0x03CC	0x4872    LDR	R0, [PC, #456]
0x03CE	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 143 :: 		GPIOA_CRH |=  (0x0B << 4);                 // USART1 Tx/PA9 set CNF=AF output push-pull b10; MODE: 50Hz b11; = b1011 = 0x0b
0x03D0	0x4871    LDR	R0, [PC, #452]
0x03D2	0x6800    LDR	R0, [R0, #0]
0x03D4	0xF04001B0  ORR	R1, R0, #176
0x03D8	0x486F    LDR	R0, [PC, #444]
0x03DA	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 144 :: 		GPIOA_CRH |=  (0x04 << 8);                // USART1 Rx/PA10 set CNF=input-floating b01; MODE: input b00; = b0100 = 0x04
0x03DC	0x486E    LDR	R0, [PC, #440]
0x03DE	0x6800    LDR	R0, [R0, #0]
0x03E0	0xF4406180  ORR	R1, R0, #1024
0x03E4	0x486C    LDR	R0, [PC, #432]
0x03E6	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 149 :: 		GPIOA_CRL |=  0x44444444 << 16;                   // PA1 input CNF=input-floating b01; MODE: input b00 = 0x0100;
0x03E8	0x486C    LDR	R0, [PC, #432]
0x03EA	0x6801    LDR	R1, [R0, #0]
0x03EC	0x486C    LDR	R0, [PC, #432]
0x03EE	0x4301    ORRS	R1, R0
0x03F0	0x486A    LDR	R0, [PC, #424]
0x03F2	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 150 :: 		GPIOB_CRL |= (uint32_t) (0x04 << 24);      // PB6 input CNF=input-floating b01; MODE: input b00 = 0x0100;
0x03F4	0x486B    LDR	R0, [PC, #428]
0x03F6	0x6801    LDR	R1, [R0, #0]
0x03F8	0x486A    LDR	R0, [PC, #424]
0x03FA	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 152 :: 		GPIOD_CRL = 0x33333333;                    // PD0:7   CNF=GP output push-pull; b00; MODE: 50MHz b11 = 0x0011;
0x03FC	0xF04F3133  MOV	R1, #858993459
0x0400	0x4869    LDR	R0, [PC, #420]
0x0402	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 153 :: 		GPIOD_CRH = 0x33333333;                    // PD8:15  CNF=GP output push-pull; b00; MODE: 50MHz b11 = 0x0011;
0x0404	0xF04F3133  MOV	R1, #858993459
0x0408	0x4868    LDR	R0, [PC, #416]
0x040A	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 154 :: 		GPIOE_CRH = 0x33333333;                    // PE8:15  CNF=GP output push-pull; b00; MODE: 50MHz b11 = 0x0011;
0x040C	0xF04F3133  MOV	R1, #858993459
0x0410	0x4867    LDR	R0, [PC, #412]
0x0412	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 156 :: 		GPIOA_ODR=0xFFFF;
0x0414	0xF64F71FF  MOVW	R1, #65535
0x0418	0x4866    LDR	R0, [PC, #408]
0x041A	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 159 :: 		USART1_BRR = 0x00000506;                   // Clock=72MHz, oversample=16; 72MHz / (16*56,000) = 80.357
0x041C	0xF2405106  MOVW	R1, #1286
0x0420	0x4865    LDR	R0, [PC, #404]
0x0422	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 163 :: 		USART1_CR1 &= ~(1 << 13);                  // Disable USART for configuration
0x0424	0x4859    LDR	R0, [PC, #356]
0x0426	0x6801    LDR	R1, [R0, #0]
0x0428	0xF46F5000  MVN	R0, #8192
0x042C	0x4001    ANDS	R1, R0
0x042E	0x4857    LDR	R0, [PC, #348]
0x0430	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 164 :: 		USART1_CR1 |= 1 << 5;                      // ENABLE USART1 TXNE interrupt
0x0432	0x4856    LDR	R0, [PC, #344]
0x0434	0x6800    LDR	R0, [R0, #0]
0x0436	0xF0400120  ORR	R1, R0, #32
0x043A	0x4854    LDR	R0, [PC, #336]
0x043C	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 165 :: 		USART1_CR1 &= ~(1 << 12);                  // Force 8 data bits. Mbit set to 0
0x043E	0x4853    LDR	R0, [PC, #332]
0x0440	0x6801    LDR	R1, [R0, #0]
0x0442	0xF46F5080  MVN	R0, #4096
0x0446	0x4001    ANDS	R1, R0
0x0448	0x4850    LDR	R0, [PC, #320]
0x044A	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 166 :: 		USART1_CR1 &= ~(3 << 9);                   // Force no Parity & no parity control
0x044C	0x484F    LDR	R0, [PC, #316]
0x044E	0x6801    LDR	R1, [R0, #0]
0x0450	0xF46F60C0  MVN	R0, #1536
0x0454	0x4001    ANDS	R1, R0
0x0456	0x484D    LDR	R0, [PC, #308]
0x0458	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 167 :: 		USART1_CR2 &= ~(3 << 12);                  // Force 1 stop bit
0x045A	0x4858    LDR	R0, [PC, #352]
0x045C	0x6801    LDR	R1, [R0, #0]
0x045E	0xF46F5040  MVN	R0, #12288
0x0462	0x4001    ANDS	R1, R0
0x0464	0x4855    LDR	R0, [PC, #340]
0x0466	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 168 :: 		USART1_CR3 &= ~(3 << 8);                   // Force no flow control and no DMA for USART1
0x0468	0x4855    LDR	R0, [PC, #340]
0x046A	0x6801    LDR	R1, [R0, #0]
0x046C	0xF46F7040  MVN	R0, #768
0x0470	0x4001    ANDS	R1, R0
0x0472	0x4853    LDR	R0, [PC, #332]
0x0474	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 169 :: 		USART1_CR1 |=  3 << 2;                     // Rx, Tx Enable
0x0476	0x4845    LDR	R0, [PC, #276]
0x0478	0x6800    LDR	R0, [R0, #0]
0x047A	0xF040010C  ORR	R1, R0, #12
0x047E	0x4843    LDR	R0, [PC, #268]
0x0480	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 171 :: 		Delay_ms(100);                             // Allow time for USART1 to complete initialization
0x0482	0xF644777F  MOVW	R7, #20351
0x0486	0xF2C00712  MOVT	R7, #18
L_main11:
0x048A	0x1E7F    SUBS	R7, R7, #1
0x048C	0xD1FD    BNE	L_main11
0x048E	0xBF00    NOP
0x0490	0xBF00    NOP
0x0492	0xBF00    NOP
0x0494	0xBF00    NOP
0x0496	0xBF00    NOP
;P6_interrupts.c, 172 :: 		USART1_CR1 |= 1 << 13;                     // **NOTE: USART1 Enable must be done after configuration is complete.
0x0498	0x483C    LDR	R0, [PC, #240]
0x049A	0x6800    LDR	R0, [R0, #0]
0x049C	0xF4405100  ORR	R1, R0, #8192
0x04A0	0x483A    LDR	R0, [PC, #232]
0x04A2	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 175 :: 		RCC_APB1ENR |= 1 << 0;                     // Enable TIMER2 Clock;
0x04A4	0x4847    LDR	R0, [PC, #284]
0x04A6	0x6800    LDR	R0, [R0, #0]
0x04A8	0xF0400101  ORR	R1, R0, #1
0x04AC	0x4845    LDR	R0, [PC, #276]
0x04AE	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 179 :: 		TIM2_CR1 = 0x0000;                         // Disable the timer for config/setup.s
0x04B0	0x2100    MOVS	R1, #0
0x04B2	0x4845    LDR	R0, [PC, #276]
0x04B4	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 181 :: 		TIM2_PSC = 7999;                           // Counter clock freq is equal to clk_PSC / (PSC[15:0] + 1)
0x04B6	0xF641713F  MOVW	R1, #7999
0x04BA	0x4844    LDR	R0, [PC, #272]
0x04BC	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 184 :: 		TIM2_ARR = 9000;                           // Set the auto-reload register to the value calculated above
0x04BE	0xF2423128  MOVW	R1, #9000
0x04C2	0x4843    LDR	R0, [PC, #268]
0x04C4	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 186 :: 		TIM2_DIER |= 1 << 0;                       // Allow timer Update interrupt enable
0x04C6	0x4843    LDR	R0, [PC, #268]
0x04C8	0x6800    LDR	R0, [R0, #0]
0x04CA	0xF0400101  ORR	R1, R0, #1
0x04CE	0x4841    LDR	R0, [PC, #260]
0x04D0	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 188 :: 		TIM2_CR1 = 0x0001;                         // After timer setup, enable TIMER2; bit4=0 counting up.
0x04D2	0x2101    MOVS	R1, #1
0x04D4	0x483C    LDR	R0, [PC, #240]
0x04D6	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 193 :: 		AFIO_EXTICR2 |= 0x00000000;                // PA4 as External interrupt; Pin4/EXTI4[3:0] PortA=b0000
0x04D8	0x483F    LDR	R0, [PC, #252]
0x04DA	0x6801    LDR	R1, [R0, #0]
0x04DC	0x483E    LDR	R0, [PC, #248]
0x04DE	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 194 :: 		AFIO_EXTICR2 |= 0x00000100;                // PB6 as Enternal interrupt; Pin6/EXTI6[3:0] PortB=b0001
0x04E0	0x483D    LDR	R0, [PC, #244]
0x04E2	0x6800    LDR	R0, [R0, #0]
0x04E4	0xF4407180  ORR	R1, R0, #256
0x04E8	0x483B    LDR	R0, [PC, #236]
0x04EA	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 196 :: 		EXTI_RTSR    |= 1 << 4;                    // Set Edge trigger register for interrupt on rising edge for PA4 and PB6
0x04EC	0x483B    LDR	R0, [PC, #236]
0x04EE	0x6800    LDR	R0, [R0, #0]
0x04F0	0xF0400110  ORR	R1, R0, #16
0x04F4	0x4839    LDR	R0, [PC, #228]
0x04F6	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 197 :: 		EXTI_RTSR    |= 1 << 6;                    // Mask to enable TR6 and TR4 (EXTI6 and EXTI4) b1=rising trigger enabled
0x04F8	0x4838    LDR	R0, [PC, #224]
0x04FA	0x6800    LDR	R0, [R0, #0]
0x04FC	0xF0400140  ORR	R1, R0, #64
0x0500	0x4836    LDR	R0, [PC, #216]
0x0502	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 198 :: 		EXTI_IMR     |= 0x00000050;                // Set interrupt request from TR6 and TR4 to not masked (cpu CANNOT ignore it)
0x0504	0x4836    LDR	R0, [PC, #216]
0x0506	0x6800    LDR	R0, [R0, #0]
0x0508	0xF0400150  ORR	R1, R0, #80
0x050C	0x4834    LDR	R0, [PC, #208]
0x050E	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 201 :: 		NVIC_ISER1   |= 1 << 5;                    // ISER1 interrupts vector #63-32; 32+5 =37
0x0510	0x4834    LDR	R0, [PC, #208]
0x0512	0x6800    LDR	R0, [R0, #0]
0x0514	0xF0400120  ORR	R1, R0, #32
0x0518	0x4832    LDR	R0, [PC, #200]
0x051A	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 215 :: 		NVIC_ISER0 |= 1 << 10;                    // Enable NVIC interrupt set enable registers for EXTI1 line zero (PA1)
0x051C	0x4832    LDR	R0, [PC, #200]
0x051E	0x6800    LDR	R0, [R0, #0]
0x0520	0xF4406180  ORR	R1, R0, #1024
0x0524	0x4830    LDR	R0, [PC, #192]
0x0526	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 216 :: 		NVIC_ISER0 |= (long int) 1 << 23;         // Enable NVIC interrupt set enable registers for EXTI6 PB6
0x0528	0x482F    LDR	R0, [PC, #188]
0x052A	0x6800    LDR	R0, [R0, #0]
0x052C	0xF4400100  ORR	R1, R0, #8388608
0x0530	0x482D    LDR	R0, [PC, #180]
0x0532	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 218 :: 		NVIC_ISER0 |= (uint32_t) 1 << 28;         // Enable NVIC interrupt enable for TIM2 global interrupt vector mapping 28
0x0534	0x482C    LDR	R0, [PC, #176]
0x0536	0x6800    LDR	R0, [R0, #0]
0x0538	0xF0405180  ORR	R1, R0, #268435456
0x053C	0x482A    LDR	R0, [PC, #168]
0x053E	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 237 :: 		GPIOD_ODR = 0xFFFF;
0x0540	0xF64F71FF  MOVW	R1, #65535
0x0544	0x4829    LDR	R0, [PC, #164]
0x0546	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 238 :: 		GPIOE_ODR = 0x00 << 8;                     // PORT E only has a High bank
0x0548	0xF2400100  MOVW	R1, #0
0x054C	0x4828    LDR	R0, [PC, #160]
0x054E	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 242 :: 		for (;;) {
L_main13:
;P6_interrupts.c, 243 :: 		while( ( USART1_SR & (1 << 5)) == 0 ) {}        // Check RXNE not empty
L_main16:
0x0550	0x4828    LDR	R0, [PC, #160]
0x0552	0x6800    LDR	R0, [R0, #0]
0x0554	0xF0000020  AND	R0, R0, #32
0x0558	0xB900    CBNZ	R0, L_main17
0x055A	0xE7F9    B	L_main16
L_main17:
;P6_interrupts.c, 245 :: 		rx_buffer = USART1_DR;
0x055C	0x4826    LDR	R0, [PC, #152]
; rx_buffer start address is: 4 (R1)
0x055E	0x6801    LDR	R1, [R0, #0]
; rx_buffer end address is: 4 (R1)
;P6_interrupts.c, 247 :: 		while ( (USART1_SR & (1 << 7 )) == 0) {}
L_main18:
; rx_buffer start address is: 4 (R1)
0x0560	0x4824    LDR	R0, [PC, #144]
0x0562	0x6800    LDR	R0, [R0, #0]
0x0564	0xF0000080  AND	R0, R0, #128
0x0568	0xB900    CBNZ	R0, L_main19
0x056A	0xE7F9    B	L_main18
L_main19:
;P6_interrupts.c, 248 :: 		Delay_ms(10);
0x056C	0xF24D47BF  MOVW	R7, #54463
0x0570	0xF2C00701  MOVT	R7, #1
0x0574	0xBF00    NOP
0x0576	0xBF00    NOP
L_main20:
0x0578	0x1E7F    SUBS	R7, R7, #1
0x057A	0xD1FD    BNE	L_main20
0x057C	0xBF00    NOP
0x057E	0xBF00    NOP
0x0580	0xBF00    NOP
;P6_interrupts.c, 249 :: 		USART1_DR = rx_buffer;
0x0582	0x481D    LDR	R0, [PC, #116]
0x0584	0x6001    STR	R1, [R0, #0]
; rx_buffer end address is: 4 (R1)
;P6_interrupts.c, 251 :: 		}
0x0586	0xE7E3    B	L_main13
;P6_interrupts.c, 252 :: 		}
L_end_main:
L__main_end_loop:
0x0588	0xE7FE    B	L__main_end_loop
0x058A	0xE037    B	#110
0x058C	0x380C4001  	USART1_CR1+0
0x0590	0x00044001  	AFIO_MAPR+0
0x0594	0x10184002  	RCC_APB2ENR+0
0x0598	0x08044001  	GPIOA_CRH+0
0x059C	0x08004001  	GPIOA_CRL+0
0x05A0	0x00004444  	#1145307136
0x05A4	0x0C004001  	GPIOB_CRL+0
0x05A8	0x14004001  	GPIOD_CRL+0
0x05AC	0x14044001  	GPIOD_CRH+0
0x05B0	0x18044001  	GPIOE_CRH+0
0x05B4	0x080C4001  	GPIOA_ODR+0
0x05B8	0x38084001  	USART1_BRR+0
0x05BC	0x38104001  	USART1_CR2+0
0x05C0	0x38144001  	USART1_CR3+0
0x05C4	0x101C4002  	RCC_APB1ENR+0
0x05C8	0x00004000  	TIM2_CR1+0
0x05CC	0x00284000  	TIM2_PSC+0
0x05D0	0x002C4000  	TIM2_ARR+0
0x05D4	0x000C4000  	TIM2_DIER+0
0x05D8	0x000C4001  	AFIO_EXTICR2+0
0x05DC	0x04084001  	EXTI_RTSR+0
0x05E0	0x04004001  	EXTI_IMR+0
0x05E4	0xE104E000  	NVIC_ISER1+0
0x05E8	0xE100E000  	NVIC_ISER0+0
0x05EC	0x140C4001  	GPIOD_ODR+0
0x05F0	0x180C4001  	GPIOE_ODR+0
0x05F4	0x38004001  	USART1_SR+0
0x05F8	0x38044001  	USART1_DR+0
; end of _main
___CC2DW:
;__Lib_System_105_107.c, 28 :: 		
0x0228	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 30 :: 		
L_loopDW:
;__Lib_System_105_107.c, 31 :: 		
0x022A	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_105_107.c, 32 :: 		
0x022E	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_105_107.c, 33 :: 		
0x0232	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 34 :: 		
0x0236	0xD1F8    BNE	L_loopDW
;__Lib_System_105_107.c, 36 :: 		
L_end___CC2DW:
0x0238	0xB001    ADD	SP, SP, #4
0x023A	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_105_107.c, 70 :: 		
0x01EC	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 72 :: 		
0x01EE	0xF04F0900  MOV	R9, #0
;__Lib_System_105_107.c, 73 :: 		
0x01F2	0xF04F0C00  MOV	R12, #0
;__Lib_System_105_107.c, 74 :: 		
0x01F6	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_105_107.c, 75 :: 		
0x01FA	0xDC04    BGT	L_loopFZs
;__Lib_System_105_107.c, 76 :: 		
0x01FC	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_105_107.c, 77 :: 		
0x0200	0xDB01    BLT	L_loopFZs
;__Lib_System_105_107.c, 78 :: 		
0x0202	0x46D4    MOV	R12, R10
;__Lib_System_105_107.c, 79 :: 		
0x0204	0x46EA    MOV	R10, SP
;__Lib_System_105_107.c, 80 :: 		
L_loopFZs:
;__Lib_System_105_107.c, 81 :: 		
0x0206	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_105_107.c, 82 :: 		
0x020A	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 83 :: 		
0x020E	0xD1FA    BNE	L_loopFZs
;__Lib_System_105_107.c, 84 :: 		
0x0210	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_105_107.c, 85 :: 		
0x0214	0xDD05    BLE	L_norep
;__Lib_System_105_107.c, 86 :: 		
0x0216	0x46E2    MOV	R10, R12
;__Lib_System_105_107.c, 87 :: 		
0x0218	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_105_107.c, 88 :: 		
0x021C	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_105_107.c, 89 :: 		
0x0220	0xE7F1    B	L_loopFZs
;__Lib_System_105_107.c, 90 :: 		
L_norep:
;__Lib_System_105_107.c, 92 :: 		
L_end___FillZeros:
0x0222	0xB001    ADD	SP, SP, #4
0x0224	0x4770    BX	LR
; end of ___FillZeros
_initClock72MHz:
;P6_interrupts.c, 93 :: 		void initClock72MHz() {
0x0150	0xB081    SUB	SP, SP, #4
;P6_interrupts.c, 97 :: 		RCC_CR = 0x05010081;
0x0152	0x4905    LDR	R1, [PC, #20]
0x0154	0x4805    LDR	R0, [PC, #20]
0x0156	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 104 :: 		RCC_CFGR = 0x091D8402; // IDE Scheme
0x0158	0x4905    LDR	R1, [PC, #20]
0x015A	0x4806    LDR	R0, [PC, #24]
0x015C	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 111 :: 		RCC_CFGR2 = 0x00010644;
0x015E	0x4906    LDR	R1, [PC, #24]
0x0160	0x4806    LDR	R0, [PC, #24]
0x0162	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 112 :: 		}
L_end_initClock72MHz:
0x0164	0xB001    ADD	SP, SP, #4
0x0166	0x4770    BX	LR
0x0168	0x00810501  	#83951745
0x016C	0x10004002  	RCC_CR+0
0x0170	0x8402091D  	#152929282
0x0174	0x10044002  	RCC_CFGR+0
0x0178	0x06440001  	#67140
0x017C	0x102C4002  	RCC_CFGR2+0
; end of _initClock72MHz
__Lib_System_105_107_InitialSetUpRCCRCC2:
;__Lib_System_105_107.c, 391 :: 		
0x05FC	0xB081    SUB	SP, SP, #4
0x05FE	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_105_107.c, 395 :: 		
; ulRCC_CR start address is: 8 (R2)
0x0602	0x4A4A    LDR	R2, [PC, #296]
;__Lib_System_105_107.c, 396 :: 		
; ulRCC_CFGR start address is: 12 (R3)
0x0604	0x4B4A    LDR	R3, [PC, #296]
;__Lib_System_105_107.c, 397 :: 		
; ulRCC_CFGR2 start address is: 16 (R4)
0x0606	0x4C4B    LDR	R4, [PC, #300]
;__Lib_System_105_107.c, 398 :: 		
; Fosc_kHz start address is: 20 (R5)
0x0608	0x4D4B    LDR	R5, [PC, #300]
;__Lib_System_105_107.c, 407 :: 		
0x060A	0xF00300F0  AND	R0, R3, #240
;__Lib_System_105_107.c, 408 :: 		
0x060E	0x0901    LSRS	R1, R0, #4
;__Lib_System_105_107.c, 409 :: 		
0x0610	0x484A    LDR	R0, [PC, #296]
0x0612	0x1840    ADDS	R0, R0, R1
0x0614	0x7800    LDRB	R0, [R0, #0]
; presc start address is: 0 (R0)
;__Lib_System_105_107.c, 411 :: 		
0x0616	0xFA05F100  LSL	R1, R5, R0
; Fosc_kHz end address is: 20 (R5)
; presc end address is: 0 (R0)
; SYS_clk start address is: 20 (R5)
0x061A	0x460D    MOV	R5, R1
;__Lib_System_105_107.c, 413 :: 		
0x061C	0xF64B3080  MOVW	R0, #48000
0x0620	0x4281    CMP	R1, R0
0x0622	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC234
; SYS_clk end address is: 20 (R5)
;__Lib_System_105_107.c, 414 :: 		
0x0624	0x4846    LDR	R0, [PC, #280]
0x0626	0x6800    LDR	R0, [R0, #0]
0x0628	0xF0400102  ORR	R1, R0, #2
0x062C	0x4844    LDR	R0, [PC, #272]
0x062E	0x6001    STR	R1, [R0, #0]
0x0630	0xE011    B	L___Lib_System_105_107_InitialSetUpRCCRCC235
L___Lib_System_105_107_InitialSetUpRCCRCC234:
;__Lib_System_105_107.c, 415 :: 		
; SYS_clk start address is: 20 (R5)
0x0632	0xF64550C0  MOVW	R0, #24000
0x0636	0x4285    CMP	R5, R0
0x0638	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC236
; SYS_clk end address is: 20 (R5)
;__Lib_System_105_107.c, 416 :: 		
0x063A	0x4841    LDR	R0, [PC, #260]
0x063C	0x6800    LDR	R0, [R0, #0]
0x063E	0xF0400101  ORR	R1, R0, #1
0x0642	0x483F    LDR	R0, [PC, #252]
0x0644	0x6001    STR	R1, [R0, #0]
0x0646	0xE006    B	L___Lib_System_105_107_InitialSetUpRCCRCC237
L___Lib_System_105_107_InitialSetUpRCCRCC236:
;__Lib_System_105_107.c, 418 :: 		
0x0648	0x483D    LDR	R0, [PC, #244]
0x064A	0x6801    LDR	R1, [R0, #0]
0x064C	0xF06F0007  MVN	R0, #7
0x0650	0x4001    ANDS	R1, R0
0x0652	0x483B    LDR	R0, [PC, #236]
0x0654	0x6001    STR	R1, [R0, #0]
L___Lib_System_105_107_InitialSetUpRCCRCC237:
L___Lib_System_105_107_InitialSetUpRCCRCC235:
;__Lib_System_105_107.c, 420 :: 		
0x0656	0xF7FFFD93  BL	__Lib_System_105_107_SystemClockSetDefault+0
;__Lib_System_105_107.c, 422 :: 		
0x065A	0x483A    LDR	R0, [PC, #232]
0x065C	0x6003    STR	R3, [R0, #0]
;__Lib_System_105_107.c, 423 :: 		
0x065E	0x483A    LDR	R0, [PC, #232]
0x0660	0x6004    STR	R4, [R0, #0]
; ulRCC_CFGR2 end address is: 16 (R4)
;__Lib_System_105_107.c, 424 :: 		
0x0662	0x483A    LDR	R0, [PC, #232]
0x0664	0xEA020100  AND	R1, R2, R0, LSL #0
0x0668	0x4839    LDR	R0, [PC, #228]
0x066A	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 426 :: 		
0x066C	0xF0020001  AND	R0, R2, #1
0x0670	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC255
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x0672	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 427 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC239:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x0674	0x4836    LDR	R0, [PC, #216]
0x0676	0x6800    LDR	R0, [R0, #0]
0x0678	0xF0000002  AND	R0, R0, #2
0x067C	0x2800    CMP	R0, #0
0x067E	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC240
;__Lib_System_105_107.c, 428 :: 		
0x0680	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC239
L___Lib_System_105_107_InitialSetUpRCCRCC240:
;__Lib_System_105_107.c, 429 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x0682	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC238
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC255:
;__Lib_System_105_107.c, 426 :: 		
0x0684	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 429 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC238:
;__Lib_System_105_107.c, 431 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x0686	0xF4023080  AND	R0, R2, #65536
0x068A	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC256
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
0x068C	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 432 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC242:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x068E	0x4830    LDR	R0, [PC, #192]
0x0690	0x6800    LDR	R0, [R0, #0]
0x0692	0xF4003000  AND	R0, R0, #131072
0x0696	0x2800    CMP	R0, #0
0x0698	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC243
;__Lib_System_105_107.c, 433 :: 		
0x069A	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC242
L___Lib_System_105_107_InitialSetUpRCCRCC243:
;__Lib_System_105_107.c, 434 :: 		
; ulRCC_CR end address is: 8 (R2)
0x069C	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC241
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC256:
;__Lib_System_105_107.c, 431 :: 		
0x069E	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 434 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC241:
;__Lib_System_105_107.c, 436 :: 		
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x06A0	0xF0025080  AND	R0, R2, #268435456
0x06A4	0xB168    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC257
;__Lib_System_105_107.c, 437 :: 		
0x06A6	0x482A    LDR	R0, [PC, #168]
0x06A8	0x6800    LDR	R0, [R0, #0]
0x06AA	0xF0405180  ORR	R1, R0, #268435456
0x06AE	0x4828    LDR	R0, [PC, #160]
0x06B0	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
;__Lib_System_105_107.c, 438 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC245:
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x06B2	0x4827    LDR	R0, [PC, #156]
0x06B4	0x6800    LDR	R0, [R0, #0]
0x06B6	0xF0005000  AND	R0, R0, #536870912
0x06BA	0x2800    CMP	R0, #0
0x06BC	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC246
;__Lib_System_105_107.c, 439 :: 		
0x06BE	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC245
L___Lib_System_105_107_InitialSetUpRCCRCC246:
;__Lib_System_105_107.c, 440 :: 		
; ulRCC_CR end address is: 8 (R2)
0x06C0	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC244
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC257:
;__Lib_System_105_107.c, 436 :: 		
;__Lib_System_105_107.c, 440 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC244:
;__Lib_System_105_107.c, 442 :: 		
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x06C2	0xF0026080  AND	R0, R2, #67108864
0x06C6	0xB178    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC258
;__Lib_System_105_107.c, 443 :: 		
0x06C8	0x4821    LDR	R0, [PC, #132]
0x06CA	0x6800    LDR	R0, [R0, #0]
0x06CC	0xF0406180  ORR	R1, R0, #67108864
0x06D0	0x481F    LDR	R0, [PC, #124]
0x06D2	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x06D4	0x4611    MOV	R1, R2
0x06D6	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 444 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC248:
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x06D8	0x481D    LDR	R0, [PC, #116]
0x06DA	0x6800    LDR	R0, [R0, #0]
0x06DC	0xF0006000  AND	R0, R0, #134217728
0x06E0	0x2800    CMP	R0, #0
0x06E2	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC249
;__Lib_System_105_107.c, 445 :: 		
0x06E4	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC248
L___Lib_System_105_107_InitialSetUpRCCRCC249:
;__Lib_System_105_107.c, 446 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x06E6	0xE001    B	L___Lib_System_105_107_InitialSetUpRCCRCC247
; ulRCC_CR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC258:
;__Lib_System_105_107.c, 442 :: 		
0x06E8	0x4611    MOV	R1, R2
0x06EA	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 446 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC247:
;__Lib_System_105_107.c, 448 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x06EC	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x06F0	0xB170    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC259
;__Lib_System_105_107.c, 449 :: 		
0x06F2	0x4817    LDR	R0, [PC, #92]
0x06F4	0x6800    LDR	R0, [R0, #0]
0x06F6	0xF0407180  ORR	R1, R0, #16777216
0x06FA	0x4815    LDR	R0, [PC, #84]
0x06FC	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x06FE	0x4611    MOV	R1, R2
;__Lib_System_105_107.c, 450 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC251:
; ulRCC_CFGR start address is: 4 (R1)
0x0700	0x4813    LDR	R0, [PC, #76]
0x0702	0x6800    LDR	R0, [R0, #0]
0x0704	0xF0007000  AND	R0, R0, #33554432
0x0708	0xB900    CBNZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC252
;__Lib_System_105_107.c, 451 :: 		
0x070A	0xE7F9    B	L___Lib_System_105_107_InitialSetUpRCCRCC251
L___Lib_System_105_107_InitialSetUpRCCRCC252:
;__Lib_System_105_107.c, 452 :: 		
0x070C	0x460A    MOV	R2, R1
0x070E	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC250
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC259:
;__Lib_System_105_107.c, 448 :: 		
;__Lib_System_105_107.c, 452 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC250:
;__Lib_System_105_107.c, 456 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC253:
; ulRCC_CFGR start address is: 8 (R2)
0x0710	0x480C    LDR	R0, [PC, #48]
0x0712	0x6800    LDR	R0, [R0, #0]
0x0714	0xF000010C  AND	R1, R0, #12
0x0718	0x0090    LSLS	R0, R2, #2
0x071A	0xF000000C  AND	R0, R0, #12
0x071E	0x4281    CMP	R1, R0
0x0720	0xD000    BEQ	L___Lib_System_105_107_InitialSetUpRCCRCC254
;__Lib_System_105_107.c, 457 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x0722	0xE7F5    B	L___Lib_System_105_107_InitialSetUpRCCRCC253
L___Lib_System_105_107_InitialSetUpRCCRCC254:
;__Lib_System_105_107.c, 458 :: 		
L_end_InitialSetUpRCCRCC2:
0x0724	0xF8DDE000  LDR	LR, [SP, #0]
0x0728	0xB001    ADD	SP, SP, #4
0x072A	0x4770    BX	LR
0x072C	0x00811501  	#352387201
0x0730	0x8402091D  	#152929282
0x0734	0xF6440001  	#128580
0x0738	0x19400001  	#72000
0x073C	0x07700000  	__Lib_System_105_107_APBAHBPrescTable+0
0x0740	0x20004002  	FLASH_ACR+0
0x0744	0x10044002  	RCC_CFGR+0
0x0748	0x102C4002  	RCC_CFGR2+0
0x074C	0xFFFF000F  	#1048575
0x0750	0x10004002  	RCC_CR+0
; end of __Lib_System_105_107_InitialSetUpRCCRCC2
__Lib_System_105_107_SystemClockSetDefault:
;__Lib_System_105_107.c, 360 :: 		
0x0180	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 363 :: 		
0x0182	0x4815    LDR	R0, [PC, #84]
0x0184	0x6800    LDR	R0, [R0, #0]
0x0186	0xF0400101  ORR	R1, R0, #1
0x018A	0x4813    LDR	R0, [PC, #76]
0x018C	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 366 :: 		
0x018E	0x4913    LDR	R1, [PC, #76]
0x0190	0x4813    LDR	R0, [PC, #76]
0x0192	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 369 :: 		
0x0194	0x4810    LDR	R0, [PC, #64]
0x0196	0x6801    LDR	R1, [R0, #0]
0x0198	0x4812    LDR	R0, [PC, #72]
0x019A	0x4001    ANDS	R1, R0
0x019C	0x480E    LDR	R0, [PC, #56]
0x019E	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 372 :: 		
0x01A0	0x480D    LDR	R0, [PC, #52]
0x01A2	0x6801    LDR	R1, [R0, #0]
0x01A4	0xF46F2080  MVN	R0, #262144
0x01A8	0x4001    ANDS	R1, R0
0x01AA	0x480B    LDR	R0, [PC, #44]
0x01AC	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 375 :: 		
0x01AE	0x480C    LDR	R0, [PC, #48]
0x01B0	0x6801    LDR	R1, [R0, #0]
0x01B2	0xF46F00FE  MVN	R0, #8323072
0x01B6	0x4001    ANDS	R1, R0
0x01B8	0x4809    LDR	R0, [PC, #36]
0x01BA	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 378 :: 		
0x01BC	0x4806    LDR	R0, [PC, #24]
0x01BE	0x6801    LDR	R1, [R0, #0]
0x01C0	0xF06F50A0  MVN	R0, #335544320
0x01C4	0x4001    ANDS	R1, R0
0x01C6	0x4804    LDR	R0, [PC, #16]
0x01C8	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 381 :: 		
0x01CA	0xF04F0100  MOV	R1, #0
0x01CE	0x4806    LDR	R0, [PC, #24]
0x01D0	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 385 :: 		
L_end_SystemClockSetDefault:
0x01D2	0xB001    ADD	SP, SP, #4
0x01D4	0x4770    BX	LR
0x01D6	0xBF00    NOP
0x01D8	0x10004002  	RCC_CR+0
0x01DC	0x0000F0FF  	#-251723776
0x01E0	0x10044002  	RCC_CFGR+0
0x01E4	0xFFFFFEF6  	#-17367041
0x01E8	0x102C4002  	RCC_CFGR2+0
; end of __Lib_System_105_107_SystemClockSetDefault
__Lib_System_105_107_InitialSetUpFosc:
;__Lib_System_105_107.c, 460 :: 		
0x075C	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 461 :: 		
0x075E	0x4902    LDR	R1, [PC, #8]
0x0760	0x4802    LDR	R0, [PC, #8]
0x0762	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 462 :: 		
L_end_InitialSetUpFosc:
0x0764	0xB001    ADD	SP, SP, #4
0x0766	0x4770    BX	LR
0x0768	0x19400001  	#72000
0x076C	0x000C2000  	___System_CLOCK_IN_KHZ+0
; end of __Lib_System_105_107_InitialSetUpFosc
___GenExcept:
;__Lib_System_105_107.c, 311 :: 		
0x0754	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 312 :: 		
L___GenExcept30:
0x0756	0xE7FE    B	L___GenExcept30
;__Lib_System_105_107.c, 313 :: 		
L_end___GenExcept:
0x0758	0xB001    ADD	SP, SP, #4
0x075A	0x4770    BX	LR
; end of ___GenExcept
0x078C	0xB500    PUSH	(R14)
0x078E	0xF8DFB014  LDR	R11, [PC, #20]
0x0792	0xF8DFA014  LDR	R10, [PC, #20]
0x0796	0xF8DFC014  LDR	R12, [PC, #20]
0x079A	0xF7FFFD45  BL	552
0x079E	0xBD00    POP	(R15)
0x07A0	0x4770    BX	LR
0x07A2	0xBF00    NOP
0x07A4	0x00002000  	#536870912
0x07A8	0x000C2000  	#536870924
0x07AC	0x07800000  	#1920
0x080C	0xB500    PUSH	(R14)
0x080E	0xF8DFB010  LDR	R11, [PC, #16]
0x0812	0xF8DFA010  LDR	R10, [PC, #16]
0x0816	0xF7FFFCE9  BL	492
0x081A	0xBD00    POP	(R15)
0x081C	0x4770    BX	LR
0x081E	0xBF00    NOP
0x0820	0x00002000  	#536870912
0x0824	0x00102000  	#536870928
_TIMER2_ISR:
;P6_interrupts.c, 61 :: 		void TIMER2_ISR() iv IVT_INT_TIM2 {
;P6_interrupts.c, 63 :: 		TIM2_SR &=  ~(1 << 0);                  // Bit[0] = UIF update intrpt flag. 1 to reset
0x029C	0x480E    LDR	R0, [PC, #56]
0x029E	0x6801    LDR	R1, [R0, #0]
0x02A0	0xF06F0001  MVN	R0, #1
0x02A4	0x4001    ANDS	R1, R0
0x02A6	0x480C    LDR	R0, [PC, #48]
0x02A8	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 65 :: 		if (timer_run_flag == 1) {
0x02AA	0x480C    LDR	R0, [PC, #48]
0x02AC	0x6800    LDR	R0, [R0, #0]
0x02AE	0x2801    CMP	R0, #1
0x02B0	0xD110    BNE	L_TIMER2_ISR4
;P6_interrupts.c, 66 :: 		GPIOD_ODR = (time_count++) << 8;    // Pass the current timer value (shift 8 for High bank) then increment
0x02B2	0x480B    LDR	R0, [PC, #44]
0x02B4	0x6800    LDR	R0, [R0, #0]
0x02B6	0x0201    LSLS	R1, R0, #8
0x02B8	0x480A    LDR	R0, [PC, #40]
0x02BA	0x6001    STR	R1, [R0, #0]
0x02BC	0x4808    LDR	R0, [PC, #32]
0x02BE	0x6800    LDR	R0, [R0, #0]
0x02C0	0x1C41    ADDS	R1, R0, #1
0x02C2	0x4807    LDR	R0, [PC, #28]
0x02C4	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 68 :: 		if (time_count > TIMER_COUNTER_MAX ) {
0x02C6	0x4806    LDR	R0, [PC, #24]
0x02C8	0x6800    LDR	R0, [R0, #0]
0x02CA	0x2863    CMP	R0, #99
0x02CC	0xD902    BLS	L_TIMER2_ISR5
;P6_interrupts.c, 69 :: 		time_count = 0;
0x02CE	0x2100    MOVS	R1, #0
0x02D0	0x4803    LDR	R0, [PC, #12]
0x02D2	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 70 :: 		}
L_TIMER2_ISR5:
;P6_interrupts.c, 71 :: 		}
L_TIMER2_ISR4:
;P6_interrupts.c, 73 :: 		}
L_end_TIMER2_ISR:
0x02D4	0x4770    BX	LR
0x02D6	0xBF00    NOP
0x02D8	0x00104000  	TIM2_SR+0
0x02DC	0x00002000  	P6_interrupts_timer_run_flag+0
0x02E0	0x00042000  	P6_interrupts_time_count+0
0x02E4	0x140C4001  	GPIOD_ODR+0
; end of _TIMER2_ISR
_USART1_ISR:
;P6_interrupts.c, 75 :: 		void USART1_ISR() iv IVT_INT_USART1 {
;P6_interrupts.c, 77 :: 		rx_buffer = USART1_DR;      // RXNE bit interrupt is reset by reading data register
0x0240	0xF84D7D04  PUSH	(R7)
0x0244	0x4811    LDR	R0, [PC, #68]
; rx_buffer start address is: 4 (R1)
0x0246	0x6801    LDR	R1, [R0, #0]
; rx_buffer end address is: 4 (R1)
;P6_interrupts.c, 80 :: 		while ( (USART1_SR & (1 << 7 )) == 0) {}
L_USART1_ISR6:
; rx_buffer start address is: 4 (R1)
0x0248	0x4811    LDR	R0, [PC, #68]
0x024A	0x6800    LDR	R0, [R0, #0]
0x024C	0xF0000080  AND	R0, R0, #128
0x0250	0xB900    CBNZ	R0, L_USART1_ISR7
0x0252	0xE7F9    B	L_USART1_ISR6
L_USART1_ISR7:
;P6_interrupts.c, 81 :: 		Delay_ms(10);
0x0254	0xF24D47BF  MOVW	R7, #54463
0x0258	0xF2C00701  MOVT	R7, #1
0x025C	0xBF00    NOP
0x025E	0xBF00    NOP
L_USART1_ISR8:
0x0260	0x1E7F    SUBS	R7, R7, #1
0x0262	0xD1FD    BNE	L_USART1_ISR8
0x0264	0xBF00    NOP
0x0266	0xBF00    NOP
0x0268	0xBF00    NOP
;P6_interrupts.c, 82 :: 		USART1_DR = rx_buffer;
0x026A	0x4808    LDR	R0, [PC, #32]
0x026C	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 85 :: 		if (rx_buffer >= 0x20) {
0x026E	0x2920    CMP	R1, #32
0x0270	0xD309    BCC	L_USART1_ISR10
; rx_buffer end address is: 4 (R1)
;P6_interrupts.c, 86 :: 		GPIOE_ODR = (usart_count++) << 8;
0x0272	0x4808    LDR	R0, [PC, #32]
0x0274	0x6800    LDR	R0, [R0, #0]
0x0276	0x0201    LSLS	R1, R0, #8
0x0278	0x4807    LDR	R0, [PC, #28]
0x027A	0x6001    STR	R1, [R0, #0]
0x027C	0x4805    LDR	R0, [PC, #20]
0x027E	0x6800    LDR	R0, [R0, #0]
0x0280	0x1C41    ADDS	R1, R0, #1
0x0282	0x4804    LDR	R0, [PC, #16]
0x0284	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 87 :: 		}
L_USART1_ISR10:
;P6_interrupts.c, 88 :: 		}
L_end_USART1_ISR:
0x0286	0xF85D7B04  POP	(R7)
0x028A	0x4770    BX	LR
0x028C	0x38044001  	USART1_DR+0
0x0290	0x38004001  	USART1_SR+0
0x0294	0x00082000  	P6_interrupts_usart_count+0
0x0298	0x180C4001  	GPIOE_ODR+0
; end of _USART1_ISR
_EXTIPB6:
;P6_interrupts.c, 40 :: 		void EXTIPB6() iv IVT_INT_EXTI9_5 ics ICS_AUTO {
;P6_interrupts.c, 41 :: 		EXTI_PR.B6 = 1;                    // Clear pending regsiter interrupt flag for PB6
0x0310	0x2101    MOVS	R1, #1
0x0312	0xB249    SXTB	R1, R1
0x0314	0x4809    LDR	R0, [PC, #36]
0x0316	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 44 :: 		while (GPIOB_IDR.B6 == 1) {}        // Wait here until button release
L_EXTIPB60:
0x0318	0x4809    LDR	R0, [PC, #36]
0x031A	0x6800    LDR	R0, [R0, #0]
0x031C	0xB100    CBZ	R0, L_EXTIPB61
0x031E	0xE7FB    B	L_EXTIPB60
L_EXTIPB61:
;P6_interrupts.c, 47 :: 		GPIOE_ODR = ( (time_count-1) << 8) & 0xFF00;            // Update the LEDs on PORTE/H (shift 8 LEDs)
0x0320	0x4808    LDR	R0, [PC, #32]
0x0322	0x6800    LDR	R0, [R0, #0]
0x0324	0x1E40    SUBS	R0, R0, #1
0x0326	0x0200    LSLS	R0, R0, #8
0x0328	0xF400417F  AND	R1, R0, #65280
0x032C	0x4806    LDR	R0, [PC, #24]
0x032E	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 48 :: 		usart_count = time_count;          // Update the USART counter for key presses for PortE for USART1 ISR
0x0330	0x4804    LDR	R0, [PC, #16]
0x0332	0x6801    LDR	R1, [R0, #0]
0x0334	0x4805    LDR	R0, [PC, #20]
0x0336	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 51 :: 		}
L_end_EXTIPB6:
0x0338	0x4770    BX	LR
0x033A	0xBF00    NOP
0x033C	0x82984220  	EXTI_PR+0
0x0340	0x81184221  	GPIOB_IDR+0
0x0344	0x00042000  	P6_interrupts_time_count+0
0x0348	0x180C4001  	GPIOE_ODR+0
0x034C	0x00082000  	P6_interrupts_usart_count+0
; end of _EXTIPB6
_EXTIPA4:
;P6_interrupts.c, 53 :: 		void EXTIPA4() iv IVT_INT_EXTI4 ics ICS_AUTO {
;P6_interrupts.c, 54 :: 		EXTI_PR.PA4 = 1;                         // Clear interrupt pending regsiter
0x02E8	0x2101    MOVS	R1, #1
0x02EA	0xB249    SXTB	R1, R1
0x02EC	0x4805    LDR	R0, [PC, #20]
0x02EE	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 56 :: 		timer_run_flag = ~timer_run_flag;        // Flip the flag switch to toggle the timer counter on PORTD
0x02F0	0x4805    LDR	R0, [PC, #20]
0x02F2	0x6800    LDR	R0, [R0, #0]
0x02F4	0x43C1    MVN	R1, R0
0x02F6	0x4804    LDR	R0, [PC, #16]
0x02F8	0x6001    STR	R1, [R0, #0]
;P6_interrupts.c, 57 :: 		while (GPIOA_IDR.B4 == 1) {}             // Hold here until button is released
L_EXTIPA42:
0x02FA	0x4804    LDR	R0, [PC, #16]
0x02FC	0x6800    LDR	R0, [R0, #0]
0x02FE	0xB100    CBZ	R0, L_EXTIPA43
0x0300	0xE7FB    B	L_EXTIPA42
L_EXTIPA43:
;P6_interrupts.c, 59 :: 		}
L_end_EXTIPA4:
0x0302	0x4770    BX	LR
0x0304	0x82904220  	EXTI_PR+0
0x0308	0x00002000  	P6_interrupts_timer_run_flag+0
0x030C	0x01104221  	GPIOA_IDR+0
; end of _EXTIPA4
;__Lib_System_105_107.c,388 :: __Lib_System_105_107_APBAHBPrescTable [16]
0x0770	0x00000000 ;__Lib_System_105_107_APBAHBPrescTable+0
0x0774	0x04030201 ;__Lib_System_105_107_APBAHBPrescTable+4
0x0778	0x04030201 ;__Lib_System_105_107_APBAHBPrescTable+8
0x077C	0x09080706 ;__Lib_System_105_107_APBAHBPrescTable+12
; end of __Lib_System_105_107_APBAHBPrescTable
;P6_interrupts.c,0 :: ?ICSP6_interrupts_timer_run_flag [4]
0x0780	0x00000001 ;?ICSP6_interrupts_timer_run_flag+0
; end of ?ICSP6_interrupts_timer_run_flag
;P6_interrupts.c,0 :: ?ICSP6_interrupts_time_count [4]
0x0784	0x00000000 ;?ICSP6_interrupts_time_count+0
; end of ?ICSP6_interrupts_time_count
;P6_interrupts.c,0 :: ?ICSP6_interrupts_usart_count [4]
0x0788	0x00000000 ;?ICSP6_interrupts_usart_count+0
; end of ?ICSP6_interrupts_usart_count
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0150      [48]    _initClock72MHz
0x0180     [108]    __Lib_System_105_107_SystemClockSetDefault
0x01EC      [58]    ___FillZeros
0x0228      [20]    ___CC2DW
0x0240      [92]    _USART1_ISR
0x029C      [76]    _TIMER2_ISR
0x02E8      [40]    _EXTIPA4
0x0310      [64]    _EXTIPB6
0x0350     [684]    _main
0x05FC     [344]    __Lib_System_105_107_InitialSetUpRCCRCC2
0x0754       [8]    ___GenExcept
0x075C      [20]    __Lib_System_105_107_InitialSetUpFosc
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x20000000       [4]    P6_interrupts_timer_run_flag
0x20000004       [4]    P6_interrupts_time_count
0x20000008       [4]    P6_interrupts_usart_count
0x2000000C       [4]    ___System_CLOCK_IN_KHZ
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0770      [16]    __Lib_System_105_107_APBAHBPrescTable
0x0780       [4]    ?ICSP6_interrupts_timer_run_flag
0x0784       [4]    ?ICSP6_interrupts_time_count
0x0788       [4]    ?ICSP6_interrupts_usart_count
