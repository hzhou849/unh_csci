;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 2/26/2022 2:20:35 AM
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0xFFFC2000  	536936444
0x0004	0x03990000  	921
0x0008	0x02390000  	569
0x000C	0x02390000  	569
0x0010	0x02390000  	569
0x0014	0x02390000  	569
0x0018	0x02390000  	569
0x001C	0x02390000  	569
0x0020	0x02390000  	569
0x0024	0x02390000  	569
0x0028	0x02390000  	569
0x002C	0x02390000  	569
0x0030	0x02390000  	569
0x0034	0x02390000  	569
0x0038	0x02390000  	569
0x003C	0x02390000  	569
0x0040	0x02390000  	569
0x0044	0x02390000  	569
0x0048	0x02390000  	569
0x004C	0x02390000  	569
0x0050	0x02390000  	569
0x0054	0x02390000  	569
0x0058	0x02390000  	569
0x005C	0x02390000  	569
0x0060	0x02390000  	569
0x0064	0x02390000  	569
0x0068	0x02390000  	569
0x006C	0x02390000  	569
0x0070	0x02390000  	569
0x0074	0x02390000  	569
0x0078	0x02390000  	569
0x007C	0x02390000  	569
0x0080	0x02390000  	569
0x0084	0x02390000  	569
0x0088	0x02390000  	569
0x008C	0x02390000  	569
0x0090	0x02390000  	569
0x0094	0x02390000  	569
0x0098	0x02390000  	569
0x009C	0x02390000  	569
0x00A0	0x02390000  	569
0x00A4	0x02390000  	569
0x00A8	0x02390000  	569
0x00AC	0x02390000  	569
0x00B0	0x02390000  	569
0x00B4	0x02390000  	569
0x00B8	0x02390000  	569
0x00BC	0x02390000  	569
0x00C0	0x02390000  	569
0x00C4	0x02390000  	569
0x00C8	0x02390000  	569
0x00CC	0x02390000  	569
0x00D0	0x02390000  	569
0x00D4	0x02390000  	569
0x00D8	0x02390000  	569
0x00DC	0x02390000  	569
0x00E0	0x02390000  	569
0x00E4	0x02390000  	569
0x00E8	0x02390000  	569
0x00EC	0x02390000  	569
0x00F0	0x02390000  	569
0x00F4	0x02390000  	569
0x00F8	0x02390000  	569
0x00FC	0x02390000  	569
0x0100	0x02390000  	569
0x0104	0x02390000  	569
0x0108	0x02390000  	569
0x010C	0x02390000  	569
0x0110	0x02390000  	569
0x0114	0x02390000  	569
0x0118	0x02390000  	569
0x011C	0x02390000  	569
0x0120	0x02390000  	569
0x0124	0x02390000  	569
0x0128	0x02390000  	569
0x012C	0x02390000  	569
0x0130	0x02390000  	569
0x0134	0x02390000  	569
0x0138	0x02390000  	569
0x013C	0x02390000  	569
0x0140	0x02390000  	569
0x0144	0x02390000  	569
0x0148	0x02390000  	569
0x014C	0x02390000  	569
; end of ____SysVT
_main:
;P3_LED_BONUS.c, 73 :: 		void main() {
0x0398	0xB082    SUB	SP, SP, #8
0x039A	0xF7FFFF51  BL	576
0x039E	0xF000F9B1  BL	1796
0x03A2	0xF7FFFF3F  BL	548
0x03A6	0xF000F95F  BL	1640
;P3_LED_BONUS.c, 75 :: 		uint16_t combined_num    = 0;
;P3_LED_BONUS.c, 76 :: 		uint16_t target_count    = 0;       // Set the lower bound number
0x03AA	0xF2400000  MOVW	R0, #0
0x03AE	0xF8AD0004  STRH	R0, [SP, #4]
;P3_LED_BONUS.c, 77 :: 		uint8_t  count_mode      = INCREMENT_MODE;   // Default start state
; count_mode start address is: 12 (R3)
0x03B2	0x2301    MOVS	R3, #1
;P3_LED_BONUS.c, 78 :: 		uint8_t  temp_num        = 0;
;P3_LED_BONUS.c, 79 :: 		uint32_t PA0_led_counter = 0;
;P3_LED_BONUS.c, 80 :: 		uint32_t i               = 0;
;P3_LED_BONUS.c, 93 :: 		RCC_APB2ENR |= 1 << 2; // Enable GPIO Clock - Port B
0x03B4	0x4899    LDR	R0, [PC, #612]
0x03B6	0x6800    LDR	R0, [R0, #0]
0x03B8	0xF0400104  ORR	R1, R0, #4
0x03BC	0x4897    LDR	R0, [PC, #604]
0x03BE	0x6001    STR	R1, [R0, #0]
;P3_LED_BONUS.c, 94 :: 		RCC_APB2ENR |= 1 << 3; // Enable GPIO Clock - Port B
0x03C0	0x4896    LDR	R0, [PC, #600]
0x03C2	0x6800    LDR	R0, [R0, #0]
0x03C4	0xF0400108  ORR	R1, R0, #8
0x03C8	0x4894    LDR	R0, [PC, #592]
0x03CA	0x6001    STR	R1, [R0, #0]
;P3_LED_BONUS.c, 95 :: 		RCC_APB2ENR |= 1 << 4; // Enable GPIO Clock - Port C
0x03CC	0x4893    LDR	R0, [PC, #588]
0x03CE	0x6800    LDR	R0, [R0, #0]
0x03D0	0xF0400110  ORR	R1, R0, #16
0x03D4	0x4891    LDR	R0, [PC, #580]
0x03D6	0x6001    STR	R1, [R0, #0]
;P3_LED_BONUS.c, 96 :: 		RCC_APB2ENR |= 1 << 5; // Enable GPIO Clock - Port D
0x03D8	0x4890    LDR	R0, [PC, #576]
0x03DA	0x6800    LDR	R0, [R0, #0]
0x03DC	0xF0400120  ORR	R1, R0, #32
0x03E0	0x488E    LDR	R0, [PC, #568]
0x03E2	0x6001    STR	R1, [R0, #0]
;P3_LED_BONUS.c, 97 :: 		RCC_APB2ENR |= 1 << 6; // Enable GPIO Clock - Port E
0x03E4	0x488D    LDR	R0, [PC, #564]
0x03E6	0x6800    LDR	R0, [R0, #0]
0x03E8	0xF0400140  ORR	R1, R0, #64
0x03EC	0x488B    LDR	R0, [PC, #556]
0x03EE	0x6001    STR	R1, [R0, #0]
;P3_LED_BONUS.c, 104 :: 		GPIOA_CRL = GPIO_DIR_OUTPUT;
0x03F0	0xF04F3133  MOV	R1, #858993459
0x03F4	0x488A    LDR	R0, [PC, #552]
0x03F6	0x6001    STR	R1, [R0, #0]
;P3_LED_BONUS.c, 107 :: 		GPIOB_CRL = GPIO_DIR_INPUT;
0x03F8	0xF04F3144  MOV	R1, #1145324612
0x03FC	0x4889    LDR	R0, [PC, #548]
0x03FE	0x6001    STR	R1, [R0, #0]
;P3_LED_BONUS.c, 110 :: 		GPIOC_CRL = GPIO_DIR_INPUT;
0x0400	0xF04F3144  MOV	R1, #1145324612
0x0404	0x4888    LDR	R0, [PC, #544]
0x0406	0x6001    STR	R1, [R0, #0]
;P3_LED_BONUS.c, 113 :: 		GPIOD_CRL = GPIO_DIR_OUTPUT;
0x0408	0xF04F3133  MOV	R1, #858993459
0x040C	0x4887    LDR	R0, [PC, #540]
0x040E	0x6001    STR	R1, [R0, #0]
;P3_LED_BONUS.c, 114 :: 		GPIOD_CRH = GPIO_DIR_OUTPUT;
0x0410	0xF04F3133  MOV	R1, #858993459
0x0414	0x4886    LDR	R0, [PC, #536]
0x0416	0x6001    STR	R1, [R0, #0]
;P3_LED_BONUS.c, 117 :: 		GPIOE_CRL = GPIO_DIR_OUTPUT;
0x0418	0xF04F3133  MOV	R1, #858993459
0x041C	0x4885    LDR	R0, [PC, #532]
0x041E	0x6001    STR	R1, [R0, #0]
;P3_LED_BONUS.c, 118 :: 		GPIOE_CRH = GPIO_DIR_OUTPUT;
0x0420	0xF04F3133  MOV	R1, #858993459
0x0424	0x4884    LDR	R0, [PC, #528]
0x0426	0x6001    STR	R1, [R0, #0]
;P3_LED_BONUS.c, 122 :: 		if (PD_LOW_NUM > PD_HIGH_NUM) {
0x0428	0x4884    LDR	R0, [PC, #528]
0x042A	0x7801    LDRB	R1, [R0, #0]
0x042C	0x4884    LDR	R0, [PC, #528]
0x042E	0x7800    LDRB	R0, [R0, #0]
0x0430	0x4288    CMP	R0, R1
0x0432	0xD906    BLS	L_main7
;P3_LED_BONUS.c, 123 :: 		temp_num = PD_LOW_NUM; // Store the 'higher" number
0x0434	0x4A82    LDR	R2, [PC, #520]
; temp_num start address is: 16 (R4)
0x0436	0x7814    LDRB	R4, [R2, #0]
;P3_LED_BONUS.c, 124 :: 		PD_LOW_NUM = PD_HIGH_NUM;
0x0438	0x4980    LDR	R1, [PC, #512]
0x043A	0x7808    LDRB	R0, [R1, #0]
0x043C	0x7010    STRB	R0, [R2, #0]
;P3_LED_BONUS.c, 125 :: 		PD_HIGH_NUM = temp_num;
0x043E	0x700C    STRB	R4, [R1, #0]
; temp_num end address is: 16 (R4)
;P3_LED_BONUS.c, 126 :: 		}
0x0440	0xE017    B	L_main8
L_main7:
;P3_LED_BONUS.c, 127 :: 		else if (PD_LOW_NUM == PD_HIGH_NUM) {
0x0442	0x487E    LDR	R0, [PC, #504]
0x0444	0x7801    LDRB	R1, [R0, #0]
0x0446	0x487E    LDR	R0, [PC, #504]
0x0448	0x7800    LDRB	R0, [R0, #0]
0x044A	0x4288    CMP	R0, R1
0x044C	0xD111    BNE	L_main9
; count_mode end address is: 12 (R3)
;P3_LED_BONUS.c, 130 :: 		combined_num = (PD_LOW_NUM & 0x00FF) | (PD_HIGH_NUM << 8);
0x044E	0x487C    LDR	R0, [PC, #496]
0x0450	0x7800    LDRB	R0, [R0, #0]
0x0452	0xF00001FF  AND	R1, R0, #255
0x0456	0xB2C9    UXTB	R1, R1
0x0458	0x4878    LDR	R0, [PC, #480]
0x045A	0x7800    LDRB	R0, [R0, #0]
0x045C	0x0200    LSLS	R0, R0, #8
0x045E	0xB280    UXTH	R0, R0
0x0460	0x4301    ORRS	R1, R0
0x0462	0xB289    UXTH	R1, R1
;P3_LED_BONUS.c, 131 :: 		GPIOD_ODR = combined_num;
0x0464	0x4877    LDR	R0, [PC, #476]
0x0466	0x6001    STR	R1, [R0, #0]
;P3_LED_BONUS.c, 132 :: 		GPIOE_ODR = combined_num << 8;
0x0468	0x0209    LSLS	R1, R1, #8
0x046A	0xB289    UXTH	R1, R1
0x046C	0x4876    LDR	R0, [PC, #472]
0x046E	0x6001    STR	R1, [R0, #0]
;P3_LED_BONUS.c, 134 :: 		return;  // Exit program
0x0470	0xE0D2    B	L_end_main
;P3_LED_BONUS.c, 135 :: 		}
L_main9:
; count_mode start address is: 12 (R3)
L_main8:
;P3_LED_BONUS.c, 140 :: 		combined_num = (PD_LOW_NUM & 0x00FF) | (PD_HIGH_NUM << 8);
0x0472	0x4A73    LDR	R2, [PC, #460]
0x0474	0x7810    LDRB	R0, [R2, #0]
0x0476	0xF00001FF  AND	R1, R0, #255
0x047A	0xB2C9    UXTB	R1, R1
0x047C	0x486F    LDR	R0, [PC, #444]
0x047E	0x7800    LDRB	R0, [R0, #0]
0x0480	0x0200    LSLS	R0, R0, #8
0x0482	0xB280    UXTH	R0, R0
0x0484	0x4301    ORRS	R1, R0
0x0486	0xB289    UXTH	R1, R1
;P3_LED_BONUS.c, 141 :: 		GPIOD_ODR = (combined_num & 0x0000FFFF);     // Pad for 32-bit ODR
0x0488	0xF64F70FF  MOVW	R0, #65535
0x048C	0x4001    ANDS	R1, R0
0x048E	0xB289    UXTH	R1, R1
0x0490	0x486C    LDR	R0, [PC, #432]
0x0492	0x6001    STR	R1, [R0, #0]
;P3_LED_BONUS.c, 142 :: 		GPIOE_ODR = (PD_LOW_NUM & 0x0000FFFF) << 8;
0x0494	0x4610    MOV	R0, R2
0x0496	0x7801    LDRB	R1, [R0, #0]
0x0498	0xF64F70FF  MOVW	R0, #65535
0x049C	0xEA010000  AND	R0, R1, R0, LSL #0
0x04A0	0xB280    UXTH	R0, R0
0x04A2	0x0201    LSLS	R1, R0, #8
0x04A4	0xB289    UXTH	R1, R1
0x04A6	0x4868    LDR	R0, [PC, #416]
0x04A8	0x6001    STR	R1, [R0, #0]
;P3_LED_BONUS.c, 145 :: 		target_count = PD_LOW_NUM;
0x04AA	0x4610    MOV	R0, R2
0x04AC	0x7800    LDRB	R0, [R0, #0]
0x04AE	0xF8AD0004  STRH	R0, [SP, #4]
;P3_LED_BONUS.c, 148 :: 		Delay_ms(1000);
0x04B2	0xF64127FF  MOVW	R7, #6911
0x04B6	0xF2C007B7  MOVT	R7, #183
L_main10:
0x04BA	0x1E7F    SUBS	R7, R7, #1
0x04BC	0xD1FD    BNE	L_main10
0x04BE	0xBF00    NOP
0x04C0	0xBF00    NOP
0x04C2	0xBF00    NOP
0x04C4	0xBF00    NOP
0x04C6	0xBF00    NOP
; count_mode end address is: 12 (R3)
0x04C8	0xB2DA    UXTB	R2, R3
;P3_LED_BONUS.c, 153 :: 		for (;;) {
L_main12:
;P3_LED_BONUS.c, 156 :: 		if (target_count == PD_HIGH_NUM) {
; count_mode start address is: 8 (R2)
0x04CA	0x485C    LDR	R0, [PC, #368]
0x04CC	0x7801    LDRB	R1, [R0, #0]
0x04CE	0xF8BD0004  LDRH	R0, [SP, #4]
0x04D2	0x4288    CMP	R0, R1
0x04D4	0xD101    BNE	L_main15
; count_mode end address is: 8 (R2)
;P3_LED_BONUS.c, 157 :: 		count_mode = DECREMENT_MODE;
; count_mode start address is: 12 (R3)
0x04D6	0x2300    MOVS	R3, #0
;P3_LED_BONUS.c, 158 :: 		}
; count_mode end address is: 12 (R3)
0x04D8	0xE009    B	L_main16
L_main15:
;P3_LED_BONUS.c, 159 :: 		else if (target_count == PD_LOW_NUM) {
; count_mode start address is: 8 (R2)
0x04DA	0x4859    LDR	R0, [PC, #356]
0x04DC	0x7801    LDRB	R1, [R0, #0]
0x04DE	0xF8BD0004  LDRH	R0, [SP, #4]
0x04E2	0x4288    CMP	R0, R1
0x04E4	0xD102    BNE	L__main22
; count_mode end address is: 8 (R2)
;P3_LED_BONUS.c, 160 :: 		count_mode = INCREMENT_MODE;
; count_mode start address is: 0 (R0)
0x04E6	0x2001    MOVS	R0, #1
; count_mode end address is: 0 (R0)
0x04E8	0xB2C3    UXTB	R3, R0
;P3_LED_BONUS.c, 161 :: 		}
0x04EA	0xE000    B	L_main17
L__main22:
;P3_LED_BONUS.c, 159 :: 		else if (target_count == PD_LOW_NUM) {
0x04EC	0xB2D3    UXTB	R3, R2
;P3_LED_BONUS.c, 161 :: 		}
L_main17:
; count_mode start address is: 12 (R3)
; count_mode end address is: 12 (R3)
L_main16:
;P3_LED_BONUS.c, 164 :: 		if (count_mode == INCREMENT_MODE) {
; count_mode start address is: 12 (R3)
0x04EE	0x2B01    CMP	R3, #1
0x04F0	0xD105    BNE	L_main18
;P3_LED_BONUS.c, 165 :: 		++target_count;
0x04F2	0xF8BD0004  LDRH	R0, [SP, #4]
0x04F6	0x1C40    ADDS	R0, R0, #1
0x04F8	0xF8AD0004  STRH	R0, [SP, #4]
;P3_LED_BONUS.c, 166 :: 		} else{
0x04FC	0xE004    B	L_main19
L_main18:
;P3_LED_BONUS.c, 167 :: 		--target_count;
0x04FE	0xF8BD0004  LDRH	R0, [SP, #4]
0x0502	0x1E40    SUBS	R0, R0, #1
0x0504	0xF8AD0004  STRH	R0, [SP, #4]
;P3_LED_BONUS.c, 168 :: 		}
L_main19:
;P3_LED_BONUS.c, 171 :: 		update_PD_LED(&target_count);
0x0508	0xA801    ADD	R0, SP, #4
0x050A	0xF7FFFE21  BL	_update_PD_LED+0
;P3_LED_BONUS.c, 173 :: 		PA0_PWM_phase = target_count % 3;  // get the PWM phase
0x050E	0xF8BD2004  LDRH	R2, [SP, #4]
0x0512	0x2003    MOVS	R0, #3
0x0514	0xFBB2F1F0  UDIV	R1, R2, R0
0x0518	0xFB002111  MLS	R1, R0, R1, R2
0x051C	0xB289    UXTH	R1, R1
0x051E	0x484B    LDR	R0, [PC, #300]
0x0520	0x6001    STR	R1, [R0, #0]
;P3_LED_BONUS.c, 213 :: 		MOVW R7, #0x0900 // #0xAA20
0x0522	0xF88D3000  STRB	R3, [SP, #0]
0x0526	0xF6401700  MOVW	R7, #2304
;P3_LED_BONUS.c, 214 :: 		MOVT R7, #0x3D   // #0x44
0x052A	0xF2C0073D  MOVT	R7, #61
;P3_LED_BONUS.c, 218 :: 		MOVW R0, #LO_ADDR(GPIOC_IDR+0)
0x052E	0xF2410008  MOVW	R0, #lo_addr(GPIOC_IDR+0)
;P3_LED_BONUS.c, 219 :: 		MOVT R0, #HI_ADDR(GPIOC_IDR+0)
0x0532	0xF2C40001  MOVT	R0, #hi_addr(GPIOC_IDR+0)
;P3_LED_BONUS.c, 220 :: 		MOVW R3, #LO_ADDR(GPIOA_ODR+0)
0x0536	0xF640030C  MOVW	R3, #lo_addr(GPIOA_ODR+0)
;P3_LED_BONUS.c, 221 :: 		MOVT R3, #HI_ADDR(GPIOA_ODR+0)
0x053A	0xF2C40301  MOVT	R3, #hi_addr(GPIOA_ODR+0)
;P3_LED_BONUS.c, 223 :: 		MOVW R2, #LO_ADDR(GPIOE_ODR+0)
0x053E	0xF641020C  MOVW	R2, #lo_addr(GPIOE_ODR+0)
;P3_LED_BONUS.c, 224 :: 		MOVT R2, #HI_ADDR(GPIOE_ODR+0)
0x0542	0xF2C40201  MOVT	R2, #hi_addr(GPIOE_ODR+0)
;P3_LED_BONUS.c, 225 :: 		MOVW R4, #LO_ADDR(_PE_display_mode+0)
0x0546	0xF2400402  MOVW	R4, #lo_addr(_PE_display_mode+0)
;P3_LED_BONUS.c, 226 :: 		MOVT R4, #HI_ADDR(_PE_display_mode+0)
0x054A	0xF2C20400  MOVT	R4, #hi_addr(_PE_display_mode+0)
;P3_LED_BONUS.c, 227 :: 		MOVW R8, #LO_ADDR(_PD_LOW_NUM+0)
0x054E	0xF2400800  MOVW	R8, #lo_addr(_PD_LOW_NUM+0)
;P3_LED_BONUS.c, 228 :: 		MOVT R8, #HI_ADDR(_PD_LOW_NUM+0)
0x0552	0xF2C20800  MOVT	R8, #hi_addr(_PD_LOW_NUM+0)
;P3_LED_BONUS.c, 229 :: 		MOVW R9, #LO_ADDR(_PD_HIGH_NUM+0)
0x0556	0xF2400901  MOVW	R9, #lo_addr(_PD_HIGH_NUM+0)
;P3_LED_BONUS.c, 230 :: 		MOVT R9, #HI_ADDR(_PD_HIGH_NUM+0)
0x055A	0xF2C20900  MOVT	R9, #hi_addr(_PD_HIGH_NUM+0)
;P3_LED_BONUS.c, 232 :: 		_DELAY_LOOP:
_DELAY_LOOP:
;P3_LED_BONUS.c, 233 :: 		SUBS R7, R7, #1            // Update delay clock counter
0x055E	0x1E7F    SUBS	R7, R7, #1
;P3_LED_BONUS.c, 234 :: 		BEQ _EXIT_TIME_LOOP
0x0560	0xD055    BEQ	_EXIT_TIME_LOOP
;P3_LED_BONUS.c, 235 :: 		LDR R1, [R0]               // Load GPIOC_IDR value in R1
0x0562	0x6801    LDR	R1, [R0, #0]
;P3_LED_BONUS.c, 236 :: 		AND R6, R1, #0x00000001    // Extract PC0 bit0
0x0564	0xF0010601  AND	R6, R1, #1
;P3_LED_BONUS.c, 237 :: 		CMP R6, #1                 // Check if PC0 is pressed '1'
0x0568	0x2E01    CMP	R6, #1
;P3_LED_BONUS.c, 238 :: 		BEQ _PC0_BTN_FILTER        // Branch to PC0 Button filter in order to capture button press properly
0x056A	0xD004    BEQ	_PC0_BTN_FILTER
;P3_LED_BONUS.c, 239 :: 		BNE _PC0_NOT_PRESSED       // Branch to Fake operation to alingn cpu tick counting
0x056C	0xD109    BNE	_PC0_NOT_PRESSED
;P3_LED_BONUS.c, 241 :: 		_PC0_PRESSED:
_PC0_PRESSED:
;P3_LED_BONUS.c, 242 :: 		LDR R5, [R4]                // PE_display_mode value
0x056E	0x6825    LDR	R5, [R4, #0]
;P3_LED_BONUS.c, 243 :: 		CMP R5, #1
0x0570	0x2D01    CMP	R5, #1
;P3_LED_BONUS.c, 244 :: 		BEQ _SET_PE_LOW
0x0572	0xD015    BEQ	_SET_PE_LOW
;P3_LED_BONUS.c, 245 :: 		BNE _SET_PE_HI
0x0574	0xD11E    BNE	_SET_PE_HI
;P3_LED_BONUS.c, 247 :: 		_PC0_BTN_FILTER:
_PC0_BTN_FILTER:
;P3_LED_BONUS.c, 248 :: 		LDR R1, [R0]                // GPIOC_IDR value
0x0576	0x6801    LDR	R1, [R0, #0]
;P3_LED_BONUS.c, 249 :: 		AND R6, R1, #0x00000001     // Extract PC0
0x0578	0xF0010601  AND	R6, R1, #1
;P3_LED_BONUS.c, 250 :: 		CMP R6, #1                  // Check if PC0 is pressed '1'
0x057C	0x2E01    CMP	R6, #1
;P3_LED_BONUS.c, 251 :: 		BEQ _PC0_BTN_FILTER            // keep it looped to control button
0x057E	0xD0FA    BEQ	_PC0_BTN_FILTER
;P3_LED_BONUS.c, 252 :: 		BNE _PC0_PRESSED
0x0580	0xD1F5    BNE	_PC0_PRESSED
;P3_LED_BONUS.c, 254 :: 		_PC0_NOT_PRESSED:
_PC0_NOT_PRESSED:
;P3_LED_BONUS.c, 258 :: 		MOVW R5, #LO_ADDR(_PA0_PWM_phase+0)
0x0582	0xF2400504  MOVW	R5, #lo_addr(_PA0_PWM_phase+0)
;P3_LED_BONUS.c, 259 :: 		MOVT R5, #HI_ADDR(_PA0_PWM_phase+0)
0x0586	0xF2C20500  MOVT	R5, #hi_addr(_PA0_PWM_phase+0)
;P3_LED_BONUS.c, 260 :: 		LDR R10, [R5]
0x058A	0xF8D5A000  LDR	R10, [R5, #0]
;P3_LED_BONUS.c, 261 :: 		CMP R10, #0
0x058E	0xF1BA0F00  CMP	R10, #0
;P3_LED_BONUS.c, 262 :: 		BEQ _UPDATE_PWM1_PA
0x0592	0xD019    BEQ	_UPDATE_PWM1_PA
;P3_LED_BONUS.c, 263 :: 		CMP R10, #1
0x0594	0xF1BA0F01  CMP	R10, #1
;P3_LED_BONUS.c, 264 :: 		BEQ _UPDATE_PWM2_PA
0x0598	0xD01F    BEQ	_UPDATE_PWM2_PA
;P3_LED_BONUS.c, 265 :: 		CMP R10, #2
0x059A	0xF1BA0F02  CMP	R10, #2
;P3_LED_BONUS.c, 266 :: 		BEQ _UPDATE_PWM3_PA
0x059E	0xD025    BEQ	_UPDATE_PWM3_PA
;P3_LED_BONUS.c, 273 :: 		_SET_PE_LOW:
_SET_PE_LOW:
;P3_LED_BONUS.c, 274 :: 		LDR R5, [R8]
0x05A0	0xF8D85000  LDR	R5, [R8, #0]
;P3_LED_BONUS.c, 275 :: 		LSL R5, #8 // PE_LOW_NUM shift 8 left
0x05A4	0xEA4F2505  LSL	R5, R5, #8
;P3_LED_BONUS.c, 276 :: 		STR R5, [R2]    // WRITE TO PE_ODR
0x05A8	0x6015    STR	R5, [R2, #0]
;P3_LED_BONUS.c, 277 :: 		MOV R10, #0x00000000   // Store LOW_MODE flag in R1
0x05AA	0xF04F0A00  MOV	R10, #0
;P3_LED_BONUS.c, 278 :: 		STR R10, [R4]        // update display mode flag
0x05AE	0xF8C4A000  STR	R10, [R4, #0]
;P3_LED_BONUS.c, 279 :: 		B _DELAY_LOOP
0x05B2	0xE7D4    B	_DELAY_LOOP
;P3_LED_BONUS.c, 281 :: 		_SET_PE_HI:
_SET_PE_HI:
;P3_LED_BONUS.c, 282 :: 		LDR R5, [R9]
0x05B4	0xF8D95000  LDR	R5, [R9, #0]
;P3_LED_BONUS.c, 283 :: 		LSL R5, #8 // PE_LOW_NUM shift 8 left
0x05B8	0xEA4F2505  LSL	R5, R5, #8
;P3_LED_BONUS.c, 284 :: 		STR R5, [R2]  // Updates PE PE_ODR
0x05BC	0x6015    STR	R5, [R2, #0]
;P3_LED_BONUS.c, 285 :: 		MOV R10, #0x00000001               // need to update pE mode now
0x05BE	0xF04F0A01  MOV	R10, #1
;P3_LED_BONUS.c, 286 :: 		STR R10, [R4]
0x05C2	0xF8C4A000  STR	R10, [R4, #0]
;P3_LED_BONUS.c, 287 :: 		B _DELAY_LOOP
0x05C6	0xE7CA    B	_DELAY_LOOP
;P3_LED_BONUS.c, 289 :: 		_UPDATE_PWM1_PA:
_UPDATE_PWM1_PA:
;P3_LED_BONUS.c, 290 :: 		MOV R10, #3
0x05C8	0xF04F0A03  MOV	R10, #3
;P3_LED_BONUS.c, 291 :: 		UDIV R5, R7, R10
0x05CC	0xFBB7F5FA  UDIV	R5, R7, R10
;P3_LED_BONUS.c, 292 :: 		MUL R11, R5, R10
0x05D0	0xFB05FB0A  MUL	R11, R5, R10
;P3_LED_BONUS.c, 293 :: 		CMP R7, R11
0x05D4	0x455F    CMP	R7, R11
;P3_LED_BONUS.c, 294 :: 		BEQ _TURN_ON_PA
0x05D6	0xD012    BEQ	_TURN_ON_PA
;P3_LED_BONUS.c, 295 :: 		BNE _TURN_OFF_PA
0x05D8	0xD115    BNE	_TURN_OFF_PA
;P3_LED_BONUS.c, 297 :: 		_UPDATE_PWM2_PA:
_UPDATE_PWM2_PA:
;P3_LED_BONUS.c, 298 :: 		MOV R10, #10
0x05DA	0xF04F0A0A  MOV	R10, #10
;P3_LED_BONUS.c, 299 :: 		UDIV R5, R7, R10
0x05DE	0xFBB7F5FA  UDIV	R5, R7, R10
;P3_LED_BONUS.c, 300 :: 		MUL R11, R5, R10
0x05E2	0xFB05FB0A  MUL	R11, R5, R10
;P3_LED_BONUS.c, 301 :: 		CMP R7, R11
0x05E6	0x455F    CMP	R7, R11
;P3_LED_BONUS.c, 302 :: 		BEQ _TURN_ON_PA
0x05E8	0xD009    BEQ	_TURN_ON_PA
;P3_LED_BONUS.c, 303 :: 		BNE _TURN_OFF_PA
0x05EA	0xD10C    BNE	_TURN_OFF_PA
;P3_LED_BONUS.c, 305 :: 		_UPDATE_PWM3_PA:
_UPDATE_PWM3_PA:
;P3_LED_BONUS.c, 306 :: 		MOV R10, #20
0x05EC	0xF04F0A14  MOV	R10, #20
;P3_LED_BONUS.c, 307 :: 		UDIV R5, R7, R10
0x05F0	0xFBB7F5FA  UDIV	R5, R7, R10
;P3_LED_BONUS.c, 308 :: 		MUL R11, R5, R10
0x05F4	0xFB05FB0A  MUL	R11, R5, R10
;P3_LED_BONUS.c, 309 :: 		CMP R7, R11
0x05F8	0x455F    CMP	R7, R11
;P3_LED_BONUS.c, 310 :: 		BEQ _TURN_ON_PA
0x05FA	0xD000    BEQ	_TURN_ON_PA
;P3_LED_BONUS.c, 311 :: 		BNE _TURN_OFF_PA
0x05FC	0xD103    BNE	_TURN_OFF_PA
;P3_LED_BONUS.c, 313 :: 		_TURN_ON_PA:
_TURN_ON_PA:
;P3_LED_BONUS.c, 314 :: 		MOV R5, #00000001
0x05FE	0xF04F0501  MOV	R5, #1
;P3_LED_BONUS.c, 315 :: 		STR R5, [R3] // Write to PA0 LED
0x0602	0x601D    STR	R5, [R3, #0]
;P3_LED_BONUS.c, 316 :: 		B _DELAY_LOOP
0x0604	0xE7AB    B	_DELAY_LOOP
;P3_LED_BONUS.c, 317 :: 		_TURN_OFF_PA:
_TURN_OFF_PA:
;P3_LED_BONUS.c, 318 :: 		MOV R5, #00000000
0x0606	0xF04F0500  MOV	R5, #0
;P3_LED_BONUS.c, 319 :: 		STR R5, [R3] // Write to PA0 LED
0x060A	0x601D    STR	R5, [R3, #0]
;P3_LED_BONUS.c, 320 :: 		B _DELAY_LOOP
0x060C	0xE7A7    B	_DELAY_LOOP
;P3_LED_BONUS.c, 322 :: 		_EXIT_TIME_LOOP:
_EXIT_TIME_LOOP:
;P3_LED_BONUS.c, 323 :: 		NOP
0x060E	0xBF00    NOP
;P3_LED_BONUS.c, 213 :: 		MOVW R7, #0x0900 // #0xAA20
0x0610	0xF89D3000  LDRB	R3, [SP, #0]
;P3_LED_BONUS.c, 329 :: 		}
0x0614	0xB2DA    UXTB	R2, R3
; count_mode end address is: 12 (R3)
0x0616	0xE758    B	L_main12
;P3_LED_BONUS.c, 333 :: 		}
L_end_main:
L__main_end_loop:
0x0618	0xE7FE    B	L__main_end_loop
0x061A	0xBF00    NOP
0x061C	0x10184002  	RCC_APB2ENR+0
0x0620	0x08004001  	GPIOA_CRL+0
0x0624	0x0C004001  	GPIOB_CRL+0
0x0628	0x10004001  	GPIOC_CRL+0
0x062C	0x14004001  	GPIOD_CRL+0
0x0630	0x14044001  	GPIOD_CRH+0
0x0634	0x18004001  	GPIOE_CRL+0
0x0638	0x18044001  	GPIOE_CRH+0
0x063C	0x00012000  	_PD_HIGH_NUM+0
0x0640	0x00002000  	_PD_LOW_NUM+0
0x0644	0x140C4001  	GPIOD_ODR+0
0x0648	0x180C4001  	GPIOE_ODR+0
0x064C	0x00042000  	_PA0_PWM_phase+0
; end of _main
___CC2DW:
;__Lib_System_105_107.c, 28 :: 		
0x0210	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 30 :: 		
L_loopDW:
;__Lib_System_105_107.c, 31 :: 		
0x0212	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_105_107.c, 32 :: 		
0x0216	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_105_107.c, 33 :: 		
0x021A	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 34 :: 		
0x021E	0xD1F8    BNE	L_loopDW
;__Lib_System_105_107.c, 36 :: 		
L_end___CC2DW:
0x0220	0xB001    ADD	SP, SP, #4
0x0222	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_105_107.c, 70 :: 		
0x01D4	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 72 :: 		
0x01D6	0xF04F0900  MOV	R9, #0
;__Lib_System_105_107.c, 73 :: 		
0x01DA	0xF04F0C00  MOV	R12, #0
;__Lib_System_105_107.c, 74 :: 		
0x01DE	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_105_107.c, 75 :: 		
0x01E2	0xDC04    BGT	L_loopFZs
;__Lib_System_105_107.c, 76 :: 		
0x01E4	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_105_107.c, 77 :: 		
0x01E8	0xDB01    BLT	L_loopFZs
;__Lib_System_105_107.c, 78 :: 		
0x01EA	0x46D4    MOV	R12, R10
;__Lib_System_105_107.c, 79 :: 		
0x01EC	0x46EA    MOV	R10, SP
;__Lib_System_105_107.c, 80 :: 		
L_loopFZs:
;__Lib_System_105_107.c, 81 :: 		
0x01EE	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_105_107.c, 82 :: 		
0x01F2	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 83 :: 		
0x01F6	0xD1FA    BNE	L_loopFZs
;__Lib_System_105_107.c, 84 :: 		
0x01F8	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_105_107.c, 85 :: 		
0x01FC	0xDD05    BLE	L_norep
;__Lib_System_105_107.c, 86 :: 		
0x01FE	0x46E2    MOV	R10, R12
;__Lib_System_105_107.c, 87 :: 		
0x0200	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_105_107.c, 88 :: 		
0x0204	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_105_107.c, 89 :: 		
0x0208	0xE7F1    B	L_loopFZs
;__Lib_System_105_107.c, 90 :: 		
L_norep:
;__Lib_System_105_107.c, 92 :: 		
L_end___FillZeros:
0x020A	0xB001    ADD	SP, SP, #4
0x020C	0x4770    BX	LR
; end of ___FillZeros
_update_PD_LED:
;P3_LED_BONUS.c, 46 :: 		void update_PD_LED(uint16_t *target_count) {
; target_count start address is: 0 (R0)
0x0150	0xB081    SUB	SP, SP, #4
; target_count end address is: 0 (R0)
; target_count start address is: 0 (R0)
;P3_LED_BONUS.c, 47 :: 		GPIOD_ODR = (*target_count & 0x000000FF);  // GPIOD_ODR is 32bit, must pad target_count it will be promoted to uint32
0x0152	0x8801    LDRH	R1, [R0, #0]
; target_count end address is: 0 (R0)
0x0154	0xF00102FF  AND	R2, R1, #255
0x0158	0xB292    UXTH	R2, R2
0x015A	0x4902    LDR	R1, [PC, #8]
0x015C	0x600A    STR	R2, [R1, #0]
;P3_LED_BONUS.c, 48 :: 		}
L_end_update_PD_LED:
0x015E	0xB001    ADD	SP, SP, #4
0x0160	0x4770    BX	LR
0x0162	0xBF00    NOP
0x0164	0x140C4001  	GPIOD_ODR+0
; end of _update_PD_LED
__Lib_System_105_107_InitialSetUpRCCRCC2:
;__Lib_System_105_107.c, 391 :: 		
0x0240	0xB081    SUB	SP, SP, #4
0x0242	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_105_107.c, 395 :: 		
; ulRCC_CR start address is: 8 (R2)
0x0246	0x4A4A    LDR	R2, [PC, #296]
;__Lib_System_105_107.c, 396 :: 		
; ulRCC_CFGR start address is: 12 (R3)
0x0248	0x4B4A    LDR	R3, [PC, #296]
;__Lib_System_105_107.c, 397 :: 		
; ulRCC_CFGR2 start address is: 16 (R4)
0x024A	0x4C4B    LDR	R4, [PC, #300]
;__Lib_System_105_107.c, 398 :: 		
; Fosc_kHz start address is: 20 (R5)
0x024C	0x4D4B    LDR	R5, [PC, #300]
;__Lib_System_105_107.c, 407 :: 		
0x024E	0xF00300F0  AND	R0, R3, #240
;__Lib_System_105_107.c, 408 :: 		
0x0252	0x0901    LSRS	R1, R0, #4
;__Lib_System_105_107.c, 409 :: 		
0x0254	0x484A    LDR	R0, [PC, #296]
0x0256	0x1840    ADDS	R0, R0, R1
0x0258	0x7800    LDRB	R0, [R0, #0]
; presc start address is: 0 (R0)
;__Lib_System_105_107.c, 411 :: 		
0x025A	0xFA05F100  LSL	R1, R5, R0
; Fosc_kHz end address is: 20 (R5)
; presc end address is: 0 (R0)
; SYS_clk start address is: 20 (R5)
0x025E	0x460D    MOV	R5, R1
;__Lib_System_105_107.c, 413 :: 		
0x0260	0xF64B3080  MOVW	R0, #48000
0x0264	0x4281    CMP	R1, R0
0x0266	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC234
; SYS_clk end address is: 20 (R5)
;__Lib_System_105_107.c, 414 :: 		
0x0268	0x4846    LDR	R0, [PC, #280]
0x026A	0x6800    LDR	R0, [R0, #0]
0x026C	0xF0400102  ORR	R1, R0, #2
0x0270	0x4844    LDR	R0, [PC, #272]
0x0272	0x6001    STR	R1, [R0, #0]
0x0274	0xE011    B	L___Lib_System_105_107_InitialSetUpRCCRCC235
L___Lib_System_105_107_InitialSetUpRCCRCC234:
;__Lib_System_105_107.c, 415 :: 		
; SYS_clk start address is: 20 (R5)
0x0276	0xF64550C0  MOVW	R0, #24000
0x027A	0x4285    CMP	R5, R0
0x027C	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC236
; SYS_clk end address is: 20 (R5)
;__Lib_System_105_107.c, 416 :: 		
0x027E	0x4841    LDR	R0, [PC, #260]
0x0280	0x6800    LDR	R0, [R0, #0]
0x0282	0xF0400101  ORR	R1, R0, #1
0x0286	0x483F    LDR	R0, [PC, #252]
0x0288	0x6001    STR	R1, [R0, #0]
0x028A	0xE006    B	L___Lib_System_105_107_InitialSetUpRCCRCC237
L___Lib_System_105_107_InitialSetUpRCCRCC236:
;__Lib_System_105_107.c, 418 :: 		
0x028C	0x483D    LDR	R0, [PC, #244]
0x028E	0x6801    LDR	R1, [R0, #0]
0x0290	0xF06F0007  MVN	R0, #7
0x0294	0x4001    ANDS	R1, R0
0x0296	0x483B    LDR	R0, [PC, #236]
0x0298	0x6001    STR	R1, [R0, #0]
L___Lib_System_105_107_InitialSetUpRCCRCC237:
L___Lib_System_105_107_InitialSetUpRCCRCC235:
;__Lib_System_105_107.c, 420 :: 		
0x029A	0xF7FFFF65  BL	__Lib_System_105_107_SystemClockSetDefault+0
;__Lib_System_105_107.c, 422 :: 		
0x029E	0x483A    LDR	R0, [PC, #232]
0x02A0	0x6003    STR	R3, [R0, #0]
;__Lib_System_105_107.c, 423 :: 		
0x02A2	0x483A    LDR	R0, [PC, #232]
0x02A4	0x6004    STR	R4, [R0, #0]
; ulRCC_CFGR2 end address is: 16 (R4)
;__Lib_System_105_107.c, 424 :: 		
0x02A6	0x483A    LDR	R0, [PC, #232]
0x02A8	0xEA020100  AND	R1, R2, R0, LSL #0
0x02AC	0x4839    LDR	R0, [PC, #228]
0x02AE	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 426 :: 		
0x02B0	0xF0020001  AND	R0, R2, #1
0x02B4	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC255
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x02B6	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 427 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC239:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x02B8	0x4836    LDR	R0, [PC, #216]
0x02BA	0x6800    LDR	R0, [R0, #0]
0x02BC	0xF0000002  AND	R0, R0, #2
0x02C0	0x2800    CMP	R0, #0
0x02C2	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC240
;__Lib_System_105_107.c, 428 :: 		
0x02C4	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC239
L___Lib_System_105_107_InitialSetUpRCCRCC240:
;__Lib_System_105_107.c, 429 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x02C6	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC238
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC255:
;__Lib_System_105_107.c, 426 :: 		
0x02C8	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 429 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC238:
;__Lib_System_105_107.c, 431 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x02CA	0xF4023080  AND	R0, R2, #65536
0x02CE	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC256
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
0x02D0	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 432 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC242:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x02D2	0x4830    LDR	R0, [PC, #192]
0x02D4	0x6800    LDR	R0, [R0, #0]
0x02D6	0xF4003000  AND	R0, R0, #131072
0x02DA	0x2800    CMP	R0, #0
0x02DC	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC243
;__Lib_System_105_107.c, 433 :: 		
0x02DE	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC242
L___Lib_System_105_107_InitialSetUpRCCRCC243:
;__Lib_System_105_107.c, 434 :: 		
; ulRCC_CR end address is: 8 (R2)
0x02E0	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC241
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC256:
;__Lib_System_105_107.c, 431 :: 		
0x02E2	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 434 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC241:
;__Lib_System_105_107.c, 436 :: 		
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x02E4	0xF0025080  AND	R0, R2, #268435456
0x02E8	0xB168    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC257
;__Lib_System_105_107.c, 437 :: 		
0x02EA	0x482A    LDR	R0, [PC, #168]
0x02EC	0x6800    LDR	R0, [R0, #0]
0x02EE	0xF0405180  ORR	R1, R0, #268435456
0x02F2	0x4828    LDR	R0, [PC, #160]
0x02F4	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
;__Lib_System_105_107.c, 438 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC245:
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x02F6	0x4827    LDR	R0, [PC, #156]
0x02F8	0x6800    LDR	R0, [R0, #0]
0x02FA	0xF0005000  AND	R0, R0, #536870912
0x02FE	0x2800    CMP	R0, #0
0x0300	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC246
;__Lib_System_105_107.c, 439 :: 		
0x0302	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC245
L___Lib_System_105_107_InitialSetUpRCCRCC246:
;__Lib_System_105_107.c, 440 :: 		
; ulRCC_CR end address is: 8 (R2)
0x0304	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC244
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC257:
;__Lib_System_105_107.c, 436 :: 		
;__Lib_System_105_107.c, 440 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC244:
;__Lib_System_105_107.c, 442 :: 		
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x0306	0xF0026080  AND	R0, R2, #67108864
0x030A	0xB178    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC258
;__Lib_System_105_107.c, 443 :: 		
0x030C	0x4821    LDR	R0, [PC, #132]
0x030E	0x6800    LDR	R0, [R0, #0]
0x0310	0xF0406180  ORR	R1, R0, #67108864
0x0314	0x481F    LDR	R0, [PC, #124]
0x0316	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x0318	0x4611    MOV	R1, R2
0x031A	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 444 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC248:
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x031C	0x481D    LDR	R0, [PC, #116]
0x031E	0x6800    LDR	R0, [R0, #0]
0x0320	0xF0006000  AND	R0, R0, #134217728
0x0324	0x2800    CMP	R0, #0
0x0326	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC249
;__Lib_System_105_107.c, 445 :: 		
0x0328	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC248
L___Lib_System_105_107_InitialSetUpRCCRCC249:
;__Lib_System_105_107.c, 446 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x032A	0xE001    B	L___Lib_System_105_107_InitialSetUpRCCRCC247
; ulRCC_CR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC258:
;__Lib_System_105_107.c, 442 :: 		
0x032C	0x4611    MOV	R1, R2
0x032E	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 446 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC247:
;__Lib_System_105_107.c, 448 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x0330	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x0334	0xB170    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC259
;__Lib_System_105_107.c, 449 :: 		
0x0336	0x4817    LDR	R0, [PC, #92]
0x0338	0x6800    LDR	R0, [R0, #0]
0x033A	0xF0407180  ORR	R1, R0, #16777216
0x033E	0x4815    LDR	R0, [PC, #84]
0x0340	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x0342	0x4611    MOV	R1, R2
;__Lib_System_105_107.c, 450 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC251:
; ulRCC_CFGR start address is: 4 (R1)
0x0344	0x4813    LDR	R0, [PC, #76]
0x0346	0x6800    LDR	R0, [R0, #0]
0x0348	0xF0007000  AND	R0, R0, #33554432
0x034C	0xB900    CBNZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC252
;__Lib_System_105_107.c, 451 :: 		
0x034E	0xE7F9    B	L___Lib_System_105_107_InitialSetUpRCCRCC251
L___Lib_System_105_107_InitialSetUpRCCRCC252:
;__Lib_System_105_107.c, 452 :: 		
0x0350	0x460A    MOV	R2, R1
0x0352	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC250
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC259:
;__Lib_System_105_107.c, 448 :: 		
;__Lib_System_105_107.c, 452 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC250:
;__Lib_System_105_107.c, 456 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC253:
; ulRCC_CFGR start address is: 8 (R2)
0x0354	0x480C    LDR	R0, [PC, #48]
0x0356	0x6800    LDR	R0, [R0, #0]
0x0358	0xF000010C  AND	R1, R0, #12
0x035C	0x0090    LSLS	R0, R2, #2
0x035E	0xF000000C  AND	R0, R0, #12
0x0362	0x4281    CMP	R1, R0
0x0364	0xD000    BEQ	L___Lib_System_105_107_InitialSetUpRCCRCC254
;__Lib_System_105_107.c, 457 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x0366	0xE7F5    B	L___Lib_System_105_107_InitialSetUpRCCRCC253
L___Lib_System_105_107_InitialSetUpRCCRCC254:
;__Lib_System_105_107.c, 458 :: 		
L_end_InitialSetUpRCCRCC2:
0x0368	0xF8DDE000  LDR	LR, [SP, #0]
0x036C	0xB001    ADD	SP, SP, #4
0x036E	0x4770    BX	LR
0x0370	0x00811501  	#352387201
0x0374	0x8402091D  	#152929282
0x0378	0xF6440001  	#128580
0x037C	0x19400001  	#72000
0x0380	0x06500000  	__Lib_System_105_107_APBAHBPrescTable+0
0x0384	0x20004002  	FLASH_ACR+0
0x0388	0x10044002  	RCC_CFGR+0
0x038C	0x102C4002  	RCC_CFGR2+0
0x0390	0xFFFF000F  	#1048575
0x0394	0x10004002  	RCC_CR+0
; end of __Lib_System_105_107_InitialSetUpRCCRCC2
__Lib_System_105_107_SystemClockSetDefault:
;__Lib_System_105_107.c, 360 :: 		
0x0168	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 363 :: 		
0x016A	0x4815    LDR	R0, [PC, #84]
0x016C	0x6800    LDR	R0, [R0, #0]
0x016E	0xF0400101  ORR	R1, R0, #1
0x0172	0x4813    LDR	R0, [PC, #76]
0x0174	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 366 :: 		
0x0176	0x4913    LDR	R1, [PC, #76]
0x0178	0x4813    LDR	R0, [PC, #76]
0x017A	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 369 :: 		
0x017C	0x4810    LDR	R0, [PC, #64]
0x017E	0x6801    LDR	R1, [R0, #0]
0x0180	0x4812    LDR	R0, [PC, #72]
0x0182	0x4001    ANDS	R1, R0
0x0184	0x480E    LDR	R0, [PC, #56]
0x0186	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 372 :: 		
0x0188	0x480D    LDR	R0, [PC, #52]
0x018A	0x6801    LDR	R1, [R0, #0]
0x018C	0xF46F2080  MVN	R0, #262144
0x0190	0x4001    ANDS	R1, R0
0x0192	0x480B    LDR	R0, [PC, #44]
0x0194	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 375 :: 		
0x0196	0x480C    LDR	R0, [PC, #48]
0x0198	0x6801    LDR	R1, [R0, #0]
0x019A	0xF46F00FE  MVN	R0, #8323072
0x019E	0x4001    ANDS	R1, R0
0x01A0	0x4809    LDR	R0, [PC, #36]
0x01A2	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 378 :: 		
0x01A4	0x4806    LDR	R0, [PC, #24]
0x01A6	0x6801    LDR	R1, [R0, #0]
0x01A8	0xF06F50A0  MVN	R0, #335544320
0x01AC	0x4001    ANDS	R1, R0
0x01AE	0x4804    LDR	R0, [PC, #16]
0x01B0	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 381 :: 		
0x01B2	0xF04F0100  MOV	R1, #0
0x01B6	0x4806    LDR	R0, [PC, #24]
0x01B8	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 385 :: 		
L_end_SystemClockSetDefault:
0x01BA	0xB001    ADD	SP, SP, #4
0x01BC	0x4770    BX	LR
0x01BE	0xBF00    NOP
0x01C0	0x10004002  	RCC_CR+0
0x01C4	0x0000F0FF  	#-251723776
0x01C8	0x10044002  	RCC_CFGR+0
0x01CC	0xFFFFFEF6  	#-17367041
0x01D0	0x102C4002  	RCC_CFGR2+0
; end of __Lib_System_105_107_SystemClockSetDefault
__Lib_System_105_107_InitialSetUpFosc:
;__Lib_System_105_107.c, 460 :: 		
0x0224	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 461 :: 		
0x0226	0x4902    LDR	R1, [PC, #8]
0x0228	0x4802    LDR	R0, [PC, #8]
0x022A	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 462 :: 		
L_end_InitialSetUpFosc:
0x022C	0xB001    ADD	SP, SP, #4
0x022E	0x4770    BX	LR
0x0230	0x19400001  	#72000
0x0234	0x00082000  	___System_CLOCK_IN_KHZ+0
; end of __Lib_System_105_107_InitialSetUpFosc
___GenExcept:
;__Lib_System_105_107.c, 311 :: 		
0x0238	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 312 :: 		
L___GenExcept30:
0x023A	0xE7FE    B	L___GenExcept30
;__Lib_System_105_107.c, 313 :: 		
L_end___GenExcept:
0x023C	0xB001    ADD	SP, SP, #4
0x023E	0x4770    BX	LR
; end of ___GenExcept
0x0668	0xB500    PUSH	(R14)
0x066A	0xF8DFB024  LDR	R11, [PC, #36]
0x066E	0xF8DFA024  LDR	R10, [PC, #36]
0x0672	0xF8DFC024  LDR	R12, [PC, #36]
0x0676	0xF7FFFDCB  BL	528
0x067A	0xF8DFB020  LDR	R11, [PC, #32]
0x067E	0xF8DFA020  LDR	R10, [PC, #32]
0x0682	0xF8DFC020  LDR	R12, [PC, #32]
0x0686	0xF7FFFDC3  BL	528
0x068A	0xBD00    POP	(R15)
0x068C	0x4770    BX	LR
0x068E	0xBF00    NOP
0x0690	0x00002000  	#536870912
0x0694	0x00032000  	#536870915
0x0698	0x06640000  	#1636
0x069C	0x00042000  	#536870916
0x06A0	0x00082000  	#536870920
0x06A4	0x06600000  	#1632
0x0704	0xB500    PUSH	(R14)
0x0706	0xF8DFB010  LDR	R11, [PC, #16]
0x070A	0xF8DFA010  LDR	R10, [PC, #16]
0x070E	0xF7FFFD61  BL	468
0x0712	0xBD00    POP	(R15)
0x0714	0x4770    BX	LR
0x0716	0xBF00    NOP
0x0718	0x00002000  	#536870912
0x071C	0x000C2000  	#536870924
;__Lib_System_105_107.c,388 :: __Lib_System_105_107_APBAHBPrescTable [16]
0x0650	0x00000000 ;__Lib_System_105_107_APBAHBPrescTable+0
0x0654	0x04030201 ;__Lib_System_105_107_APBAHBPrescTable+4
0x0658	0x04030201 ;__Lib_System_105_107_APBAHBPrescTable+8
0x065C	0x09080706 ;__Lib_System_105_107_APBAHBPrescTable+12
; end of __Lib_System_105_107_APBAHBPrescTable
;P3_LED_BONUS.c,0 :: ?ICS_PA0_PWM_phase [4]
0x0660	0x00000000 ;?ICS_PA0_PWM_phase+0
; end of ?ICS_PA0_PWM_phase
;,0 :: _initBlock_2 [2]
; Containing: ?ICS_PD_LOW_NUM [1]
;             ?ICS_PD_HIGH_NUM [1]
0x0664	0x33FF ;_initBlock_2+0 : ?ICS_PD_LOW_NUM at 0x0664 : ?ICS_PD_HIGH_NUM at 0x0665
; end of _initBlock_2
;P3_LED_BONUS.c,0 :: ?ICS_PE_display_mode [1]
0x0666	0x00 ;?ICS_PE_display_mode+0
; end of ?ICS_PE_display_mode
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0150      [24]    _update_PD_LED
0x0168     [108]    __Lib_System_105_107_SystemClockSetDefault
0x01D4      [58]    ___FillZeros
0x0210      [20]    ___CC2DW
0x0224      [20]    __Lib_System_105_107_InitialSetUpFosc
0x0238       [8]    ___GenExcept
0x0240     [344]    __Lib_System_105_107_InitialSetUpRCCRCC2
0x0398     [696]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x20000000       [1]    _PD_LOW_NUM
0x20000001       [1]    _PD_HIGH_NUM
0x20000002       [1]    _PE_display_mode
0x20000004       [4]    _PA0_PWM_phase
0x20000008       [4]    ___System_CLOCK_IN_KHZ
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0650      [16]    __Lib_System_105_107_APBAHBPrescTable
0x0660       [4]    ?ICS_PA0_PWM_phase
0x0664       [1]    ?ICS_PD_LOW_NUM
0x0665       [1]    ?ICS_PD_HIGH_NUM
0x0666       [1]    ?ICS_PE_display_mode
